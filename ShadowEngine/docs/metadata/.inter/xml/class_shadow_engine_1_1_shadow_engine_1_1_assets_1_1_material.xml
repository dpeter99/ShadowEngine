<?xml version="1.0" encoding="utf-8" standalone="no"?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_shadow_engine_1_1_shadow_engine_1_1_assets_1_1_material" kind="class" language="C++" prot="public">
    <compoundname>ShadowEngine::ShadowEngine::Assets::Material</compoundname>
    <basecompoundref prot="public" virt="non-virtual">ShadowAsset</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_shadow_engine_1_1_shadow_engine_1_1_assets_1_1_material_1a1ebefd5622da3b6e6c86308926009417" prot="private" static="no" mutable="no">
        <type>SHObject_Base(<ref refid="class_shadow_engine_1_1_shadow_engine_1_1_assets_1_1_material" kindref="compound">Material</ref>) private Ref&lt;<ref refid="class_shadow_engine_1_1_rendering_1_1_shader_property_sheet" kindref="compound">Rendering::ShaderPropertySheet</ref>&gt;</type>
        <definition>SHObject_Base (Material) private Ref&lt;Rendering::ShaderPropertySheet&gt; ShadowEngine::ShadowEngine::Assets::Material::properties</definition>
        <argsstring></argsstring>
        <name>properties</name>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowAsset/Assets/Material.h" line="23" column="1" bodyfile="ShadowEngine/src/ShadowAsset/Assets/Material.h" bodystart="18" bodyend="-1" />
      </memberdef>
      <memberdef kind="variable" id="class_shadow_engine_1_1_shadow_engine_1_1_assets_1_1_material_1ad856dd35ec328de612ff40d65a691cdf" prot="private" static="no" mutable="no">
        <type>Ref&lt;<ref refid="class_shadow_engine_1_1_rendering_1_1_constant_buffer" kindref="compound">Rendering::ConstantBuffer</ref>&gt;</type>
        <definition>Ref&lt;Rendering::ConstantBuffer&gt; ShadowEngine::ShadowEngine::Assets::Material::shaderData</definition>
        <argsstring></argsstring>
        <name>shaderData</name>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowAsset/Assets/Material.h" line="25" column="1" bodyfile="ShadowEngine/src/ShadowAsset/Assets/Material.h" bodystart="25" bodyend="-1" />
      </memberdef>
      <memberdef kind="variable" id="class_shadow_engine_1_1_shadow_engine_1_1_assets_1_1_material_1ae2862c22d4e56857d83df79b6e1c43fe" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ShadowEngine::ShadowEngine::Assets::Material::dirty</definition>
        <argsstring></argsstring>
        <name>dirty</name>
        <initializer>= true</initializer>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowAsset/Assets/Material.h" line="26" column="1" bodyfile="ShadowEngine/src/ShadowAsset/Assets/Material.h" bodystart="26" bodyend="-1" />
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_shadow_engine_1_1_shadow_engine_1_1_assets_1_1_material_1a4b7019a9f795ee50236499c88739f176" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Ref&lt;<ref refid="class_shadow_engine_1_1_rendering_1_1_shader_property_sheet" kindref="compound">Rendering::ShaderPropertySheet</ref>&gt; &amp;</type>
        <definition>Ref&lt;Rendering::ShaderPropertySheet&gt; &amp; ShadowEngine::Assets::Material::GetProperties</definition>
        <argsstring>()</argsstring>
        <name>GetProperties</name>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowAsset/Assets/Material.h" line="28" column="1" bodyfile="ShadowEngine/src/ShadowAsset/Assets/Material.cpp" bodystart="7" bodyend="10" />
      </memberdef>
      <memberdef kind="function" id="class_shadow_engine_1_1_shadow_engine_1_1_assets_1_1_material_1a6db4497dbe16af14eea05f5ccbaad63c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Ref&lt;<ref refid="class_shadow_engine_1_1_rendering_1_1_shader" kindref="compound">Rendering::Shader</ref>&gt;</type>
        <definition>Ref&lt;Rendering::Shader&gt; ShadowEngine::Assets::Material::GetShader</definition>
        <argsstring>()</argsstring>
        <name>GetShader</name>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowAsset/Assets/Material.h" line="29" column="1" bodyfile="ShadowEngine/src/ShadowAsset/Assets/Material.cpp" bodystart="12" bodyend="15" />
      </memberdef>
      <memberdef kind="function" id="class_shadow_engine_1_1_shadow_engine_1_1_assets_1_1_material_1af3c33e461ca9ad531f5a2b78c771a423" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ShadowEngine::ShadowEngine::Assets::Material::SetProperty</definition>
        <argsstring>(const std::string &amp;name, const T &amp;value)</argsstring>
        <name>SetProperty</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowAsset/Assets/Material.h" line="32" column="1" bodyfile="ShadowEngine/src/ShadowAsset/Assets/Material.h" bodystart="32" bodyend="42" />
      </memberdef>
      <memberdef kind="function" id="class_shadow_engine_1_1_shadow_engine_1_1_assets_1_1_material_1aab79a3cb508e2b6ee7d0386fcfaa3336" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Ref&lt;<ref refid="class_shadow_engine_1_1_rendering_1_1_constant_buffer" kindref="compound">Rendering::ConstantBuffer</ref>&gt; &amp;</type>
        <definition>Ref&lt;Rendering::ConstantBuffer&gt; &amp; ShadowEngine::Assets::Material::GetBuffer</definition>
        <argsstring>()</argsstring>
        <name>GetBuffer</name>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowAsset/Assets/Material.h" line="44" column="1" bodyfile="ShadowEngine/src/ShadowAsset/Assets/Material.cpp" bodystart="17" bodyend="20" />
      </memberdef>
      <memberdef kind="function" id="class_shadow_engine_1_1_shadow_engine_1_1_assets_1_1_material_1a705f188b9d08bf65511bd5cb59f30365" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ShadowEngine::Assets::Material::UpdateBufferIfDirty</definition>
        <argsstring>()</argsstring>
        <name>UpdateBufferIfDirty</name>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowAsset/Assets/Material.h" line="45" column="1" bodyfile="ShadowEngine/src/ShadowAsset/Assets/Material.cpp" bodystart="22" bodyend="29" />
      </memberdef>
      <memberdef kind="function" id="class_shadow_engine_1_1_shadow_engine_1_1_assets_1_1_material_1acf5191e010460bd707145a776f67dfa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ShadowEngine::Assets::Material::Material</definition>
        <argsstring>(const Ref&lt;Rendering::Shader&gt; &amp;shader)</argsstring>
        <name>Material</name>
        <param>
          <type>const Ref&lt;<ref refid="class_shadow_engine_1_1_rendering_1_1_shader" kindref="compound">Rendering::Shader</ref>&gt; &amp;</type>
          <declname>shader</declname>
        </param>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowAsset/Assets/Material.h" line="48" column="1" bodyfile="ShadowEngine/src/ShadowAsset/Assets/Material.cpp" bodystart="31" bodyend="38" />
      </memberdef>
    </sectiondef>
    <briefdescription></briefdescription>
    <detaileddescription></detaileddescription>
    <inheritancegraph>
      <node id="350">
        <label>ShadowAsset</label>
      </node>
      <node id="349">
        <label>ShadowEngine::ShadowEngine::Assets::Material</label>
        <link refid="class_shadow_engine_1_1_shadow_engine_1_1_assets_1_1_material" />
        <childnode refid="350" relation="public-inheritance"></childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="352">
        <label>ShadowAsset</label>
      </node>
      <node id="351">
        <label>ShadowEngine::ShadowEngine::Assets::Material</label>
        <link refid="class_shadow_engine_1_1_shadow_engine_1_1_assets_1_1_material" />
        <childnode refid="352" relation="public-inheritance"></childnode>
      </node>
    </collaborationgraph>
    <location file="ShadowEngine/src/ShadowAsset/Assets/Material.h" line="17" column="1" bodyfile="ShadowEngine/src/ShadowAsset/Assets/Material.h" bodystart="16" bodyend="50" />
    <listofallmembers>
      <member refid="class_shadow_engine_1_1_shadow_engine_1_1_assets_1_1_material_1ae2862c22d4e56857d83df79b6e1c43fe" prot="private" virt="non-virtual">
        <scope>ShadowEngine::ShadowEngine::Assets::Material</scope>
        <name>dirty</name>
      </member>
      <member refid="class_shadow_engine_1_1_shadow_engine_1_1_assets_1_1_material_1aab79a3cb508e2b6ee7d0386fcfaa3336" prot="public" virt="non-virtual">
        <scope>ShadowEngine::ShadowEngine::Assets::Material</scope>
        <name>GetBuffer</name>
      </member>
      <member refid="class_shadow_engine_1_1_shadow_engine_1_1_assets_1_1_material_1a4b7019a9f795ee50236499c88739f176" prot="public" virt="non-virtual">
        <scope>ShadowEngine::ShadowEngine::Assets::Material</scope>
        <name>GetProperties</name>
      </member>
      <member refid="class_shadow_engine_1_1_shadow_engine_1_1_assets_1_1_material_1a6db4497dbe16af14eea05f5ccbaad63c" prot="public" virt="non-virtual">
        <scope>ShadowEngine::ShadowEngine::Assets::Material</scope>
        <name>GetShader</name>
      </member>
      <member refid="class_shadow_engine_1_1_shadow_engine_1_1_assets_1_1_material_1acf5191e010460bd707145a776f67dfa3" prot="public" virt="non-virtual">
        <scope>ShadowEngine::ShadowEngine::Assets::Material</scope>
        <name>Material</name>
      </member>
      <member refid="class_shadow_engine_1_1_shadow_engine_1_1_assets_1_1_material_1a1ebefd5622da3b6e6c86308926009417" prot="private" virt="non-virtual">
        <scope>ShadowEngine::ShadowEngine::Assets::Material</scope>
        <name>properties</name>
      </member>
      <member refid="class_shadow_engine_1_1_shadow_engine_1_1_assets_1_1_material_1af3c33e461ca9ad531f5a2b78c771a423" prot="public" virt="non-virtual">
        <scope>ShadowEngine::ShadowEngine::Assets::Material</scope>
        <name>SetProperty</name>
      </member>
      <member refid="class_shadow_engine_1_1_shadow_engine_1_1_assets_1_1_material_1ad856dd35ec328de612ff40d65a691cdf" prot="private" virt="non-virtual">
        <scope>ShadowEngine::ShadowEngine::Assets::Material</scope>
        <name>shaderData</name>
      </member>
      <member refid="class_shadow_engine_1_1_shadow_engine_1_1_assets_1_1_material_1a705f188b9d08bf65511bd5cb59f30365" prot="public" virt="non-virtual">
        <scope>ShadowEngine::ShadowEngine::Assets::Material</scope>
        <name>UpdateBufferIfDirty</name>
      </member>
    </listofallmembers>
  </compounddef>
</doxygen>