<?xml version="1.0" encoding="utf-8" standalone="no"?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="ShadowEngine.Debug.DebugModule" kind="class" language="C++" prot="public">
    <compoundname>ShadowEngine::Debug::DebugModule</compoundname>
    <basecompoundref refid="ShadowEngine.ShadowModule" prot="public" virt="non-virtual">ShadowEngine::ShadowModule</basecompoundref>
    <basecompoundref refid="ShadowEngine.EventSystem.IShadowEventListener" prot="public" virt="non-virtual">ShadowEngine::EventSystem::IShadowEventListener</basecompoundref>
    <basecompoundref refid="ShadowEngine.DebugGui.IShadowImGui" prot="public" virt="non-virtual">ShadowEngine::DebugGui::IShadowImGui</basecompoundref>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="ShadowEngine.Debug.DebugModule.active" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ShadowEngine::Debug::DebugModule::active</definition>
        <argsstring></argsstring>
        <name>active</name>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/Debug/Debug.h" line="19" column="1" bodyfile="ShadowEngine/src/Debug/Debug.h" bodystart="19" bodyend="-1" />
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="ShadowEngine.Debug.DebugModule.DebugModule::ActionDebug()" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ShadowEngine::Debug::DebugModule::DebugModule::ActionDebug</definition>
        <argsstring>()</argsstring>
        <name>DebugModule::ActionDebug</name>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/Debug/Debug.h" line="15" column="1" />
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="ShadowEngine.Debug.DebugModule.Init()" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ShadowEngine::Debug::DebugModule::Init</definition>
        <argsstring>() override</argsstring>
        <name>Init</name>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/Debug/Debug.h" line="21" column="1" bodyfile="ShadowEngine/src/Debug/Debug.cpp" bodystart="29" bodyend="37" />
      </memberdef>
      <memberdef kind="function" id="ShadowEngine.Debug.DebugModule.Update()" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void ShadowEngine::Debug::DebugModule::Update</definition>
        <argsstring>() override</argsstring>
        <name>Update</name>
        <reimplements refid="ShadowEngine.ShadowModule.Update()">Update</reimplements>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/Debug/Debug.h" line="22" column="1" bodyfile="ShadowEngine/src/Debug/Debug.h" bodystart="22" bodyend="22" />
      </memberdef>
      <memberdef kind="function" id="ShadowEngine.Debug.DebugModule.Render()" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void ShadowEngine::Debug::DebugModule::Render</definition>
        <argsstring>() override</argsstring>
        <name>Render</name>
        <reimplements refid="ShadowEngine.ShadowModule.Render()">Render</reimplements>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/Debug/Debug.h" line="23" column="1" bodyfile="ShadowEngine/src/Debug/Debug.h" bodystart="23" bodyend="23" />
      </memberdef>
      <memberdef kind="function" id="ShadowEngine.Debug.DebugModule.LateRender()" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void ShadowEngine::Debug::DebugModule::LateRender</definition>
        <argsstring>() override</argsstring>
        <name>LateRender</name>
        <reimplements refid="ShadowEngine.ShadowModule.LateRender()">LateRender</reimplements>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/Debug/Debug.h" line="24" column="1" bodyfile="ShadowEngine/src/Debug/Debug.h" bodystart="24" bodyend="24" />
      </memberdef>
      <memberdef kind="function" id="ShadowEngine.Debug.DebugModule.GetName()" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string ShadowEngine::Debug::DebugModule::GetName</definition>
        <argsstring>() override</argsstring>
        <name>GetName</name>
        <reimplements refid="ShadowEngine.ShadowModule.GetName()">GetName</reimplements>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/Debug/Debug.h" line="26" column="1" bodyfile="ShadowEngine/src/Debug/Debug.h" bodystart="26" bodyend="26" />
      </memberdef>
      <memberdef kind="function" id="ShadowEngine.Debug.DebugModule.OnEvent(EventSystem::ShadowEvent &amp;)" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ShadowEngine::Debug::DebugModule::OnEvent</definition>
        <argsstring>(EventSystem::ShadowEvent &amp;e) override</argsstring>
        <name>OnEvent</name>
        <reimplements refid="ShadowEngine.EventSystem.IShadowEventListener.OnEvent(ShadowEvent &amp;)">OnEvent</reimplements>
        <param>
          <type>
            <ref refid="ShadowEngine.EventSystem.ShadowEvent" kindref="compound">EventSystem::ShadowEvent</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/Debug/Debug.h" line="28" column="1" bodyfile="ShadowEngine/src/Debug/Debug.cpp" bodystart="39" bodyend="42" />
      </memberdef>
      <memberdef kind="function" id="ShadowEngine.Debug.DebugModule.OnGui()" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ShadowEngine::Debug::DebugModule::OnGui</definition>
        <argsstring>() override</argsstring>
        <name>OnGui</name>
        <reimplements refid="ShadowEngine.DebugGui.IShadowImGui.OnGui()">OnGui</reimplements>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/Debug/Debug.h" line="30" column="1" bodyfile="ShadowEngine/src/Debug/Debug.cpp" bodystart="65" bodyend="93" />
      </memberdef>
      <memberdef kind="function" id="ShadowEngine.Debug.DebugModule.DebugModule()" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ShadowEngine::Debug::DebugModule::DebugModule</definition>
        <argsstring>()</argsstring>
        <name>DebugModule</name>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/Debug/Debug.h" line="33" column="1" bodyfile="ShadowEngine/src/Debug/Debug.cpp" bodystart="19" bodyend="21" />
      </memberdef>
      <memberdef kind="function" id="ShadowEngine.Debug.DebugModule.~DebugModule()" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>ShadowEngine::Debug::DebugModule::~DebugModule</definition>
        <argsstring>()</argsstring>
        <name>~DebugModule</name>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/Debug/Debug.h" line="34" column="1" bodyfile="ShadowEngine/src/Debug/Debug.cpp" bodystart="23" bodyend="25" />
      </memberdef>
    </sectiondef>
    <briefdescription></briefdescription>
    <detaileddescription></detaileddescription>
    <inheritancegraph>
      <node id="141">
        <label>ShadowEngine::SHObject</label>
        <link refid="ShadowEngine.SHObject" />
      </node>
      <node id="142">
        <label>ShadowEngine::EventSystem::IShadowEventListener</label>
        <link refid="ShadowEngine.EventSystem.IShadowEventListener" />
      </node>
      <node id="143">
        <label>ShadowEngine::DebugGui::IShadowImGui</label>
        <link refid="ShadowEngine.DebugGui.IShadowImGui" />
      </node>
      <node id="139">
        <label>ShadowEngine::Debug::DebugModule</label>
        <link refid="ShadowEngine.Debug.DebugModule" />
        <childnode refid="140" relation="public-inheritance"></childnode>
        <childnode refid="142" relation="public-inheritance"></childnode>
        <childnode refid="143" relation="public-inheritance"></childnode>
      </node>
      <node id="140">
        <label>ShadowEngine::ShadowModule</label>
        <link refid="ShadowEngine.ShadowModule" />
        <childnode refid="141" relation="public-inheritance"></childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="146">
        <label>ShadowEngine::SHObject</label>
        <link refid="ShadowEngine.SHObject" />
      </node>
      <node id="147">
        <label>ShadowEngine::EventSystem::IShadowEventListener</label>
        <link refid="ShadowEngine.EventSystem.IShadowEventListener" />
      </node>
      <node id="148">
        <label>ShadowEngine::DebugGui::IShadowImGui</label>
        <link refid="ShadowEngine.DebugGui.IShadowImGui" />
      </node>
      <node id="144">
        <label>ShadowEngine::Debug::DebugModule</label>
        <link refid="ShadowEngine.Debug.DebugModule" />
        <childnode refid="145" relation="public-inheritance"></childnode>
        <childnode refid="147" relation="public-inheritance"></childnode>
        <childnode refid="148" relation="public-inheritance"></childnode>
      </node>
      <node id="145">
        <label>ShadowEngine::ShadowModule</label>
        <link refid="ShadowEngine.ShadowModule" />
        <childnode refid="146" relation="public-inheritance"></childnode>
      </node>
    </collaborationgraph>
    <location file="ShadowEngine/src/Debug/Debug.h" line="13" column="1" bodyfile="ShadowEngine/src/Debug/Debug.h" bodystart="9" bodyend="35" />
    <listofallmembers>
      <member refid="ShadowEngine.Debug.DebugModule.active" prot="public" virt="non-virtual">
        <scope>ShadowEngine::Debug::DebugModule</scope>
        <name>active</name>
      </member>
      <member refid="ShadowEngine.Debug.DebugModule.DebugModule()" prot="public" virt="non-virtual">
        <scope>ShadowEngine::Debug::DebugModule</scope>
        <name>DebugModule</name>
      </member>
      <member refid="ShadowEngine.Debug.DebugModule.DebugModule::ActionDebug()" prot="private" virt="non-virtual">
        <scope>ShadowEngine::Debug::DebugModule</scope>
        <name>DebugModule::ActionDebug</name>
      </member>
      <member refid="ShadowEngine.SHObject.GenerateId()" prot="protected" virt="non-virtual">
        <scope>ShadowEngine::Debug::DebugModule</scope>
        <name>GenerateId</name>
      </member>
      <member refid="ShadowEngine.Debug.DebugModule.GetName()" prot="public" virt="virtual">
        <scope>ShadowEngine::Debug::DebugModule</scope>
        <name>GetName</name>
      </member>
      <member refid="ShadowEngine.SHObject.GetType()" prot="public" virt="pure-virtual">
        <scope>ShadowEngine::Debug::DebugModule</scope>
        <name>GetType</name>
      </member>
      <member refid="ShadowEngine.SHObject.GetTypeId()" prot="public" virt="pure-virtual">
        <scope>ShadowEngine::Debug::DebugModule</scope>
        <name>GetTypeId</name>
      </member>
      <member refid="ShadowEngine.Debug.DebugModule.Init()" prot="public" virt="non-virtual">
        <scope>ShadowEngine::Debug::DebugModule</scope>
        <name>Init</name>
      </member>
      <member refid="ShadowEngine.EventSystem.IShadowEventListener.IShadowEventListener()" prot="public" virt="non-virtual">
        <scope>ShadowEngine::Debug::DebugModule</scope>
        <name>IShadowEventListener</name>
      </member>
      <member refid="ShadowEngine.Debug.DebugModule.LateRender()" prot="public" virt="virtual">
        <scope>ShadowEngine::Debug::DebugModule</scope>
        <name>LateRender</name>
      </member>
      <member refid="ShadowEngine.Debug.DebugModule.OnEvent(EventSystem::ShadowEvent &amp;)" prot="public" virt="virtual">
        <scope>ShadowEngine::Debug::DebugModule</scope>
        <name>OnEvent</name>
      </member>
      <member refid="ShadowEngine.Debug.DebugModule.OnGui()" prot="public" virt="virtual">
        <scope>ShadowEngine::Debug::DebugModule</scope>
        <name>OnGui</name>
      </member>
      <member refid="ShadowEngine.Debug.DebugModule.Render()" prot="public" virt="virtual">
        <scope>ShadowEngine::Debug::DebugModule</scope>
        <name>Render</name>
      </member>
      <member refid="ShadowEngine.Debug.DebugModule.Update()" prot="public" virt="virtual">
        <scope>ShadowEngine::Debug::DebugModule</scope>
        <name>Update</name>
      </member>
      <member refid="ShadowEngine.Debug.DebugModule.~DebugModule()" prot="public" virt="virtual">
        <scope>ShadowEngine::Debug::DebugModule</scope>
        <name>~DebugModule</name>
      </member>
      <member refid="ShadowEngine.EventSystem.IShadowEventListener.~IShadowEventListener()" prot="public" virt="non-virtual">
        <scope>ShadowEngine::Debug::DebugModule</scope>
        <name>~IShadowEventListener</name>
      </member>
      <member refid="ShadowEngine.SHObject.~SHObject()" prot="public" virt="virtual">
        <scope>ShadowEngine::Debug::DebugModule</scope>
        <name>~SHObject</name>
      </member>
    </listofallmembers>
  </compounddef>
</doxygen>