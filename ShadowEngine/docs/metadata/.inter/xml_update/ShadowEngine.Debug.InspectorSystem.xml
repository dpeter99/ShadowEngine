<?xml version="1.0" encoding="utf-8" standalone="no"?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="ShadowEngine.Debug.InspectorSystem" kind="class" language="C++" prot="public">
    <compoundname>ShadowEngine::Debug::InspectorSystem</compoundname>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="ShadowEngine.Debug.InspectorSystem.inspectors" prot="private" static="yes" mutable="no">
        <type>std::map&lt;std::string, <ref refid="ShadowEngine.Debug.Inspector" kindref="compound">Inspector</ref> *&gt;</type>
        <definition>std::map&lt;std::string, Inspector *&gt; ShadowEngine::Debug::InspectorSystem::inspectors</definition>
        <argsstring></argsstring>
        <name>inspectors</name>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/Inspector/InspectorSystem.h" line="11" column="1" bodyfile="ShadowEngine/src/Inspector/InspectorSystem.h" bodystart="11" bodyend="-1" />
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="ShadowEngine.Debug.InspectorSystem.AddInspector(std::string,Inspector *)" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ShadowEngine::Debug::InspectorSystem::AddInspector</definition>
        <argsstring>(std::string name, Inspector *inspector)</argsstring>
        <name>AddInspector</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>
            <ref refid="ShadowEngine.Debug.Inspector" kindref="compound">Inspector</ref> *</type>
          <declname>inspector</declname>
        </param>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/Inspector/InspectorSystem.h" line="15" column="1" bodyfile="ShadowEngine/src/Inspector/InspectorSystem.cpp" bodystart="10" bodyend="13" />
      </memberdef>
      <memberdef kind="function" id="ShadowEngine.Debug.InspectorSystem.Draw(ShadowEngine::SHObject &amp;)" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ShadowEngine::Debug::InspectorSystem::Draw</definition>
        <argsstring>(ShadowEngine::SHObject &amp;obj)</argsstring>
        <name>Draw</name>
        <param>
          <type>
            <ref refid="ShadowEngine.SHObject" kindref="compound">ShadowEngine::SHObject</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/Inspector/InspectorSystem.h" line="17" column="1" bodyfile="ShadowEngine/src/Inspector/InspectorSystem.cpp" bodystart="15" bodyend="22" />
      </memberdef>
      <memberdef kind="function" id="ShadowEngine.Debug.InspectorSystem.DrawSub(ShadowEngine::SHObject &amp;)" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ShadowEngine::Debug::InspectorSystem::DrawSub</definition>
        <argsstring>(ShadowEngine::SHObject &amp;obj)</argsstring>
        <name>DrawSub</name>
        <param>
          <type>
            <ref refid="ShadowEngine.SHObject" kindref="compound">ShadowEngine::SHObject</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/Inspector/InspectorSystem.h" line="19" column="1" bodyfile="ShadowEngine/src/Inspector/InspectorSystem.cpp" bodystart="24" bodyend="29" />
      </memberdef>
    </sectiondef>
    <briefdescription></briefdescription>
    <detaileddescription></detaileddescription>
    <location file="ShadowEngine/src/Inspector/InspectorSystem.h" line="9" column="1" bodyfile="ShadowEngine/src/Inspector/InspectorSystem.h" bodystart="8" bodyend="20" />
    <listofallmembers>
      <member refid="ShadowEngine.Debug.InspectorSystem.AddInspector(std::string,Inspector *)" prot="public" virt="non-virtual">
        <scope>ShadowEngine::Debug::InspectorSystem</scope>
        <name>AddInspector</name>
      </member>
      <member refid="ShadowEngine.Debug.InspectorSystem.Draw(ShadowEngine::SHObject &amp;)" prot="public" virt="non-virtual">
        <scope>ShadowEngine::Debug::InspectorSystem</scope>
        <name>Draw</name>
      </member>
      <member refid="ShadowEngine.Debug.InspectorSystem.DrawSub(ShadowEngine::SHObject &amp;)" prot="public" virt="non-virtual">
        <scope>ShadowEngine::Debug::InspectorSystem</scope>
        <name>DrawSub</name>
      </member>
      <member refid="ShadowEngine.Debug.InspectorSystem.inspectors" prot="private" virt="non-virtual">
        <scope>ShadowEngine::Debug::InspectorSystem</scope>
        <name>inspectors</name>
      </member>
    </listofallmembers>
  </compounddef>
</doxygen>