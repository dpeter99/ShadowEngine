<?xml version="1.0" encoding="utf-8" standalone="no"?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="ShadowEngine.EventSystem.Events.KeyTypedEvent" kind="class" language="C++" prot="public">
    <compoundname>ShadowEngine::EventSystem::Events::KeyTypedEvent</compoundname>
    <basecompoundref refid="ShadowEngine.EventSystem.Events.KeyEvent" prot="public" virt="non-virtual">ShadowEngine::EventSystem::Events::KeyEvent</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="ShadowEngine.EventSystem.Events.KeyTypedEvent.keys" prot="private" static="no" mutable="no">
        <type>char *</type>
        <definition>char* ShadowEngine::EventSystem::Events::KeyTypedEvent::keys</definition>
        <argsstring></argsstring>
        <name>keys</name>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowEvents/Events/KeyEvents.h" line="88" column="1" bodyfile="ShadowEngine/src/ShadowEvents/Events/KeyEvents.h" bodystart="88" bodyend="-1" />
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="ShadowEngine.EventSystem.Events.KeyTypedEvent.SHObject_Base(KeyTypedEvent)" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ShadowEngine::EventSystem::Events::KeyTypedEvent::SHObject_Base</definition>
        <argsstring>(KeyTypedEvent) public</argsstring>
        <name>SHObject_Base</name>
        <param>
          <type>
            <ref refid="ShadowEngine.EventSystem.Events.KeyTypedEvent" kindref="compound">KeyTypedEvent</ref>
          </type>
        </param>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowEvents/Events/KeyEvents.h" line="67" column="1" bodyfile="ShadowEngine/src/ShadowEvents/Events/KeyEvents.h" bodystart="67" bodyend="73" />
      </memberdef>
      <memberdef kind="function" id="ShadowEngine.EventSystem.Events.KeyTypedEvent.ToString()" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string ShadowEngine::EventSystem::Events::KeyTypedEvent::ToString</definition>
        <argsstring>() const override</argsstring>
        <name>ToString</name>
        <reimplements refid="ShadowEngine.EventSystem.ShadowEvent.ToString()">ToString</reimplements>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowEvents/Events/KeyEvents.h" line="75" column="1" bodyfile="ShadowEngine/src/ShadowEvents/Events/KeyEvents.h" bodystart="75" bodyend="80" />
      </memberdef>
      <memberdef kind="function" id="ShadowEngine.EventSystem.Events.KeyTypedEvent.GetText()" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char *</type>
        <definition>char* ShadowEngine::EventSystem::Events::KeyTypedEvent::GetText</definition>
        <argsstring>()</argsstring>
        <name>GetText</name>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowEvents/Events/KeyEvents.h" line="82" column="1" bodyfile="ShadowEngine/src/ShadowEvents/Events/KeyEvents.h" bodystart="82" bodyend="85" />
      </memberdef>
    </sectiondef>
    <briefdescription></briefdescription>
    <detaileddescription></detaileddescription>
    <inheritancegraph>
      <node id="321">
        <label>ShadowEngine::SHObject</label>
        <link refid="ShadowEngine.SHObject" />
      </node>
      <node id="318">
        <label>ShadowEngine::EventSystem::Events::KeyTypedEvent</label>
        <link refid="ShadowEngine.EventSystem.Events.KeyTypedEvent" />
        <childnode refid="319" relation="public-inheritance"></childnode>
      </node>
      <node id="320">
        <label>ShadowEngine::EventSystem::ShadowEvent</label>
        <link refid="ShadowEngine.EventSystem.ShadowEvent" />
        <childnode refid="321" relation="public-inheritance"></childnode>
      </node>
      <node id="319">
        <label>ShadowEngine::EventSystem::Events::KeyEvent</label>
        <link refid="ShadowEngine.EventSystem.Events.KeyEvent" />
        <childnode refid="320" relation="public-inheritance"></childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="325">
        <label>ShadowEngine::SHObject</label>
        <link refid="ShadowEngine.SHObject" />
      </node>
      <node id="322">
        <label>ShadowEngine::EventSystem::Events::KeyTypedEvent</label>
        <link refid="ShadowEngine.EventSystem.Events.KeyTypedEvent" />
        <childnode refid="323" relation="public-inheritance"></childnode>
      </node>
      <node id="324">
        <label>ShadowEngine::EventSystem::ShadowEvent</label>
        <link refid="ShadowEngine.EventSystem.ShadowEvent" />
        <childnode refid="325" relation="public-inheritance"></childnode>
      </node>
      <node id="323">
        <label>ShadowEngine::EventSystem::Events::KeyEvent</label>
        <link refid="ShadowEngine.EventSystem.Events.KeyEvent" />
        <childnode refid="324" relation="public-inheritance"></childnode>
      </node>
    </collaborationgraph>
    <location file="ShadowEngine/src/ShadowEvents/Events/KeyEvents.h" line="66" column="1" bodyfile="ShadowEngine/src/ShadowEvents/Events/KeyEvents.h" bodystart="65" bodyend="89" />
    <listofallmembers>
      <member refid="ShadowEngine.SHObject.GenerateId()" prot="protected" virt="non-virtual">
        <scope>ShadowEngine::EventSystem::Events::KeyTypedEvent</scope>
        <name>GenerateId</name>
      </member>
      <member refid="ShadowEngine.EventSystem.ShadowEvent.GetSDLEvnet()" prot="public" virt="non-virtual">
        <scope>ShadowEngine::EventSystem::Events::KeyTypedEvent</scope>
        <name>GetSDLEvnet</name>
      </member>
      <member refid="ShadowEngine.EventSystem.Events.KeyTypedEvent.GetText()" prot="private" virt="non-virtual">
        <scope>ShadowEngine::EventSystem::Events::KeyTypedEvent</scope>
        <name>GetText</name>
      </member>
      <member refid="ShadowEngine.SHObject.GetType()" prot="public" virt="pure-virtual">
        <scope>ShadowEngine::EventSystem::Events::KeyTypedEvent</scope>
        <name>GetType</name>
      </member>
      <member refid="ShadowEngine.SHObject.GetTypeId()" prot="public" virt="pure-virtual">
        <scope>ShadowEngine::EventSystem::Events::KeyTypedEvent</scope>
        <name>GetTypeId</name>
      </member>
      <member refid="ShadowEngine.EventSystem.ShadowEvent.Handled" prot="public" virt="non-virtual">
        <scope>ShadowEngine::EventSystem::Events::KeyTypedEvent</scope>
        <name>Handled</name>
      </member>
      <member refid="ShadowEngine.EventSystem.Events.KeyTypedEvent.keys" prot="private" virt="non-virtual">
        <scope>ShadowEngine::EventSystem::Events::KeyTypedEvent</scope>
        <name>keys</name>
      </member>
      <member refid="ShadowEngine.EventSystem.ShadowEvent.ShadowEvent(SDL_Event *)" prot="public" virt="non-virtual">
        <scope>ShadowEngine::EventSystem::Events::KeyTypedEvent</scope>
        <name>ShadowEvent</name>
      </member>
      <member refid="ShadowEngine.EventSystem.Events.KeyTypedEvent.SHObject_Base(KeyTypedEvent)" prot="private" virt="non-virtual">
        <scope>ShadowEngine::EventSystem::Events::KeyTypedEvent</scope>
        <name>SHObject_Base</name>
      </member>
      <member refid="ShadowEngine.EventSystem.Events.KeyTypedEvent.ToString()" prot="private" virt="virtual">
        <scope>ShadowEngine::EventSystem::Events::KeyTypedEvent</scope>
        <name>ToString</name>
      </member>
      <member refid="ShadowEngine.EventSystem.ShadowEvent.~ShadowEvent()" prot="public" virt="virtual">
        <scope>ShadowEngine::EventSystem::Events::KeyTypedEvent</scope>
        <name>~ShadowEvent</name>
      </member>
      <member refid="ShadowEngine.SHObject.~SHObject()" prot="public" virt="virtual">
        <scope>ShadowEngine::EventSystem::Events::KeyTypedEvent</scope>
        <name>~SHObject</name>
      </member>
    </listofallmembers>
  </compounddef>
</doxygen>