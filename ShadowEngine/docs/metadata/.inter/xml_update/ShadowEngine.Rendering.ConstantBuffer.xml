<?xml version="1.0" encoding="utf-8" standalone="no"?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="ShadowEngine.Rendering.ConstantBuffer" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>ShadowEngine::Rendering::ConstantBuffer</compoundname>
    <derivedcompoundref refid="ShadowEngine.Rendering.ConstantBuffer_Typed" prot="public" virt="non-virtual">ShadowEngine::Rendering::ConstantBuffer_Typed&lt;ShadowEngine::Rendering::ModelData&gt;</derivedcompoundref>
    <derivedcompoundref refid="ShadowEngine.Rendering.ConstantBuffer_ShaderPropertySheet" prot="public" virt="non-virtual">ShadowEngine::Rendering::ConstantBuffer_ShaderPropertySheet</derivedcompoundref>
    <derivedcompoundref refid="ShadowEngine.Rendering.ConstantBuffer_Typed" prot="public" virt="non-virtual">ShadowEngine::Rendering::ConstantBuffer_Typed&lt;T&gt;</derivedcompoundref>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="ShadowEngine.Rendering.ConstantBuffer.impl" prot="protected" static="no" mutable="no">
        <type>Ref&lt;<ref refid="ShadowEngine.Rendering.ConstantBufferImpl" kindref="compound">ConstantBufferImpl</ref>&gt;</type>
        <definition>Ref&lt;ConstantBufferImpl&gt; ShadowEngine::Rendering::ConstantBuffer::impl</definition>
        <argsstring></argsstring>
        <name>impl</name>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowRenderer/ConstantBuffer.h" line="18" column="1" bodyfile="ShadowEngine/src/ShadowRenderer/ConstantBuffer.h" bodystart="18" bodyend="-1" />
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="ShadowEngine.Rendering.ConstantBuffer.~ConstantBuffer()" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual ShadowEngine::Rendering::ConstantBuffer::~ConstantBuffer</definition>
        <argsstring>()=default</argsstring>
        <name>~ConstantBuffer</name>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowRenderer/ConstantBuffer.h" line="20" column="1" />
      </memberdef>
      <memberdef kind="function" id="ShadowEngine.Rendering.ConstantBuffer.ConstantBuffer(size_t)" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ShadowEngine::Rendering::ConstantBuffer::ConstantBuffer</definition>
        <argsstring>(size_t size)</argsstring>
        <name>ConstantBuffer</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowRenderer/ConstantBuffer.h" line="22" column="1" bodyfile="ShadowEngine/src/ShadowRenderer/ConstantBuffer.h" bodystart="22" bodyend="25" />
      </memberdef>
      <memberdef kind="function" id="ShadowEngine.Rendering.ConstantBuffer.GetImpl()" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>Ref&lt;<ref refid="ShadowEngine.Rendering.ConstantBufferImpl" kindref="compound">ConstantBufferImpl</ref>&gt;</type>
        <definition>virtual Ref&lt;ConstantBufferImpl&gt; ShadowEngine::Rendering::ConstantBuffer::GetImpl</definition>
        <argsstring>() const</argsstring>
        <name>GetImpl</name>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowRenderer/ConstantBuffer.h" line="27" column="1" bodyfile="ShadowEngine/src/ShadowRenderer/ConstantBuffer.h" bodystart="27" bodyend="27" />
      </memberdef>
      <memberdef kind="function" id="ShadowEngine.Rendering.ConstantBuffer.As()" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* ShadowEngine::Rendering::ConstantBuffer::As</definition>
        <argsstring>()</argsstring>
        <name>As</name>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowRenderer/ConstantBuffer.h" line="30" column="1" bodyfile="ShadowEngine/src/ShadowRenderer/ConstantBuffer.h" bodystart="30" bodyend="33" />
      </memberdef>
      <memberdef kind="function" id="ShadowEngine.Rendering.ConstantBuffer.Set(void *)" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void ShadowEngine::Rendering::ConstantBuffer::Set</definition>
        <argsstring>(void *d)=0</argsstring>
        <name>Set</name>
        <reimplementedby refid="ShadowEngine.Rendering.ConstantBuffer_ShaderPropertySheet.Set(void *)">Set</reimplementedby>
        <reimplementedby refid="ShadowEngine.Rendering.ConstantBuffer_Typed.Set(void *)">Set</reimplementedby>
        <reimplementedby refid="ShadowEngine.Rendering.ConstantBuffer_Typed.Set(void *)">Set</reimplementedby>
        <param>
          <type>void *</type>
          <declname>d</declname>
        </param>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowRenderer/ConstantBuffer.h" line="37" column="1" />
      </memberdef>
      <memberdef kind="function" id="ShadowEngine.Rendering.ConstantBuffer.Upload()" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void ShadowEngine::Rendering::ConstantBuffer::Upload</definition>
        <argsstring>()=0</argsstring>
        <name>Upload</name>
        <reimplementedby refid="ShadowEngine.Rendering.ConstantBuffer_ShaderPropertySheet.Upload()">Upload</reimplementedby>
        <reimplementedby refid="ShadowEngine.Rendering.ConstantBuffer_Typed.Upload()">Upload</reimplementedby>
        <reimplementedby refid="ShadowEngine.Rendering.ConstantBuffer_Typed.Upload()">Upload</reimplementedby>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowRenderer/ConstantBuffer.h" line="38" column="1" />
      </memberdef>
    </sectiondef>
    <briefdescription></briefdescription>
    <detaileddescription></detaileddescription>
    <inheritancegraph>
      <node id="88">
        <label>ShadowEngine::Rendering::ConstantBuffer_Typed&lt;T&gt;</label>
        <link refid="ShadowEngine.Rendering.ConstantBuffer_Typed" />
        <childnode refid="85" relation="public-inheritance"></childnode>
      </node>
      <node id="87">
        <label>ShadowEngine::Rendering::ConstantBuffer_ShaderPropertySheet</label>
        <link refid="ShadowEngine.Rendering.ConstantBuffer_ShaderPropertySheet" />
        <childnode refid="85" relation="public-inheritance"></childnode>
      </node>
      <node id="86">
        <label>ShadowEngine::Rendering::ConstantBuffer_Typed&lt;ShadowEngine::Rendering::ModelData&gt;</label>
        <link refid="ShadowEngine.Rendering.ConstantBuffer_Typed" />
        <childnode refid="85" relation="public-inheritance"></childnode>
      </node>
      <node id="85">
        <label>ShadowEngine::Rendering::ConstantBuffer</label>
        <link refid="ShadowEngine.Rendering.ConstantBuffer" />
      </node>
    </inheritancegraph>
    <location file="ShadowEngine/src/ShadowRenderer/ConstantBuffer.h" line="16" column="1" bodyfile="ShadowEngine/src/ShadowRenderer/ConstantBuffer.h" bodystart="15" bodyend="40" />
    <listofallmembers>
      <member refid="ShadowEngine.Rendering.ConstantBuffer.As()" prot="public" virt="non-virtual">
        <scope>ShadowEngine::Rendering::ConstantBuffer</scope>
        <name>As</name>
      </member>
      <member refid="ShadowEngine.Rendering.ConstantBuffer.ConstantBuffer(size_t)" prot="public" virt="non-virtual">
        <scope>ShadowEngine::Rendering::ConstantBuffer</scope>
        <name>ConstantBuffer</name>
      </member>
      <member refid="ShadowEngine.Rendering.ConstantBuffer.GetImpl()" prot="public" virt="virtual">
        <scope>ShadowEngine::Rendering::ConstantBuffer</scope>
        <name>GetImpl</name>
      </member>
      <member refid="ShadowEngine.Rendering.ConstantBuffer.impl" prot="protected" virt="non-virtual">
        <scope>ShadowEngine::Rendering::ConstantBuffer</scope>
        <name>impl</name>
      </member>
      <member refid="ShadowEngine.Rendering.ConstantBuffer.Set(void *)" prot="public" virt="pure-virtual">
        <scope>ShadowEngine::Rendering::ConstantBuffer</scope>
        <name>Set</name>
      </member>
      <member refid="ShadowEngine.Rendering.ConstantBuffer.Upload()" prot="public" virt="pure-virtual">
        <scope>ShadowEngine::Rendering::ConstantBuffer</scope>
        <name>Upload</name>
      </member>
      <member refid="ShadowEngine.Rendering.ConstantBuffer.~ConstantBuffer()" prot="public" virt="virtual">
        <scope>ShadowEngine::Rendering::ConstantBuffer</scope>
        <name>~ConstantBuffer</name>
      </member>
    </listofallmembers>
  </compounddef>
</doxygen>