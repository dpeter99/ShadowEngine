<?xml version="1.0" encoding="utf-8" standalone="no"?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="ShadowEngine.Rendering.ConstantBuffer_Typed" kind="class" language="C++" prot="public">
    <compoundname>ShadowEngine::Rendering::ConstantBuffer_Typed</compoundname>
    <basecompoundref refid="ShadowEngine.Rendering.ConstantBuffer" prot="public" virt="non-virtual">ShadowEngine::Rendering::ConstantBuffer</basecompoundref>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="ShadowEngine.Rendering.ConstantBuffer_Typed.data" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T ShadowEngine::Rendering::ConstantBuffer_Typed&lt;T&gt;::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowRenderer/ConstantBuffer.h" line="60" column="1" bodyfile="ShadowEngine/src/ShadowRenderer/ConstantBuffer.h" bodystart="60" bodyend="-1" />
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="ShadowEngine.Rendering.ConstantBuffer_Typed.ConstantBuffer_Typed()" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ShadowEngine::Rendering::ConstantBuffer_Typed&lt;T&gt;::ConstantBuffer_Typed</definition>
        <argsstring>()</argsstring>
        <name>ConstantBuffer_Typed</name>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowRenderer/ConstantBuffer.h" line="64" column="1" bodyfile="ShadowEngine/src/ShadowRenderer/ConstantBuffer.h" bodystart="64" bodyend="67" />
      </memberdef>
      <memberdef kind="function" id="ShadowEngine.Rendering.ConstantBuffer_Typed.operator=(const T &amp;)" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; ShadowEngine::Rendering::ConstantBuffer_Typed&lt;T&gt;::operator=</definition>
        <argsstring>(const T &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowRenderer/ConstantBuffer.h" line="69" column="1" bodyfile="ShadowEngine/src/ShadowRenderer/ConstantBuffer.h" bodystart="69" bodyend="72" />
      </memberdef>
      <memberdef kind="function" id="ShadowEngine.Rendering.ConstantBuffer_Typed.operator-&gt;()" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* ShadowEngine::Rendering::ConstantBuffer_Typed&lt;T&gt;::operator-&gt;</definition>
        <argsstring>()</argsstring>
        <name>operator-&gt;</name>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowRenderer/ConstantBuffer.h" line="74" column="1" bodyfile="ShadowEngine/src/ShadowRenderer/ConstantBuffer.h" bodystart="74" bodyend="76" />
      </memberdef>
      <memberdef kind="function" id="ShadowEngine.Rendering.ConstantBuffer_Typed.Set(void *)" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void ShadowEngine::Rendering::ConstantBuffer_Typed&lt;T&gt;::Set</definition>
        <argsstring>(void *d) override</argsstring>
        <name>Set</name>
        <reimplements refid="ShadowEngine.Rendering.ConstantBuffer.Set(void *)">Set</reimplements>
        <param>
          <type>void *</type>
          <declname>d</declname>
        </param>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowRenderer/ConstantBuffer.h" line="79" column="1" bodyfile="ShadowEngine/src/ShadowRenderer/ConstantBuffer.h" bodystart="79" bodyend="82" />
      </memberdef>
      <memberdef kind="function" id="ShadowEngine.Rendering.ConstantBuffer_Typed.Upload()" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void ShadowEngine::Rendering::ConstantBuffer_Typed&lt;T&gt;::Upload</definition>
        <argsstring>() override</argsstring>
        <name>Upload</name>
        <reimplements refid="ShadowEngine.Rendering.ConstantBuffer.Upload()">Upload</reimplements>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowRenderer/ConstantBuffer.h" line="84" column="1" bodyfile="ShadowEngine/src/ShadowRenderer/ConstantBuffer.h" bodystart="84" bodyend="87" />
      </memberdef>
    </sectiondef>
    <briefdescription></briefdescription>
    <detaileddescription></detaileddescription>
    <inheritancegraph>
      <node id="94">
        <label>ShadowEngine::Rendering::ConstantBuffer_Typed&lt;T&gt;</label>
        <link refid="ShadowEngine.Rendering.ConstantBuffer_Typed" />
        <childnode refid="95" relation="public-inheritance"></childnode>
      </node>
      <node id="95">
        <label>ShadowEngine::Rendering::ConstantBuffer</label>
        <link refid="ShadowEngine.Rendering.ConstantBuffer" />
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="96">
        <label>ShadowEngine::Rendering::ConstantBuffer_Typed&lt;T&gt;</label>
        <link refid="ShadowEngine.Rendering.ConstantBuffer_Typed" />
        <childnode refid="97" relation="public-inheritance"></childnode>
      </node>
      <node id="97">
        <label>ShadowEngine::Rendering::ConstantBuffer</label>
        <link refid="ShadowEngine.Rendering.ConstantBuffer" />
      </node>
    </collaborationgraph>
    <location file="ShadowEngine/src/ShadowRenderer/ConstantBuffer.h" line="59" column="1" bodyfile="ShadowEngine/src/ShadowRenderer/ConstantBuffer.h" bodystart="58" bodyend="88" />
    <listofallmembers>
      <member refid="ShadowEngine.Rendering.ConstantBuffer.As()" prot="public" virt="non-virtual">
        <scope>ShadowEngine::Rendering::ConstantBuffer_Typed</scope>
        <name>As</name>
      </member>
      <member refid="ShadowEngine.Rendering.ConstantBuffer.ConstantBuffer(size_t)" prot="public" virt="non-virtual">
        <scope>ShadowEngine::Rendering::ConstantBuffer_Typed</scope>
        <name>ConstantBuffer</name>
      </member>
      <member refid="ShadowEngine.Rendering.ConstantBuffer_Typed.ConstantBuffer_Typed()" prot="public" virt="non-virtual">
        <scope>ShadowEngine::Rendering::ConstantBuffer_Typed</scope>
        <name>ConstantBuffer_Typed</name>
      </member>
      <member refid="ShadowEngine.Rendering.ConstantBuffer_Typed.data" prot="private" virt="non-virtual">
        <scope>ShadowEngine::Rendering::ConstantBuffer_Typed</scope>
        <name>data</name>
      </member>
      <member refid="ShadowEngine.Rendering.ConstantBuffer.GetImpl()" prot="public" virt="virtual">
        <scope>ShadowEngine::Rendering::ConstantBuffer_Typed</scope>
        <name>GetImpl</name>
      </member>
      <member refid="ShadowEngine.Rendering.ConstantBuffer.impl" prot="protected" virt="non-virtual">
        <scope>ShadowEngine::Rendering::ConstantBuffer_Typed</scope>
        <name>impl</name>
      </member>
      <member refid="ShadowEngine.Rendering.ConstantBuffer_Typed.operator-&gt;()" prot="public" virt="non-virtual">
        <scope>ShadowEngine::Rendering::ConstantBuffer_Typed</scope>
        <name>operator-&gt;</name>
      </member>
      <member refid="ShadowEngine.Rendering.ConstantBuffer_Typed.operator=(const T &amp;)" prot="public" virt="non-virtual">
        <scope>ShadowEngine::Rendering::ConstantBuffer_Typed</scope>
        <name>operator=</name>
      </member>
      <member refid="ShadowEngine.Rendering.ConstantBuffer_Typed.Set(void *)" prot="public" virt="virtual">
        <scope>ShadowEngine::Rendering::ConstantBuffer_Typed</scope>
        <name>Set</name>
      </member>
      <member refid="ShadowEngine.Rendering.ConstantBuffer_Typed.Upload()" prot="public" virt="virtual">
        <scope>ShadowEngine::Rendering::ConstantBuffer_Typed</scope>
        <name>Upload</name>
      </member>
      <member refid="ShadowEngine.Rendering.ConstantBuffer.~ConstantBuffer()" prot="public" virt="virtual">
        <scope>ShadowEngine::Rendering::ConstantBuffer_Typed</scope>
        <name>~ConstantBuffer</name>
      </member>
    </listofallmembers>
  </compounddef>
</doxygen>