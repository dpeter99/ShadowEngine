<?xml version="1.0" encoding="utf-8" standalone="no"?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="ShadowEngine.Rendering.VertexBuffer" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>ShadowEngine::Rendering::VertexBuffer</compoundname>
    <derivedcompoundref refid="ShadowEngine.Rendering.D3D12.D3D12VertexBuffer" prot="public" virt="non-virtual">ShadowEngine::Rendering::D3D12::D3D12VertexBuffer</derivedcompoundref>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="ShadowEngine.Rendering.VertexBuffer.~VertexBuffer()" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual ShadowEngine::Rendering::VertexBuffer::~VertexBuffer</definition>
        <argsstring>()=default</argsstring>
        <name>~VertexBuffer</name>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowRenderer/Buffer.h" line="110" column="1" />
      </memberdef>
      <memberdef kind="function" id="ShadowEngine.Rendering.VertexBuffer.GetLayout()" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const <ref refid="ShadowEngine.Rendering.BufferLayout" kindref="compound">BufferLayout</ref> &amp;</type>
        <definition>virtual const BufferLayout&amp; ShadowEngine::Rendering::VertexBuffer::GetLayout</definition>
        <argsstring>() const =0</argsstring>
        <name>GetLayout</name>
        <reimplementedby refid="ShadowEngine.Rendering.D3D12.D3D12VertexBuffer.GetLayout()">GetLayout</reimplementedby>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowRenderer/Buffer.h" line="115" column="1" />
      </memberdef>
      <memberdef kind="function" id="ShadowEngine.Rendering.VertexBuffer.SetLayout(const BufferLayout &amp;)" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void ShadowEngine::Rendering::VertexBuffer::SetLayout</definition>
        <argsstring>(const BufferLayout &amp;layout)=0</argsstring>
        <name>SetLayout</name>
        <reimplementedby refid="ShadowEngine.Rendering.D3D12.D3D12VertexBuffer.SetLayout(const ShadowEngine::Rendering::BufferLayout &amp;)">SetLayout</reimplementedby>
        <param>
          <type>const <ref refid="ShadowEngine.Rendering.BufferLayout" kindref="compound">BufferLayout</ref> &amp;</type>
          <declname>layout</declname>
        </param>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowRenderer/Buffer.h" line="116" column="1" />
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="ShadowEngine.Rendering.VertexBuffer.Create(void *,uint32_t)" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>
          <ref refid="ShadowEngine.Rendering.VertexBuffer" kindref="compound">VertexBuffer</ref> *</type>
        <definition>VertexBuffer * ShadowEngine::Rendering::VertexBuffer::Create</definition>
        <argsstring>(void *vertices, uint32_t size)</argsstring>
        <name>Create</name>
        <param>
          <type>void *</type>
          <declname>vertices</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowRenderer/Buffer.h" line="118" column="1" bodyfile="ShadowEngine/src/ShadowRenderer/Buffer.cpp" bodystart="11" bodyend="22" />
      </memberdef>
    </sectiondef>
    <briefdescription></briefdescription>
    <detaileddescription></detaileddescription>
    <inheritancegraph>
      <node id="675">
        <label>ShadowEngine::Rendering::VertexBuffer</label>
        <link refid="ShadowEngine.Rendering.VertexBuffer" />
      </node>
      <node id="676">
        <label>ShadowEngine::Rendering::D3D12::D3D12VertexBuffer</label>
        <link refid="ShadowEngine.Rendering.D3D12.D3D12VertexBuffer" />
        <childnode refid="675" relation="public-inheritance"></childnode>
      </node>
    </inheritancegraph>
    <location file="ShadowEngine/src/ShadowRenderer/Buffer.h" line="108" column="1" bodyfile="ShadowEngine/src/ShadowRenderer/Buffer.h" bodystart="107" bodyend="119" />
    <listofallmembers>
      <member refid="ShadowEngine.Rendering.VertexBuffer.Create(void *,uint32_t)" prot="public" virt="non-virtual">
        <scope>ShadowEngine::Rendering::VertexBuffer</scope>
        <name>Create</name>
      </member>
      <member refid="ShadowEngine.Rendering.VertexBuffer.GetLayout()" prot="public" virt="pure-virtual">
        <scope>ShadowEngine::Rendering::VertexBuffer</scope>
        <name>GetLayout</name>
      </member>
      <member refid="ShadowEngine.Rendering.VertexBuffer.SetLayout(const BufferLayout &amp;)" prot="public" virt="pure-virtual">
        <scope>ShadowEngine::Rendering::VertexBuffer</scope>
        <name>SetLayout</name>
      </member>
      <member refid="ShadowEngine.Rendering.VertexBuffer.~VertexBuffer()" prot="public" virt="virtual">
        <scope>ShadowEngine::Rendering::VertexBuffer</scope>
        <name>~VertexBuffer</name>
      </member>
    </listofallmembers>
  </compounddef>
</doxygen>