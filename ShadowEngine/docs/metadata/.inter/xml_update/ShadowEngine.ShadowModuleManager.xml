<?xml version="1.0" encoding="utf-8" standalone="no"?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="ShadowEngine.ShadowModuleManager" kind="class" language="C++" prot="public">
    <compoundname>ShadowEngine::ShadowModuleManager</compoundname>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="ShadowEngine.ShadowModuleManager.instance" prot="public" static="yes" mutable="no">
        <type>
          <ref refid="ShadowEngine.ShadowModuleManager" kindref="compound">ShadowModuleManager</ref> *</type>
        <definition>ShadowEngine::ShadowModuleManager * ShadowEngine::ShadowModuleManager::instance</definition>
        <argsstring></argsstring>
        <name>instance</name>
        <initializer>= nullptr</initializer>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowModules/ShadowModuleManager.h" line="10" column="1" bodyfile="ShadowEngine/src/ShadowModules/ShadowModuleManager.h" bodystart="10" bodyend="-1" />
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="ShadowEngine.ShadowModuleManager.modules" prot="public" static="no" mutable="no">
        <type>std::list&lt;ShadowEngine::Scope&lt;<ref refid="ShadowEngine.ShadowModule" kindref="compound">ShadowModule</ref>&gt;&gt;</type>
        <definition>std::list&lt;ShadowEngine::Scope&lt;ShadowModule&gt;&gt; ShadowEngine::ShadowModuleManager::modules</definition>
        <argsstring></argsstring>
        <name>modules</name>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowModules/ShadowModuleManager.h" line="12" column="1" bodyfile="ShadowEngine/src/ShadowModules/ShadowModuleManager.h" bodystart="12" bodyend="-1" />
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="ShadowEngine.ShadowModuleManager.ShadowModuleManager()" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ShadowEngine::ShadowModuleManager::ShadowModuleManager</definition>
        <argsstring>()</argsstring>
        <name>ShadowModuleManager</name>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowModules/ShadowModuleManager.h" line="14" column="1" bodyfile="ShadowEngine/src/ShadowModules/ShadowModuleManager.cpp" bodystart="7" bodyend="14" />
      </memberdef>
      <memberdef kind="function" id="ShadowEngine.ShadowModuleManager.~ShadowModuleManager()" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ShadowEngine::ShadowModuleManager::~ShadowModuleManager</definition>
        <argsstring>()</argsstring>
        <name>~ShadowModuleManager</name>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowModules/ShadowModuleManager.h" line="15" column="1" bodyfile="ShadowEngine/src/ShadowModules/ShadowModuleManager.cpp" bodystart="16" bodyend="18" />
      </memberdef>
      <memberdef kind="function" id="ShadowEngine.ShadowModuleManager.PushModule(ShadowModule *)" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ShadowEngine::ShadowModuleManager::PushModule</definition>
        <argsstring>(ShadowModule *module)</argsstring>
        <name>PushModule</name>
        <param>
          <type>
            <ref refid="ShadowEngine.ShadowModule" kindref="compound">ShadowModule</ref> *</type>
          <declname>module</declname>
        </param>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowModules/ShadowModuleManager.h" line="17" column="1" bodyfile="ShadowEngine/src/ShadowModules/ShadowModuleManager.cpp" bodystart="20" bodyend="23" />
      </memberdef>
      <memberdef kind="function" id="ShadowEngine.ShadowModuleManager.GetModule(std::string)" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>
          <ref refid="ShadowEngine.ShadowModule" kindref="compound">ShadowModule</ref> &amp;</type>
        <definition>ShadowEngine::ShadowModule &amp; ShadowEngine::ShadowModuleManager::GetModule</definition>
        <argsstring>(std::string name)</argsstring>
        <name>GetModule</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowModules/ShadowModuleManager.h" line="19" column="1" bodyfile="ShadowEngine/src/ShadowModules/ShadowModuleManager.cpp" bodystart="25" bodyend="34" />
      </memberdef>
      <memberdef kind="function" id="ShadowEngine.ShadowModuleManager.GetModuleByType()" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* ShadowEngine::ShadowModuleManager::GetModuleByType</definition>
        <argsstring>()</argsstring>
        <name>GetModuleByType</name>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowModules/ShadowModuleManager.h" line="22" column="1" bodyfile="ShadowEngine/src/ShadowModules/ShadowModuleManager.h" bodystart="22" bodyend="31" />
      </memberdef>
      <memberdef kind="function" id="ShadowEngine.ShadowModuleManager.Init()" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ShadowEngine::ShadowModuleManager::Init</definition>
        <argsstring>()</argsstring>
        <name>Init</name>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowModules/ShadowModuleManager.h" line="33" column="1" bodyfile="ShadowEngine/src/ShadowModules/ShadowModuleManager.cpp" bodystart="36" bodyend="42" />
      </memberdef>
      <memberdef kind="function" id="ShadowEngine.ShadowModuleManager.Update()" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ShadowEngine::ShadowModuleManager::Update</definition>
        <argsstring>()</argsstring>
        <name>Update</name>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowModules/ShadowModuleManager.h" line="34" column="1" bodyfile="ShadowEngine/src/ShadowModules/ShadowModuleManager.cpp" bodystart="44" bodyend="50" />
      </memberdef>
      <memberdef kind="function" id="ShadowEngine.ShadowModuleManager.LateRender()" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ShadowEngine::ShadowModuleManager::LateRender</definition>
        <argsstring>()</argsstring>
        <name>LateRender</name>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowModules/ShadowModuleManager.h" line="35" column="1" bodyfile="ShadowEngine/src/ShadowModules/ShadowModuleManager.cpp" bodystart="52" bodyend="58" />
      </memberdef>
      <memberdef kind="function" id="ShadowEngine.ShadowModuleManager.Render()" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ShadowEngine::ShadowModuleManager::Render</definition>
        <argsstring>()</argsstring>
        <name>Render</name>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowModules/ShadowModuleManager.h" line="36" column="1" bodyfile="ShadowEngine/src/ShadowModules/ShadowModuleManager.cpp" bodystart="60" bodyend="66" />
      </memberdef>
    </sectiondef>
    <briefdescription></briefdescription>
    <detaileddescription></detaileddescription>
    <collaborationgraph>
      <node id="558">
        <label>ShadowEngine::ShadowModuleManager</label>
        <link refid="ShadowEngine.ShadowModuleManager" />
        <childnode refid="558" relation="usage">
          <edgelabel>instance</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ShadowEngine/src/ShadowModules/ShadowModuleManager.h" line="8" column="1" bodyfile="ShadowEngine/src/ShadowModules/ShadowModuleManager.h" bodystart="7" bodyend="37" />
    <listofallmembers>
      <member refid="ShadowEngine.ShadowModuleManager.GetModule(std::string)" prot="public" virt="non-virtual">
        <scope>ShadowEngine::ShadowModuleManager</scope>
        <name>GetModule</name>
      </member>
      <member refid="ShadowEngine.ShadowModuleManager.GetModuleByType()" prot="public" virt="non-virtual">
        <scope>ShadowEngine::ShadowModuleManager</scope>
        <name>GetModuleByType</name>
      </member>
      <member refid="ShadowEngine.ShadowModuleManager.Init()" prot="public" virt="non-virtual">
        <scope>ShadowEngine::ShadowModuleManager</scope>
        <name>Init</name>
      </member>
      <member refid="ShadowEngine.ShadowModuleManager.instance" prot="public" virt="non-virtual">
        <scope>ShadowEngine::ShadowModuleManager</scope>
        <name>instance</name>
      </member>
      <member refid="ShadowEngine.ShadowModuleManager.LateRender()" prot="public" virt="non-virtual">
        <scope>ShadowEngine::ShadowModuleManager</scope>
        <name>LateRender</name>
      </member>
      <member refid="ShadowEngine.ShadowModuleManager.modules" prot="public" virt="non-virtual">
        <scope>ShadowEngine::ShadowModuleManager</scope>
        <name>modules</name>
      </member>
      <member refid="ShadowEngine.ShadowModuleManager.PushModule(ShadowModule *)" prot="public" virt="non-virtual">
        <scope>ShadowEngine::ShadowModuleManager</scope>
        <name>PushModule</name>
      </member>
      <member refid="ShadowEngine.ShadowModuleManager.Render()" prot="public" virt="non-virtual">
        <scope>ShadowEngine::ShadowModuleManager</scope>
        <name>Render</name>
      </member>
      <member refid="ShadowEngine.ShadowModuleManager.ShadowModuleManager()" prot="public" virt="non-virtual">
        <scope>ShadowEngine::ShadowModuleManager</scope>
        <name>ShadowModuleManager</name>
      </member>
      <member refid="ShadowEngine.ShadowModuleManager.Update()" prot="public" virt="non-virtual">
        <scope>ShadowEngine::ShadowModuleManager</scope>
        <name>Update</name>
      </member>
      <member refid="ShadowEngine.ShadowModuleManager.~ShadowModuleManager()" prot="public" virt="non-virtual">
        <scope>ShadowEngine::ShadowModuleManager</scope>
        <name>~ShadowModuleManager</name>
      </member>
    </listofallmembers>
  </compounddef>
</doxygen>