<?xml version="1.0" encoding="utf-8" standalone="no"?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="ShadowEngine.World.LevelMap" kind="class" language="C++" prot="public">
    <compoundname>ShadowEngine::World::LevelMap</compoundname>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="ShadowEngine.World.LevelMap.id" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string ShadowEngine::World::LevelMap::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowMap/ShadowWorld.h" line="24" column="1" bodyfile="ShadowEngine/src/ShadowMap/ShadowWorld.h" bodystart="24" bodyend="-1" />
      </memberdef>
      <memberdef kind="variable" id="ShadowEngine.World.LevelMap.name" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string ShadowEngine::World::LevelMap::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowMap/ShadowWorld.h" line="27" column="1" bodyfile="ShadowEngine/src/ShadowMap/ShadowWorld.h" bodystart="27" bodyend="-1" />
      </memberdef>
      <memberdef kind="variable" id="ShadowEngine.World.LevelMap.prefix" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string ShadowEngine::World::LevelMap::prefix</definition>
        <argsstring></argsstring>
        <name>prefix</name>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowMap/ShadowWorld.h" line="30" column="1" bodyfile="ShadowEngine/src/ShadowMap/ShadowWorld.h" bodystart="30" bodyend="-1" />
      </memberdef>
      <memberdef kind="variable" id="ShadowEngine.World.LevelMap.world" prot="public" static="no" mutable="no">
        <type>
          <ref refid="ShadowEngine.World.ShadowWorld" kindref="compound">ShadowWorld</ref> *</type>
        <definition>ShadowWorld* ShadowEngine::World::LevelMap::world</definition>
        <argsstring></argsstring>
        <name>world</name>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowMap/ShadowWorld.h" line="33" column="1" bodyfile="ShadowEngine/src/ShadowMap/ShadowWorld.h" bodystart="33" bodyend="-1" />
      </memberdef>
      <memberdef kind="variable" id="ShadowEngine.World.LevelMap.chunks" prot="public" static="no" mutable="no">
        <type>std::list&lt;<ref refid="ShadowEngine.World.MapChunk" kindref="compound">MapChunk</ref> *&gt;</type>
        <definition>std::list&lt;MapChunk*&gt; ShadowEngine::World::LevelMap::chunks</definition>
        <argsstring></argsstring>
        <name>chunks</name>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowMap/ShadowWorld.h" line="36" column="1" bodyfile="ShadowEngine/src/ShadowMap/ShadowWorld.h" bodystart="36" bodyend="-1" />
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="ShadowEngine.World.LevelMap.LevelMap(ShadowWorld *)" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ShadowEngine::World::LevelMap::LevelMap</definition>
        <argsstring>(ShadowWorld *world)</argsstring>
        <name>LevelMap</name>
        <param>
          <type>
            <ref refid="ShadowEngine.World.ShadowWorld" kindref="compound">ShadowWorld</ref> *</type>
          <declname>world</declname>
        </param>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowMap/ShadowWorld.h" line="39" column="1" bodyfile="ShadowEngine/src/ShadowMap/ShadowWorld.cpp" bodystart="128" bodyend="130" />
      </memberdef>
      <memberdef kind="function" id="ShadowEngine.World.LevelMap.Update(const ShadowMath::Vector2int &amp;)" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ShadowEngine::World::LevelMap::Update</definition>
        <argsstring>(const ShadowMath::Vector2int &amp;pos)</argsstring>
        <name>Update</name>
        <param>
          <type>const <ref refid="ShadowMath.Vector2int" kindref="compound">ShadowMath::Vector2int</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowMap/ShadowWorld.h" line="44" column="1" bodyfile="ShadowEngine/src/ShadowMap/ShadowWorld.cpp" bodystart="28" bodyend="77" />
      </memberdef>
      <memberdef kind="function" id="ShadowEngine.World.LevelMap.UnloadChunk(const ShadowMath::Vector2int &amp;)" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ShadowEngine::World::LevelMap::UnloadChunk</definition>
        <argsstring>(const ShadowMath::Vector2int &amp;id)</argsstring>
        <name>UnloadChunk</name>
        <param>
          <type>const <ref refid="ShadowMath.Vector2int" kindref="compound">ShadowMath::Vector2int</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowMap/ShadowWorld.h" line="47" column="1" bodyfile="ShadowEngine/src/ShadowMap/ShadowWorld.cpp" bodystart="86" bodyend="91" />
      </memberdef>
      <memberdef kind="function" id="ShadowEngine.World.LevelMap.UnloadChunk(MapChunk *)" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ShadowEngine::World::LevelMap::UnloadChunk</definition>
        <argsstring>(MapChunk *chunk)</argsstring>
        <name>UnloadChunk</name>
        <param>
          <type>
            <ref refid="ShadowEngine.World.MapChunk" kindref="compound">MapChunk</ref> *</type>
          <declname>chunk</declname>
        </param>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowMap/ShadowWorld.h" line="48" column="1" bodyfile="ShadowEngine/src/ShadowMap/ShadowWorld.cpp" bodystart="79" bodyend="84" />
      </memberdef>
      <memberdef kind="function" id="ShadowEngine.World.LevelMap.LoadChunk(const ShadowMath::Vector2int &amp;)" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ShadowEngine::World::LevelMap::LoadChunk</definition>
        <argsstring>(const ShadowMath::Vector2int &amp;id)</argsstring>
        <name>LoadChunk</name>
        <param>
          <type>const <ref refid="ShadowMath.Vector2int" kindref="compound">ShadowMath::Vector2int</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowMap/ShadowWorld.h" line="51" column="1" bodyfile="ShadowEngine/src/ShadowMap/ShadowWorld.cpp" bodystart="105" bodyend="115" />
      </memberdef>
      <memberdef kind="function" id="ShadowEngine.World.LevelMap.GetLoadedChunk(const ShadowMath::Vector2int &amp;)" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>
          <ref refid="ShadowEngine.World.MapChunk" kindref="compound">MapChunk</ref> *</type>
        <definition>MapChunk * ShadowEngine::World::LevelMap::GetLoadedChunk</definition>
        <argsstring>(const ShadowMath::Vector2int &amp;id)</argsstring>
        <name>GetLoadedChunk</name>
        <param>
          <type>const <ref refid="ShadowMath.Vector2int" kindref="compound">ShadowMath::Vector2int</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowMap/ShadowWorld.h" line="53" column="1" bodyfile="ShadowEngine/src/ShadowMap/ShadowWorld.cpp" bodystart="93" bodyend="103" />
      </memberdef>
      <memberdef kind="function" id="ShadowEngine.World.LevelMap.GenerateMapName(const ShadowMath::Vector2int &amp;)" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string ShadowEngine::World::LevelMap::GenerateMapName</definition>
        <argsstring>(const ShadowMath::Vector2int &amp;id) const</argsstring>
        <name>GenerateMapName</name>
        <param>
          <type>const <ref refid="ShadowMath.Vector2int" kindref="compound">ShadowMath::Vector2int</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription></briefdescription>
        <detaileddescription></detaileddescription>
        <inbodydescription></inbodydescription>
        <location file="ShadowEngine/src/ShadowMap/ShadowWorld.h" line="55" column="1" bodyfile="ShadowEngine/src/ShadowMap/ShadowWorld.cpp" bodystart="117" bodyend="126" />
      </memberdef>
    </sectiondef>
    <briefdescription></briefdescription>
    <detaileddescription></detaileddescription>
    <collaborationgraph>
      <node id="330">
        <label>ShadowEngine::SHObject</label>
        <link refid="ShadowEngine.SHObject" />
      </node>
      <node id="327">
        <label>ShadowEngine::World::LevelMap</label>
        <link refid="ShadowEngine.World.LevelMap" />
        <childnode refid="328" relation="usage">
          <edgelabel>world</edgelabel>
        </childnode>
      </node>
      <node id="328">
        <label>ShadowEngine::World::ShadowWorld</label>
        <link refid="ShadowEngine.World.ShadowWorld" />
        <childnode refid="329" relation="public-inheritance"></childnode>
        <childnode refid="327" relation="usage">
          <edgelabel>activeMap</edgelabel>
        </childnode>
      </node>
      <node id="329">
        <label>ShadowEngine::Assets::ShadowAsset</label>
        <link refid="ShadowEngine.Assets.ShadowAsset" />
        <childnode refid="330" relation="public-inheritance"></childnode>
      </node>
    </collaborationgraph>
    <location file="ShadowEngine/src/ShadowMap/ShadowWorld.h" line="21" column="1" bodyfile="ShadowEngine/src/ShadowMap/ShadowWorld.h" bodystart="20" bodyend="56" />
    <listofallmembers>
      <member refid="ShadowEngine.World.LevelMap.chunks" prot="public" virt="non-virtual">
        <scope>ShadowEngine::World::LevelMap</scope>
        <name>chunks</name>
      </member>
      <member refid="ShadowEngine.World.LevelMap.GenerateMapName(const ShadowMath::Vector2int &amp;)" prot="public" virt="non-virtual">
        <scope>ShadowEngine::World::LevelMap</scope>
        <name>GenerateMapName</name>
      </member>
      <member refid="ShadowEngine.World.LevelMap.GetLoadedChunk(const ShadowMath::Vector2int &amp;)" prot="public" virt="non-virtual">
        <scope>ShadowEngine::World::LevelMap</scope>
        <name>GetLoadedChunk</name>
      </member>
      <member refid="ShadowEngine.World.LevelMap.id" prot="public" virt="non-virtual">
        <scope>ShadowEngine::World::LevelMap</scope>
        <name>id</name>
      </member>
      <member refid="ShadowEngine.World.LevelMap.LevelMap(ShadowWorld *)" prot="public" virt="non-virtual">
        <scope>ShadowEngine::World::LevelMap</scope>
        <name>LevelMap</name>
      </member>
      <member refid="ShadowEngine.World.LevelMap.LoadChunk(const ShadowMath::Vector2int &amp;)" prot="public" virt="non-virtual">
        <scope>ShadowEngine::World::LevelMap</scope>
        <name>LoadChunk</name>
      </member>
      <member refid="ShadowEngine.World.LevelMap.name" prot="public" virt="non-virtual">
        <scope>ShadowEngine::World::LevelMap</scope>
        <name>name</name>
      </member>
      <member refid="ShadowEngine.World.LevelMap.prefix" prot="public" virt="non-virtual">
        <scope>ShadowEngine::World::LevelMap</scope>
        <name>prefix</name>
      </member>
      <member refid="ShadowEngine.World.LevelMap.UnloadChunk(const ShadowMath::Vector2int &amp;)" prot="public" virt="non-virtual">
        <scope>ShadowEngine::World::LevelMap</scope>
        <name>UnloadChunk</name>
      </member>
      <member refid="ShadowEngine.World.LevelMap.UnloadChunk(MapChunk *)" prot="public" virt="non-virtual">
        <scope>ShadowEngine::World::LevelMap</scope>
        <name>UnloadChunk</name>
      </member>
      <member refid="ShadowEngine.World.LevelMap.Update(const ShadowMath::Vector2int &amp;)" prot="public" virt="non-virtual">
        <scope>ShadowEngine::World::LevelMap</scope>
        <name>Update</name>
      </member>
      <member refid="ShadowEngine.World.LevelMap.world" prot="public" virt="non-virtual">
        <scope>ShadowEngine::World::LevelMap</scope>
        <name>world</name>
      </member>
    </listofallmembers>
  </compounddef>
</doxygen>