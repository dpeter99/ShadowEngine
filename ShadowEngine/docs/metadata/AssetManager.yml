### YamlMime:ManagedReference
items:
- uid: AssetManager
  id: AssetManager
  children:
  - AssetManager.~AssetManager()
  - AssetManager.AssetManager()
  - AssetManager.CheckLoaded(std::string,ShadowEngine::Assets::ShadowAsset **)
  - AssetManager.GetAsset(std::string)
  - AssetManager.getInstance()
  - AssetManager.loadedAssets
  - AssetManager.nextID
  - AssetManager.UnloadAsset(ShadowEngine::Assets::ShadowAsset *)
  - AssetManager.UnloadAsset(std::string)
  href: AssetManager.yml
  langs:
  - cplusplus
  name: AssetManager
  nameWithType: AssetManager
  fullName: AssetManager
  type: Class
  source:
    remote: &o0
      path: ShadowEngine/src/ShadowAsset/AssetManager.h
      branch: d3d12
      repo: https://github.com/dpeter99/ShadowEngine
    path: ShadowEngine/src/ShadowAsset/AssetManager.h
    startLine: 9
  header:
    remote: *o0
    path: ShadowEngine/src/ShadowAsset/AssetManager.h
    startLine: 10
  syntax: &o2
    content: 'public: class AssetManager : public hadowModule'
  inheritance:
  - System::Object
  - ShadowEngine.SHObject
  - ShadowEngine.ShadowModule
  inheritedMembers:
  - ShadowEngine.SHObject.GenerateId()
  - ShadowEngine.SHObject.GetType()
  - ShadowEngine.SHObject.GetTypeId()
  - ShadowEngine.SHObject.~SHObject()
- uid: AssetManager.~AssetManager()
  id: AssetManager.~AssetManager()
  parent: AssetManager
  href: AssetManager.yml
  langs:
  - cplusplus
  name: ~AssetManager()
  nameWithType: AssetManager::~AssetManager()
  fullName: AssetManager::~AssetManager()
  overload: AssetManager.~AssetManager*
  type: Constructor
  source:
    remote: &o1
      path: ShadowEngine/src/ShadowAsset/AssetManager.cpp
      branch: d3d12
      repo: https://github.com/dpeter99/ShadowEngine
    path: ShadowEngine/src/ShadowAsset/AssetManager.cpp
    startLine: 14
  header:
    remote: *o0
    path: ShadowEngine/src/ShadowAsset/AssetManager.h
    startLine: 30
  syntax:
    content: 'public: ~AssetManager()'
- uid: AssetManager.AssetManager()
  id: AssetManager.AssetManager()
  parent: AssetManager
  href: AssetManager.yml
  langs:
  - cplusplus
  name: AssetManager()
  nameWithType: AssetManager::AssetManager()
  fullName: AssetManager::AssetManager()
  overload: AssetManager.AssetManager*
  type: Constructor
  source:
    remote: *o1
    path: ShadowEngine/src/ShadowAsset/AssetManager.cpp
    startLine: 8
  header:
    remote: *o0
    path: ShadowEngine/src/ShadowAsset/AssetManager.h
    startLine: 29
  syntax:
    content: 'public: AssetManager()'
- uid: AssetManager.CheckLoaded(std::string,ShadowEngine::Assets::ShadowAsset **)
  id: ShadowAsset **)
  parent: AssetManager
  href: AssetManager.yml
  langs:
  - cplusplus
  name: CheckLoaded(std::string path, ShadowEngine::Assets::ShadowAsset **asset)
  nameWithType: AssetManager::CheckLoaded(std::string path, ShadowEngine::Assets::ShadowAsset **asset)
  fullName: bool AssetManager::CheckLoaded(std::string path, ShadowEngine::Assets::ShadowAsset **asset)
  overload: AssetManager.CheckLoaded*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/ShadowAsset/AssetManager.cpp
    startLine: 18
  header:
    remote: *o0
    path: ShadowEngine/src/ShadowAsset/AssetManager.h
    startLine: 34
  syntax:
    content: 'public: bool CheckLoaded(std::string path, ShadowEngine::Assets::ShadowAsset **asset)'
    parameters:
    - id: path
      type: 9626e5dd
    - id: asset
      type: ShadowEngine.Assets.ShadowAsset9d861d74
    return:
      type: 13ff06c5
- uid: AssetManager.GetAsset(std::string)
  id: string)
  parent: AssetManager
  href: AssetManager.yml
  langs:
  - cplusplus
  name: GetAsset(std::string path)
  nameWithType: AssetManager::GetAsset(std::string path)
  fullName: static T* AssetManager::GetAsset(std::string path)
  overload: AssetManager.GetAsset*
  type: Method
  source:
    remote: *o0
    path: ShadowEngine/src/ShadowAsset/AssetManager.h
    startLine: 44
  header:
    remote: *o0
    path: ShadowEngine/src/ShadowAsset/AssetManager.h
    startLine: 44
  syntax:
    content: 'public: static T * GetAsset(std::string path)'
    parameters:
    - id: path
      type: 9626e5dd
    typeParameters:
    - id: class T
      type: 07c9e456
    return:
      type: af4b7b18
- uid: AssetManager.getInstance()
  id: AssetManager.getInstance()
  parent: AssetManager
  href: AssetManager.yml
  langs:
  - cplusplus
  name: getInstance()
  nameWithType: AssetManager::getInstance()
  fullName: static AssetManager* AssetManager::getInstance()
  overload: AssetManager.getInstance*
  type: Method
  source:
    remote: *o0
    path: ShadowEngine/src/ShadowAsset/AssetManager.h
    startLine: 18
  header:
    remote: *o0
    path: ShadowEngine/src/ShadowAsset/AssetManager.h
    startLine: 18
  syntax:
    content: 'public: static AssetManager * getInstance()'
    return:
      type: AssetManager68bc11b4
- uid: AssetManager.loadedAssets
  id: AssetManager.loadedAssets
  parent: AssetManager
  href: AssetManager.yml
  langs:
  - cplusplus
  name: loadedAssets
  nameWithType: AssetManager::loadedAssets
  fullName: std::map<int, ShadowEngine::Assets::ShadowAsset*> AssetManager::loadedAssets
  type: Field
  source:
    remote: *o0
    path: ShadowEngine/src/ShadowAsset/AssetManager.h
    startLine: 25
  header:
    remote: *o0
    path: ShadowEngine/src/ShadowAsset/AssetManager.h
    startLine: 25
  syntax:
    content: 'public: std::map<int, ShadowEngine::Assets::ShadowAsset *> loadedAssets'
    return:
      type: 8bda16f1ShadowEngine.Assets.ShadowAsset996dd46e
- uid: AssetManager.nextID
  id: AssetManager.nextID
  parent: AssetManager
  href: AssetManager.yml
  langs:
  - cplusplus
  name: nextID
  nameWithType: AssetManager::nextID
  fullName: int AssetManager::nextID
  type: Field
  source:
    remote: *o0
    path: ShadowEngine/src/ShadowAsset/AssetManager.h
    startLine: 27
  header:
    remote: *o0
    path: ShadowEngine/src/ShadowAsset/AssetManager.h
    startLine: 27
  syntax:
    content: 'public: int nextID= 0'
    return:
      type: f75371fa
- uid: AssetManager.UnloadAsset(ShadowEngine::Assets::ShadowAsset *)
  id: ShadowAsset *)
  parent: AssetManager
  href: AssetManager.yml
  langs:
  - cplusplus
  name: UnloadAsset(ShadowEngine::Assets::ShadowAsset *asset)
  nameWithType: AssetManager::UnloadAsset(ShadowEngine::Assets::ShadowAsset *asset)
  fullName: void AssetManager::UnloadAsset(ShadowEngine::Assets::ShadowAsset *asset)
  overload: AssetManager.UnloadAsset*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/ShadowAsset/AssetManager.cpp
    startLine: 37
  header:
    remote: *o0
    path: ShadowEngine/src/ShadowAsset/AssetManager.h
    startLine: 38
  syntax:
    content: 'public: void UnloadAsset(ShadowEngine::Assets::ShadowAsset *asset)'
    parameters:
    - id: asset
      type: ShadowEngine.Assets.ShadowAsset68bc11b4
- uid: AssetManager.UnloadAsset(std::string)
  id: string)
  parent: AssetManager
  href: AssetManager.yml
  langs:
  - cplusplus
  name: UnloadAsset(std::string)
  nameWithType: AssetManager::UnloadAsset(std::string)
  fullName: void AssetManager::UnloadAsset(std::string)
  overload: AssetManager.UnloadAsset*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/ShadowAsset/AssetManager.cpp
    startLine: 33
  header:
    remote: *o0
    path: ShadowEngine/src/ShadowAsset/AssetManager.h
    startLine: 37
  syntax:
    content: 'public: void UnloadAsset(std::string)'
    parameters:
    - type: 9626e5dd
references:
- uid: 8bda16f1ShadowEngine.Assets.ShadowAsset996dd46e
  spec.cplusplus:
  - name: 'std::map<int, '
    fullName: 'std::map<int, '
  - uid: ShadowEngine.Assets.ShadowAsset
  - name: " *>"
    fullName: " *>"
- uid: f75371fa
  spec.cplusplus:
  - name: int
    fullName: int
- uid: AssetManager68bc11b4
  spec.cplusplus:
  - uid: AssetManager
  - name: " *"
    fullName: " *"
- uid: AssetManager.getInstance*
  name: getInstance
  nameWithType: AssetManager::getInstance
  fullName: static AssetManager* AssetManager::getInstance
- uid: 07c9e456
  spec.cplusplus:
  - name: class T
    fullName: class T
- uid: 9626e5dd
  spec.cplusplus:
  - name: std::string
    fullName: std::string
- uid: af4b7b18
  spec.cplusplus:
  - name: T *
    fullName: T *
- uid: AssetManager.GetAsset*
  name: GetAsset
  nameWithType: AssetManager::GetAsset
  fullName: static T* AssetManager::GetAsset
- uid: AssetManager.AssetManager*
  name: AssetManager
  nameWithType: AssetManager::AssetManager
  fullName: AssetManager::AssetManager
- uid: AssetManager.~AssetManager*
  name: ~AssetManager
  nameWithType: AssetManager::~AssetManager
  fullName: AssetManager::~AssetManager
- uid: ShadowEngine.Assets.ShadowAsset9d861d74
  spec.cplusplus:
  - uid: ShadowEngine.Assets.ShadowAsset
  - name: " **"
    fullName: " **"
- uid: 13ff06c5
  spec.cplusplus:
  - name: bool
    fullName: bool
- uid: AssetManager.CheckLoaded*
  name: CheckLoaded
  nameWithType: AssetManager::CheckLoaded
  fullName: bool AssetManager::CheckLoaded
- uid: AssetManager.UnloadAsset*
  name: UnloadAsset
  nameWithType: AssetManager::UnloadAsset
  fullName: void AssetManager::UnloadAsset
- uid: ShadowEngine.Assets.ShadowAsset68bc11b4
  spec.cplusplus:
  - uid: ShadowEngine.Assets.ShadowAsset
  - name: " *"
    fullName: " *"
- uid: ShadowEngine.SHObject.GenerateId()
  parent: ShadowEngine.SHObject
  href: ShadowEngine.SHObject.yml
  name: GenerateId()
  nameWithType: SHObject::GenerateId()
  fullName: static uint64_t ShadowEngine::SHObject::GenerateId()
  type: Method
  summary: "<p>Generates a new UID for each call. </p>"
  syntax:
    content: 'protected: static uint64_t GenerateId() noexcept'
    return:
      type: 6d8267d6
      description: <p>Unique ID </p>
- uid: ShadowEngine.SHObject.GetType()
  parent: ShadowEngine.SHObject
  href: ShadowEngine.SHObject.yml
  name: GetType()
  nameWithType: SHObject::GetType()
  fullName: virtual const std::string& ShadowEngine::SHObject::GetType()
  type: Method
  summary: "<p>Returns the top level class type name of the object. </p>"
  syntax:
    content: 'public: virtual const std::string & GetType() const =0'
    return:
      type: 360fc41e
      description: <p>Class name string </p>
- uid: ShadowEngine.SHObject.GetTypeId()
  parent: ShadowEngine.SHObject
  href: ShadowEngine.SHObject.yml
  name: GetTypeId()
  nameWithType: SHObject::GetTypeId()
  fullName: virtual const uint64_t ShadowEngine::SHObject::GetTypeId()
  type: Method
  summary: "<p>Gets the top level type ID. </p>"
  syntax:
    content: 'public: virtual const uint64_t GetTypeId() const =0'
    return:
      type: 29dc5929
      description: <p>UID of the class </p>
- uid: ShadowEngine.SHObject.~SHObject()
  parent: ShadowEngine.SHObject
  href: ShadowEngine.SHObject.yml
  name: ~SHObject()
  nameWithType: SHObject::~SHObject()
  fullName: virtual ShadowEngine::SHObject::~SHObject()
  type: Constructor
  syntax:
    content: 'public: virtual ~SHObject()=default'
- uid: ShadowEngine.ShadowModule
  parent: ShadowEngine
  href: ShadowEngine.ShadowModule.yml
  name: ShadowModule
  nameWithType: ShadowModule
  fullName: ShadowEngine::ShadowModule
  type: Class
  syntax:
    content: 'public: class ShadowModule'
- uid: AssetManager
  href: AssetManager.yml
  name: AssetManager
  nameWithType: AssetManager
  fullName: AssetManager
  type: Class
  syntax: *o2
- uid: ShadowEngine.Assets.ShadowAsset
  parent: ShadowEngine.Assets
  href: ShadowEngine.Assets.ShadowAsset.yml
  name: ShadowAsset
  nameWithType: ShadowAsset
  fullName: ShadowEngine::Assets::ShadowAsset
  type: Class
  syntax:
    content: 'public: class ShadowAsset'
