### YamlMime:ManagedReference
items:
- uid: Camera
  id: Camera
  children:
  - Camera.GetProjectionMatrix()
  - Camera.GetViewMatrix()
  - Camera.GetViewProjectionMatrix()
  - Camera.Init()
  - Camera.SetCameraType(CameraType)
  href: Camera.yml
  langs:
  - cplusplus
  name: Camera
  nameWithType: Camera
  fullName: Camera
  type: Class
  source:
    remote: &o0
      path: ShadowEngine/src/EntitySystem/Entities/Camera.h
      branch: d3d12
      repo: https://github.com/dpeter99/ShadowEngine
    path: ShadowEngine/src/EntitySystem/Entities/Camera.h
    startLine: 10
  header:
    remote: *o0
    path: ShadowEngine/src/EntitySystem/Entities/Camera.h
    startLine: 12
  syntax: &o2
    content: 'public: class Camera : public eneEntity'
  inheritance:
  - System::Object
  - Entity
  - ShadowEngine.EntitySystem.SceneEntity
  inheritedMembers:
  - ShadowEngine.EntitySystem.SceneEntity.GetTransform()
  - ShadowEngine.EntitySystem.SceneEntity.SceneEntity()
  - ShadowEngine.EntitySystem.SceneEntity.SceneEntity(EntitySystem::Scene *)
  - ShadowEngine.EntitySystem.SceneEntity.SetParent(rtm_ptr<Entity>)
  - ShadowEngine.EntitySystem.SceneEntity.transform
- uid: Camera.GetProjectionMatrix()
  id: Camera.GetProjectionMatrix()
  parent: Camera
  href: Camera.yml
  langs:
  - cplusplus
  name: GetProjectionMatrix()
  nameWithType: Camera::GetProjectionMatrix()
  fullName: const glm::mat4& Camera::GetProjectionMatrix()
  overload: Camera.GetProjectionMatrix*
  type: Method
  source:
    remote: *o0
    path: ShadowEngine/src/EntitySystem/Entities/Camera.h
    startLine: 36
  header:
    remote: *o0
    path: ShadowEngine/src/EntitySystem/Entities/Camera.h
    startLine: 36
  syntax:
    content: 'public: const glm::mat4 & GetProjectionMatrix() const'
    return:
      type: 617f6632
- uid: Camera.GetViewMatrix()
  id: Camera.GetViewMatrix()
  parent: Camera
  href: Camera.yml
  langs:
  - cplusplus
  name: GetViewMatrix()
  nameWithType: Camera::GetViewMatrix()
  fullName: const glm::mat4& Camera::GetViewMatrix()
  overload: Camera.GetViewMatrix*
  type: Method
  source:
    remote: *o0
    path: ShadowEngine/src/EntitySystem/Entities/Camera.h
    startLine: 37
  header:
    remote: *o0
    path: ShadowEngine/src/EntitySystem/Entities/Camera.h
    startLine: 37
  syntax:
    content: 'public: const glm::mat4 & GetViewMatrix() const'
    return:
      type: 617f6632
- uid: Camera.GetViewProjectionMatrix()
  id: Camera.GetViewProjectionMatrix()
  parent: Camera
  href: Camera.yml
  langs:
  - cplusplus
  name: GetViewProjectionMatrix()
  nameWithType: Camera::GetViewProjectionMatrix()
  fullName: const glm::mat4& Camera::GetViewProjectionMatrix()
  overload: Camera.GetViewProjectionMatrix*
  type: Method
  source:
    remote: *o0
    path: ShadowEngine/src/EntitySystem/Entities/Camera.h
    startLine: 38
  header:
    remote: *o0
    path: ShadowEngine/src/EntitySystem/Entities/Camera.h
    startLine: 38
  syntax:
    content: 'public: const glm::mat4 & GetViewProjectionMatrix() const'
    return:
      type: 617f6632
- uid: Camera.Init()
  id: Camera.Init()
  parent: Camera
  href: Camera.yml
  langs:
  - cplusplus
  name: Init()
  nameWithType: Camera::Init()
  fullName: void Camera::Init()
  overload: Camera.Init*
  type: Method
  source:
    remote: &o1
      path: ShadowEngine/src/EntitySystem/Entities/Camera.cpp
      branch: d3d12
      repo: https://github.com/dpeter99/ShadowEngine
    path: ShadowEngine/src/EntitySystem/Entities/Camera.cpp
    startLine: 84
  header:
    remote: *o0
    path: ShadowEngine/src/EntitySystem/Entities/Camera.h
    startLine: 51
  syntax:
    content: 'public: void Init() override'
- uid: Camera.SetCameraType(CameraType)
  id: Camera.SetCameraType(CameraType)
  parent: Camera
  href: Camera.yml
  langs:
  - cplusplus
  name: SetCameraType(CameraType t)
  nameWithType: Camera::SetCameraType(CameraType t)
  fullName: void Camera::SetCameraType(CameraType t)
  overload: Camera.SetCameraType*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/EntitySystem/Entities/Camera.cpp
    startLine: 23
  header:
    remote: *o0
    path: ShadowEngine/src/EntitySystem/Entities/Camera.h
    startLine: 40
  syntax:
    content: 'public: void SetCameraType(CameraType t)'
    parameters:
    - id: t
      type: abe3610a
references:
- uid: 617f6632
  spec.cplusplus:
  - name: const glm::mat4 &
    fullName: const glm::mat4 &
- uid: Camera.GetProjectionMatrix*
  name: GetProjectionMatrix
  nameWithType: Camera::GetProjectionMatrix
  fullName: const glm::mat4& Camera::GetProjectionMatrix
- uid: Camera.GetViewMatrix*
  name: GetViewMatrix
  nameWithType: Camera::GetViewMatrix
  fullName: const glm::mat4& Camera::GetViewMatrix
- uid: Camera.GetViewProjectionMatrix*
  name: GetViewProjectionMatrix
  nameWithType: Camera::GetViewProjectionMatrix
  fullName: const glm::mat4& Camera::GetViewProjectionMatrix
- uid: abe3610a
  spec.cplusplus:
  - name: CameraType
    fullName: CameraType
- uid: Camera.SetCameraType*
  name: SetCameraType
  nameWithType: Camera::SetCameraType
  fullName: void Camera::SetCameraType
- uid: Camera.Init*
  name: Init
  nameWithType: Camera::Init
  fullName: void Camera::Init
- uid: ShadowEngine.EntitySystem.SceneEntity.GetTransform()
  parent: ShadowEngine.EntitySystem.SceneEntity
  href: ShadowEngine.EntitySystem.SceneEntity.yml
  name: GetTransform()
  nameWithType: SceneEntity::GetTransform()
  fullName: ShadowEntity::Transform * ShadowEngine::EntitySystem::SceneEntity::GetTransform()
  type: Method
  syntax:
    content: 'public: virtual ShadowEntity::Transform * GetTransform()'
    return:
      type: 1b41cd80
- uid: ShadowEngine.EntitySystem.SceneEntity.SceneEntity()
  parent: ShadowEngine.EntitySystem.SceneEntity
  href: ShadowEngine.EntitySystem.SceneEntity.yml
  name: SceneEntity()
  nameWithType: SceneEntity::SceneEntity()
  fullName: ShadowEngine::EntitySystem::SceneEntity::SceneEntity()
  type: Constructor
  syntax:
    content: 'public: SceneEntity()'
- uid: ShadowEngine.EntitySystem.SceneEntity.SceneEntity(EntitySystem::Scene *)
  parent: ShadowEngine.EntitySystem.SceneEntity
  href: ShadowEngine.EntitySystem.SceneEntity.yml
  name: SceneEntity(EntitySystem::Scene *scene)
  nameWithType: SceneEntity::SceneEntity(EntitySystem::Scene *scene)
  fullName: ShadowEngine::EntitySystem::SceneEntity::SceneEntity(EntitySystem::Scene *scene)
  type: Constructor
  syntax:
    content: 'public: SceneEntity(EntitySystem::Scene *scene)'
    parameters:
    - id: scene
      type: ShadowEngine.EntitySystem.Scene68bc11b4
- uid: ShadowEngine.EntitySystem.SceneEntity.SetParent(rtm_ptr<Entity>)
  parent: ShadowEngine.EntitySystem.SceneEntity
  href: ShadowEngine.EntitySystem.SceneEntity.yml
  name: SetParent(rtm_ptr<Entity> e)
  nameWithType: SceneEntity::SetParent(rtm_ptr<Entity> e)
  fullName: void ShadowEngine::EntitySystem::SceneEntity::SetParent(rtm_ptr<Entity> e)
  type: Method
  syntax:
    content: 'public: void SetParent(rtm_ptr<Entity> e) override'
    parameters:
    - id: e
      type: 7ab5790a
- uid: ShadowEngine.EntitySystem.SceneEntity.transform
  parent: ShadowEngine.EntitySystem.SceneEntity
  href: ShadowEngine.EntitySystem.SceneEntity.yml
  name: transform
  nameWithType: SceneEntity::transform
  fullName: ShadowEntity::Transform ShadowEngine::EntitySystem::SceneEntity::transform
  type: Field
  syntax:
    content: 'public: ShadowEntity::Transform transform'
    return:
      type: ccf1867e
- uid: ShadowEngine.EntitySystem.SceneEntity
  parent: ShadowEngine.EntitySystem
  href: ShadowEngine.EntitySystem.SceneEntity.yml
  name: SceneEntity
  nameWithType: SceneEntity
  fullName: ShadowEngine::EntitySystem::SceneEntity
  type: Class
  summary: "<p>Entitys that have a world positon </p>"
  syntax:
    content: 'public: class SceneEntity'
- uid: Camera
  href: Camera.yml
  name: Camera
  nameWithType: Camera
  fullName: Camera
  type: Class
  syntax: *o2
- uid: ShadowEngine.EntitySystem.SceneEntity.TransformChanged(bool)
  parent: ShadowEngine.EntitySystem.SceneEntity
  href: ShadowEngine.EntitySystem.SceneEntity.yml
  name: TransformChanged(bool self)
  nameWithType: SceneEntity::TransformChanged(bool self)
  fullName: void ShadowEngine::EntitySystem::SceneEntity::TransformChanged(bool self)
  type: Method
  syntax:
    content: 'public: virtual void TransformChanged(bool self) override'
    parameters:
    - id: self
      type: 13ff06c5
