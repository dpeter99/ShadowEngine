### YamlMime:ManagedReference
items:
- uid: EntityContainer.iterator
  id: EntityContainer.iterator
  parent: EntityContainer
  children:
  - EntityContainer.iterator.iterator(typename MemoryChunks::iterator,typename MemoryChunks::iterator)
  - EntityContainer.iterator.operator *()
  - EntityContainer.iterator.operator!=(typename iterator &)
  - EntityContainer.iterator.operator++()
  - EntityContainer.iterator.operator==(typename iterator &)
  - EntityContainer.iterator.operator->()
  href: EntityContainer.iterator.yml
  langs:
  - cplusplus
  name: iterator
  nameWithType: iterator
  fullName: EntityContainer::iterator
  type: Class
  source:
    remote: &o0
      path: ShadowEngine/src/EntitySystem/EntityContainer.h
      branch: d3d12
      repo: https://github.com/dpeter99/ShadowEngine
    path: ShadowEngine/src/EntitySystem/EntityContainer.h
    startLine: 89
  header:
    remote: *o0
    path: ShadowEngine/src/EntitySystem/EntityContainer.h
    startLine: 90
  namespace: EntityContainer
  syntax: &o1
    content: 'public: class iterator'
  inheritance:
  - System::Object
- uid: EntityContainer.iterator.iterator(typename MemoryChunks::iterator,typename MemoryChunks::iterator)
  id: iterator)
  parent: EntityContainer.iterator
  href: EntityContainer.iterator.yml
  langs:
  - cplusplus
  name: iterator(typename MemoryChunks::iterator begin, typename MemoryChunks::iterator end)
  nameWithType: iterator::iterator(typename MemoryChunks::iterator begin, typename MemoryChunks::iterator end)
  fullName: EntityContainer<Type>::iterator::iterator(typename MemoryChunks::iterator begin, typename MemoryChunks::iterator end)
  overload: EntityContainer.iterator.iterator*
  type: Constructor
  source:
    remote: *o0
    path: ShadowEngine/src/EntitySystem/EntityContainer.h
    startLine: 99
  header:
    remote: *o0
    path: ShadowEngine/src/EntitySystem/EntityContainer.h
    startLine: 99
  namespace: EntityContainer
  syntax:
    content: 'public: iterator(typename MemoryChunks::iterator begin, typename MemoryChunks::iterator end)'
    parameters:
    - id: begin
      type: 4d2fd5ba
    - id: end
      type: 4d2fd5ba
- uid: EntityContainer.iterator.operator *()
  id: EntityContainer.iterator.operator *()
  parent: EntityContainer.iterator
  href: EntityContainer.iterator.yml
  langs:
  - cplusplus
  name: operator *()
  nameWithType: iterator::operator *()
  fullName: Type& EntityContainer<Type>::iterator::operator *()
  overload: EntityContainer.iterator.operator **
  type: Method
  source:
    remote: *o0
    path: ShadowEngine/src/EntitySystem/EntityContainer.h
    startLine: 145
  header:
    remote: *o0
    path: ShadowEngine/src/EntitySystem/EntityContainer.h
    startLine: 145
  namespace: EntityContainer
  syntax:
    content: 'public: Type & operator *() const'
    return:
      type: a6182bab
- uid: EntityContainer.iterator.operator!=(typename iterator &)
  id: EntityContainer.iterator.operator!=(typename iterator &)
  parent: EntityContainer.iterator
  href: EntityContainer.iterator.yml
  langs:
  - cplusplus
  name: operator!=(typename iterator &other)
  nameWithType: iterator::operator!=(typename iterator &other)
  fullName: bool EntityContainer<Type>::iterator::operator!=(typename iterator &other)
  overload: EntityContainer.iterator.operator!=*
  type: Method
  source:
    remote: *o0
    path: ShadowEngine/src/EntitySystem/EntityContainer.h
    startLine: 154
  header:
    remote: *o0
    path: ShadowEngine/src/EntitySystem/EntityContainer.h
    startLine: 154
  namespace: EntityContainer
  syntax:
    content: 'public: bool operator!=(typename iterator &other)'
    parameters:
    - id: other
      type: 90c7e9dcEntityContainer.iterator76390d34
    return:
      type: 13ff06c5
- uid: EntityContainer.iterator.operator++()
  id: EntityContainer.iterator.operator++()
  parent: EntityContainer.iterator
  href: EntityContainer.iterator.yml
  langs:
  - cplusplus
  name: operator++()
  nameWithType: iterator::operator++()
  fullName: iterator& EntityContainer<Type>::iterator::operator++()
  overload: EntityContainer.iterator.operator++*
  type: Method
  source:
    remote: *o0
    path: ShadowEngine/src/EntitySystem/EntityContainer.h
    startLine: 116
  header:
    remote: *o0
    path: ShadowEngine/src/EntitySystem/EntityContainer.h
    startLine: 116
  namespace: EntityContainer
  syntax:
    content: 'public: iterator & operator++()'
    return:
      type: EntityContainer.iterator76390d34
- uid: EntityContainer.iterator.operator==(typename iterator &)
  id: EntityContainer.iterator.operator==(typename iterator &)
  parent: EntityContainer.iterator
  href: EntityContainer.iterator.yml
  langs:
  - cplusplus
  name: operator==(typename iterator &other)
  nameWithType: iterator::operator==(typename iterator &other)
  fullName: bool EntityContainer<Type>::iterator::operator==(typename iterator &other)
  overload: EntityContainer.iterator.operator==*
  type: Method
  source:
    remote: *o0
    path: ShadowEngine/src/EntitySystem/EntityContainer.h
    startLine: 148
  header:
    remote: *o0
    path: ShadowEngine/src/EntitySystem/EntityContainer.h
    startLine: 148
  namespace: EntityContainer
  syntax:
    content: 'public: bool operator==(typename iterator &other)'
    parameters:
    - id: other
      type: 90c7e9dcEntityContainer.iterator76390d34
    return:
      type: 13ff06c5
- uid: EntityContainer.iterator.operator->()
  id: EntityContainer.iterator.operator->()
  parent: EntityContainer.iterator
  href: EntityContainer.iterator.yml
  langs:
  - cplusplus
  name: operator->()
  nameWithType: iterator::operator->()
  fullName: Type* EntityContainer<Type>::iterator::operator->()
  overload: EntityContainer.iterator.operator->*
  type: Method
  source:
    remote: *o0
    path: ShadowEngine/src/EntitySystem/EntityContainer.h
    startLine: 146
  header:
    remote: *o0
    path: ShadowEngine/src/EntitySystem/EntityContainer.h
    startLine: 146
  namespace: EntityContainer
  syntax:
    content: 'public: Type * operator->() const'
    return:
      type: e74c40fa
references:
- uid: 4d2fd5ba
  spec.cplusplus:
  - name: typename MemoryChunks::iterator
    fullName: typename MemoryChunks::iterator
- uid: EntityContainer.iterator.iterator*
  name: iterator
  nameWithType: iterator::iterator
  fullName: EntityContainer<Type>::iterator::iterator
- uid: EntityContainer.iterator76390d34
  spec.cplusplus:
  - uid: EntityContainer.iterator
  - name: " &"
    fullName: " &"
- uid: EntityContainer.iterator.operator++*
  name: operator++
  nameWithType: iterator::operator++
  fullName: iterator& EntityContainer<Type>::iterator::operator++
- uid: a6182bab
  spec.cplusplus:
  - name: Type &
    fullName: Type &
- uid: EntityContainer.iterator.operator **
  name: operator *
  nameWithType: iterator::operator *
  fullName: Type& EntityContainer<Type>::iterator::operator *
- uid: e74c40fa
  spec.cplusplus:
  - name: Type *
    fullName: Type *
- uid: EntityContainer.iterator.operator->*
  name: operator->
  nameWithType: iterator::operator->
  fullName: Type* EntityContainer<Type>::iterator::operator->
- uid: 90c7e9dcEntityContainer.iterator76390d34
  spec.cplusplus:
  - name: 'typename '
    fullName: 'typename '
  - uid: EntityContainer.iterator
  - name: " &"
    fullName: " &"
- uid: 13ff06c5
  spec.cplusplus:
  - name: bool
    fullName: bool
- uid: EntityContainer.iterator.operator==*
  name: operator==
  nameWithType: iterator::operator==
  fullName: bool EntityContainer<Type>::iterator::operator==
- uid: EntityContainer.iterator.operator!=*
  name: operator!=
  nameWithType: iterator::operator!=
  fullName: bool EntityContainer<Type>::iterator::operator!=
- uid: EntityContainer.iterator
  parent: EntityContainer
  href: EntityContainer.iterator.yml
  name: iterator
  nameWithType: iterator
  fullName: EntityContainer::iterator
  type: Class
  syntax: *o1
