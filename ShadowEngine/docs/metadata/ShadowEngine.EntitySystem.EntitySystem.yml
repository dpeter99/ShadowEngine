### YamlMime:ManagedReference
items:
- uid: ShadowEngine.EntitySystem.EntitySystem
  id: ShadowEngine.EntitySystem.EntitySystem
  parent: ShadowEngine.EntitySystem
  children:
  - ShadowEngine.EntitySystem.EntitySystem.EntitySystem()
  - ShadowEngine.EntitySystem.EntitySystem.GetActiveScene()
  - ShadowEngine.EntitySystem.EntitySystem.GetName()
  - ShadowEngine.EntitySystem.EntitySystem.Init()
  - ShadowEngine.EntitySystem.EntitySystem.LateRender()
  - ShadowEngine.EntitySystem.EntitySystem.LoadEmptyScene()
  - ShadowEngine.EntitySystem.EntitySystem.LoadScene(Scene *)
  - ShadowEngine.EntitySystem.EntitySystem.Render()
  - ShadowEngine.EntitySystem.EntitySystem.Update()
  href: ShadowEngine.EntitySystem.EntitySystem.yml
  langs:
  - cplusplus
  name: EntitySystem
  nameWithType: EntitySystem
  fullName: ShadowEngine::EntitySystem::EntitySystem
  type: Class
  source:
    remote: &o0
      path: ShadowEngine/src/EntitySystem/EntitySystem.h
      branch: d3d12
      repo: https://github.com/dpeter99/ShadowEngine
    path: ShadowEngine/src/EntitySystem/EntitySystem.h
    startLine: 12
  header:
    remote: *o0
    path: ShadowEngine/src/EntitySystem/EntitySystem.h
    startLine: 13
  namespace: ShadowEngine.EntitySystem
  summary: "<p>The module that manages all the Entities and Scenes </p>"
  syntax: &o2
    content: 'public: class EntitySystem : public hadowModule'
  inheritance:
  - System::Object
  - ShadowEngine.SHObject
  - ShadowEngine.ShadowModule
  inheritedMembers:
  - ShadowEngine.SHObject.GenerateId()
  - ShadowEngine.SHObject.GetType()
  - ShadowEngine.SHObject.GetTypeId()
  - ShadowEngine.SHObject.~SHObject()
- uid: ShadowEngine.EntitySystem.EntitySystem.EntitySystem()
  id: ShadowEngine.EntitySystem.EntitySystem.EntitySystem()
  parent: ShadowEngine.EntitySystem.EntitySystem
  href: ShadowEngine.EntitySystem.EntitySystem.yml
  langs:
  - cplusplus
  name: EntitySystem()
  nameWithType: EntitySystem::EntitySystem()
  fullName: ShadowEngine::EntitySystem::EntitySystem::EntitySystem()
  overload: ShadowEngine.EntitySystem.EntitySystem.EntitySystem*
  type: Constructor
  source:
    remote: &o1
      path: ShadowEngine/src/EntitySystem/EntitySystem.cpp
      branch: d3d12
      repo: https://github.com/dpeter99/ShadowEngine
    path: ShadowEngine/src/EntitySystem/EntitySystem.cpp
    startLine: 5
  header:
    remote: *o0
    path: ShadowEngine/src/EntitySystem/EntitySystem.h
    startLine: 28
  namespace: ShadowEngine.EntitySystem
  syntax:
    content: 'public: EntitySystem()'
- uid: ShadowEngine.EntitySystem.EntitySystem.GetActiveScene()
  id: ShadowEngine.EntitySystem.EntitySystem.GetActiveScene()
  parent: ShadowEngine.EntitySystem.EntitySystem
  href: ShadowEngine.EntitySystem.EntitySystem.yml
  langs:
  - cplusplus
  name: GetActiveScene()
  nameWithType: EntitySystem::GetActiveScene()
  fullName: ShadowEngine::Scope<Scene> & ShadowEngine::EntitySystem::EntitySystem::GetActiveScene()
  overload: ShadowEngine.EntitySystem.EntitySystem.GetActiveScene*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/EntitySystem/EntitySystem.cpp
    startLine: 20
  header:
    remote: *o0
    path: ShadowEngine/src/EntitySystem/EntitySystem.h
    startLine: 41
  namespace: ShadowEngine.EntitySystem
  syntax:
    content: 'public: ShadowEngine::Scope<Scene> & GetActiveScene()'
    return:
      type: f5709926ShadowEngine.EntitySystem.Scene1a4c7661
- uid: ShadowEngine.EntitySystem.EntitySystem.GetName()
  id: ShadowEngine.EntitySystem.EntitySystem.GetName()
  parent: ShadowEngine.EntitySystem.EntitySystem
  href: ShadowEngine.EntitySystem.EntitySystem.yml
  langs:
  - cplusplus
  name: GetName()
  nameWithType: EntitySystem::GetName()
  fullName: std::string ShadowEngine::EntitySystem::EntitySystem::GetName()
  overload: ShadowEngine.EntitySystem.EntitySystem.GetName*
  type: Method
  source:
    remote: *o0
    path: ShadowEngine/src/EntitySystem/EntitySystem.h
    startLine: 30
  header:
    remote: *o0
    path: ShadowEngine/src/EntitySystem/EntitySystem.h
    startLine: 30
  namespace: ShadowEngine.EntitySystem
  syntax:
    content: 'public: virtual std::string GetName() override'
    return:
      type: 9626e5dd
  overridden: ShadowEngine.ShadowModule.GetName()
- uid: ShadowEngine.EntitySystem.EntitySystem.Init()
  id: ShadowEngine.EntitySystem.EntitySystem.Init()
  parent: ShadowEngine.EntitySystem.EntitySystem
  href: ShadowEngine.EntitySystem.EntitySystem.yml
  langs:
  - cplusplus
  name: Init()
  nameWithType: EntitySystem::Init()
  fullName: void ShadowEngine::EntitySystem::EntitySystem::Init()
  overload: ShadowEngine.EntitySystem.EntitySystem.Init*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/EntitySystem/EntitySystem.cpp
    startLine: 10
  header:
    remote: *o0
    path: ShadowEngine/src/EntitySystem/EntitySystem.h
    startLine: 32
  namespace: ShadowEngine.EntitySystem
  syntax:
    content: 'public: void Init() override'
- uid: ShadowEngine.EntitySystem.EntitySystem.LateRender()
  id: ShadowEngine.EntitySystem.EntitySystem.LateRender()
  parent: ShadowEngine.EntitySystem.EntitySystem
  href: ShadowEngine.EntitySystem.EntitySystem.yml
  langs:
  - cplusplus
  name: LateRender()
  nameWithType: EntitySystem::LateRender()
  fullName: void ShadowEngine::EntitySystem::EntitySystem::LateRender()
  overload: ShadowEngine.EntitySystem.EntitySystem.LateRender*
  type: Method
  source:
    remote: *o0
    path: ShadowEngine/src/EntitySystem/EntitySystem.h
    startLine: 36
  header:
    remote: *o0
    path: ShadowEngine/src/EntitySystem/EntitySystem.h
    startLine: 36
  namespace: ShadowEngine.EntitySystem
  syntax:
    content: 'public: virtual void LateRender() override'
  overridden: ShadowEngine.ShadowModule.LateRender()
- uid: ShadowEngine.EntitySystem.EntitySystem.LoadEmptyScene()
  id: ShadowEngine.EntitySystem.EntitySystem.LoadEmptyScene()
  parent: ShadowEngine.EntitySystem.EntitySystem
  href: ShadowEngine.EntitySystem.EntitySystem.yml
  langs:
  - cplusplus
  name: LoadEmptyScene()
  nameWithType: EntitySystem::LoadEmptyScene()
  fullName: void ShadowEngine::EntitySystem::EntitySystem::LoadEmptyScene()
  overload: ShadowEngine.EntitySystem.EntitySystem.LoadEmptyScene*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/EntitySystem/EntitySystem.cpp
    startLine: 25
  header:
    remote: *o0
    path: ShadowEngine/src/EntitySystem/EntitySystem.h
    startLine: 38
  namespace: ShadowEngine.EntitySystem
  syntax:
    content: 'public: void LoadEmptyScene()'
- uid: ShadowEngine.EntitySystem.EntitySystem.LoadScene(Scene *)
  id: ShadowEngine.EntitySystem.EntitySystem.LoadScene(Scene *)
  parent: ShadowEngine.EntitySystem.EntitySystem
  href: ShadowEngine.EntitySystem.EntitySystem.yml
  langs:
  - cplusplus
  name: LoadScene(Scene *scene)
  nameWithType: EntitySystem::LoadScene(Scene *scene)
  fullName: void ShadowEngine::EntitySystem::EntitySystem::LoadScene(Scene *scene)
  overload: ShadowEngine.EntitySystem.EntitySystem.LoadScene*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/EntitySystem/EntitySystem.cpp
    startLine: 35
  header:
    remote: *o0
    path: ShadowEngine/src/EntitySystem/EntitySystem.h
    startLine: 39
  namespace: ShadowEngine.EntitySystem
  syntax:
    content: 'public: void LoadScene(Scene *scene)'
    parameters:
    - id: scene
      type: ShadowEngine.EntitySystem.Scene68bc11b4
- uid: ShadowEngine.EntitySystem.EntitySystem.Render()
  id: ShadowEngine.EntitySystem.EntitySystem.Render()
  parent: ShadowEngine.EntitySystem.EntitySystem
  href: ShadowEngine.EntitySystem.EntitySystem.yml
  langs:
  - cplusplus
  name: Render()
  nameWithType: EntitySystem::Render()
  fullName: void ShadowEngine::EntitySystem::EntitySystem::Render()
  overload: ShadowEngine.EntitySystem.EntitySystem.Render*
  type: Method
  source:
    remote: *o0
    path: ShadowEngine/src/EntitySystem/EntitySystem.h
    startLine: 35
  header:
    remote: *o0
    path: ShadowEngine/src/EntitySystem/EntitySystem.h
    startLine: 35
  namespace: ShadowEngine.EntitySystem
  syntax:
    content: 'public: virtual void Render() override'
  overridden: ShadowEngine.ShadowModule.Render()
- uid: ShadowEngine.EntitySystem.EntitySystem.Update()
  id: ShadowEngine.EntitySystem.EntitySystem.Update()
  parent: ShadowEngine.EntitySystem.EntitySystem
  href: ShadowEngine.EntitySystem.EntitySystem.yml
  langs:
  - cplusplus
  name: Update()
  nameWithType: EntitySystem::Update()
  fullName: void ShadowEngine::EntitySystem::EntitySystem::Update()
  overload: ShadowEngine.EntitySystem.EntitySystem.Update*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/EntitySystem/EntitySystem.cpp
    startLine: 15
  header:
    remote: *o0
    path: ShadowEngine/src/EntitySystem/EntitySystem.h
    startLine: 33
  namespace: ShadowEngine.EntitySystem
  syntax:
    content: 'public: virtual void Update() override'
  overridden: ShadowEngine.ShadowModule.Update()
references:
- uid: ShadowEngine.EntitySystem.EntitySystem.EntitySystem*
  name: EntitySystem
  nameWithType: EntitySystem::EntitySystem
  fullName: ShadowEngine::EntitySystem::EntitySystem::EntitySystem
- uid: 9626e5dd
  spec.cplusplus:
  - name: std::string
    fullName: std::string
- uid: ShadowEngine.EntitySystem.EntitySystem.GetName*
  name: GetName
  nameWithType: EntitySystem::GetName
  fullName: std::string ShadowEngine::EntitySystem::EntitySystem::GetName
- uid: ShadowEngine.EntitySystem.EntitySystem.Init*
  name: Init
  nameWithType: EntitySystem::Init
  fullName: void ShadowEngine::EntitySystem::EntitySystem::Init
- uid: ShadowEngine.EntitySystem.EntitySystem.Update*
  name: Update
  nameWithType: EntitySystem::Update
  fullName: void ShadowEngine::EntitySystem::EntitySystem::Update
- uid: ShadowEngine.EntitySystem.EntitySystem.Render*
  name: Render
  nameWithType: EntitySystem::Render
  fullName: void ShadowEngine::EntitySystem::EntitySystem::Render
- uid: ShadowEngine.EntitySystem.EntitySystem.LateRender*
  name: LateRender
  nameWithType: EntitySystem::LateRender
  fullName: void ShadowEngine::EntitySystem::EntitySystem::LateRender
- uid: ShadowEngine.EntitySystem.EntitySystem.LoadEmptyScene*
  name: LoadEmptyScene
  nameWithType: EntitySystem::LoadEmptyScene
  fullName: void ShadowEngine::EntitySystem::EntitySystem::LoadEmptyScene
- uid: ShadowEngine.EntitySystem.Scene68bc11b4
  spec.cplusplus:
  - uid: ShadowEngine.EntitySystem.Scene
  - name: " *"
    fullName: " *"
- uid: ShadowEngine.EntitySystem.EntitySystem.LoadScene*
  name: LoadScene
  nameWithType: EntitySystem::LoadScene
  fullName: void ShadowEngine::EntitySystem::EntitySystem::LoadScene
- uid: f5709926ShadowEngine.EntitySystem.Scene1a4c7661
  spec.cplusplus:
  - name: ShadowEngine::Scope<
    fullName: ShadowEngine::Scope<
  - uid: ShadowEngine.EntitySystem.Scene
  - name: '> &'
    fullName: '> &'
- uid: ShadowEngine.EntitySystem.EntitySystem.GetActiveScene*
  name: GetActiveScene
  nameWithType: EntitySystem::GetActiveScene
  fullName: ShadowEngine::Scope<Scene> & ShadowEngine::EntitySystem::EntitySystem::GetActiveScene
- uid: ShadowEngine.SHObject.GenerateId()
  parent: ShadowEngine.SHObject
  href: ShadowEngine.SHObject.yml
  name: GenerateId()
  nameWithType: SHObject::GenerateId()
  fullName: static uint64_t ShadowEngine::SHObject::GenerateId()
  type: Method
  summary: "<p>Generates a new UID for each call. </p>"
  syntax:
    content: 'protected: static uint64_t GenerateId() noexcept'
    return:
      type: 6d8267d6
      description: <p>Unique ID </p>
- uid: ShadowEngine.SHObject.GetType()
  parent: ShadowEngine.SHObject
  href: ShadowEngine.SHObject.yml
  name: GetType()
  nameWithType: SHObject::GetType()
  fullName: virtual const std::string& ShadowEngine::SHObject::GetType()
  type: Method
  summary: "<p>Returns the top level class type name of the object. </p>"
  syntax:
    content: 'public: virtual const std::string & GetType() const =0'
    return:
      type: 360fc41e
      description: <p>Class name string </p>
- uid: ShadowEngine.SHObject.GetTypeId()
  parent: ShadowEngine.SHObject
  href: ShadowEngine.SHObject.yml
  name: GetTypeId()
  nameWithType: SHObject::GetTypeId()
  fullName: virtual const uint64_t ShadowEngine::SHObject::GetTypeId()
  type: Method
  summary: "<p>Gets the top level type ID. </p>"
  syntax:
    content: 'public: virtual const uint64_t GetTypeId() const =0'
    return:
      type: 29dc5929
      description: <p>UID of the class </p>
- uid: ShadowEngine.SHObject.~SHObject()
  parent: ShadowEngine.SHObject
  href: ShadowEngine.SHObject.yml
  name: ~SHObject()
  nameWithType: SHObject::~SHObject()
  fullName: virtual ShadowEngine::SHObject::~SHObject()
  type: Constructor
  syntax:
    content: 'public: virtual ~SHObject()=default'
- uid: ShadowEngine.ShadowModule
  parent: ShadowEngine
  href: ShadowEngine.ShadowModule.yml
  name: ShadowModule
  nameWithType: ShadowModule
  fullName: ShadowEngine::ShadowModule
  type: Class
  syntax:
    content: 'public: class ShadowModule'
- uid: _entity_system_8h
- uid: ShadowEngine.EntitySystem.EntitySystem
  parent: ShadowEngine.EntitySystem
  href: ShadowEngine.EntitySystem.EntitySystem.yml
  name: EntitySystem
  nameWithType: EntitySystem
  fullName: ShadowEngine::EntitySystem::EntitySystem
  type: Class
  summary: "<p>The module that manages all the Entities and Scenes </p>"
  syntax: *o2
- uid: ShadowEngine.EntitySystem.Scene
  parent: ShadowEngine.EntitySystem
  href: ShadowEngine.EntitySystem.Scene.yml
  name: Scene
  nameWithType: Scene
  fullName: ShadowEngine::EntitySystem::Scene
  type: Class
  syntax:
    content: 'public: class Scene'
- uid: ShadowEngine.ShadowModule.GetName()
- uid: ShadowEngine.ShadowModule.Update()
- uid: ShadowEngine.ShadowModule.Render()
- uid: ShadowEngine.ShadowModule.LateRender()
