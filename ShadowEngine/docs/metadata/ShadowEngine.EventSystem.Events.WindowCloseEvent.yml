### YamlMime:ManagedReference
items:
- uid: ShadowEngine.EventSystem.Events.WindowCloseEvent
  id: ShadowEngine.EventSystem.Events.WindowCloseEvent
  parent: ShadowEngine.EventSystem.Events
  href: ShadowEngine.EventSystem.Events.WindowCloseEvent.yml
  langs:
  - cplusplus
  name: WindowCloseEvent
  nameWithType: WindowCloseEvent
  fullName: ShadowEngine::EventSystem::Events::WindowCloseEvent
  type: Class
  source:
    remote: &o0
      path: ShadowEngine/src/ShadowEvents/Events/ApplicationEvent.h
      branch: d3d12
      repo: https://github.com/dpeter99/ShadowEngine
    path: ShadowEngine/src/ShadowEvents/Events/ApplicationEvent.h
    startLine: 29
  header:
    remote: *o0
    path: ShadowEngine/src/ShadowEvents/Events/ApplicationEvent.h
    startLine: 30
  namespace: ShadowEngine.EventSystem.Events
  syntax: &o1
    content: 'public: class WindowCloseEvent : public adowEvent'
  inheritance:
  - System::Object
  - ShadowEngine.SHObject
  - ShadowEngine.EventSystem.ShadowEvent
  inheritedMembers:
  - ShadowEngine.SHObject.GenerateId()
  - ShadowEngine.EventSystem.ShadowEvent.GetSDLEvnet()
  - ShadowEngine.SHObject.GetType()
  - ShadowEngine.SHObject.GetTypeId()
  - ShadowEngine.EventSystem.ShadowEvent.Handled
  - ShadowEngine.EventSystem.ShadowEvent.ShadowEvent(SDL_Event *)
  - ShadowEngine.EventSystem.ShadowEvent.ToString()
  - ShadowEngine.EventSystem.ShadowEvent.~ShadowEvent()
  - ShadowEngine.SHObject.~SHObject()
references:
- uid: ShadowEngine.SHObject.GenerateId()
  parent: ShadowEngine.SHObject
  href: ShadowEngine.SHObject.yml
  name: GenerateId()
  nameWithType: SHObject::GenerateId()
  fullName: static uint64_t ShadowEngine::SHObject::GenerateId()
  type: Method
  summary: "<p>Generates a new UID for each call. </p>"
  syntax:
    content: 'protected: static uint64_t GenerateId() noexcept'
    return:
      type: 6d8267d6
      description: <p>Unique ID </p>
- uid: ShadowEngine.EventSystem.ShadowEvent.GetSDLEvnet()
  parent: ShadowEngine.EventSystem.ShadowEvent
  href: ShadowEngine.EventSystem.ShadowEvent.yml
  name: GetSDLEvnet()
  nameWithType: ShadowEvent::GetSDLEvnet()
  fullName: SDL_Event* ShadowEngine::EventSystem::ShadowEvent::GetSDLEvnet()
  type: Method
  syntax:
    content: 'public: SDL_Event * GetSDLEvnet()'
    return:
      type: ca7bf93e
- uid: ShadowEngine.SHObject.GetType()
  parent: ShadowEngine.SHObject
  href: ShadowEngine.SHObject.yml
  name: GetType()
  nameWithType: SHObject::GetType()
  fullName: virtual const std::string& ShadowEngine::SHObject::GetType()
  type: Method
  summary: "<p>Returns the top level class type name of the object. </p>"
  syntax:
    content: 'public: virtual const std::string & GetType() const =0'
    return:
      type: 360fc41e
      description: <p>Class name string </p>
- uid: ShadowEngine.SHObject.GetTypeId()
  parent: ShadowEngine.SHObject
  href: ShadowEngine.SHObject.yml
  name: GetTypeId()
  nameWithType: SHObject::GetTypeId()
  fullName: virtual const uint64_t ShadowEngine::SHObject::GetTypeId()
  type: Method
  summary: "<p>Gets the top level type ID. </p>"
  syntax:
    content: 'public: virtual const uint64_t GetTypeId() const =0'
    return:
      type: 29dc5929
      description: <p>UID of the class </p>
- uid: ShadowEngine.EventSystem.ShadowEvent.Handled
  parent: ShadowEngine.EventSystem.ShadowEvent
  href: ShadowEngine.EventSystem.ShadowEvent.yml
  name: Handled
  nameWithType: ShadowEvent::Handled
  fullName: bool ShadowEngine::EventSystem::ShadowEvent::Handled
  type: Field
  syntax:
    content: 'public: bool Handled= false'
    return:
      type: 13ff06c5
- uid: ShadowEngine.EventSystem.ShadowEvent.ShadowEvent(SDL_Event *)
  parent: ShadowEngine.EventSystem.ShadowEvent
  href: ShadowEngine.EventSystem.ShadowEvent.yml
  name: ShadowEvent(SDL_Event *ev)
  nameWithType: ShadowEvent::ShadowEvent(SDL_Event *ev)
  fullName: ShadowEngine::EventSystem::ShadowEvent::ShadowEvent(SDL_Event *ev)
  type: Constructor
  syntax:
    content: 'public: ShadowEvent(SDL_Event *ev)'
    parameters:
    - id: ev
      type: ca7bf93e
- uid: ShadowEngine.EventSystem.ShadowEvent.ToString()
  parent: ShadowEngine.EventSystem.ShadowEvent
  href: ShadowEngine.EventSystem.ShadowEvent.yml
  name: ToString()
  nameWithType: ShadowEvent::ToString()
  fullName: virtual std::string ShadowEngine::EventSystem::ShadowEvent::ToString()
  type: Method
  syntax:
    content: 'public: virtual std::string ToString() const'
    return:
      type: 9626e5dd
- uid: ShadowEngine.EventSystem.ShadowEvent.~ShadowEvent()
  parent: ShadowEngine.EventSystem.ShadowEvent
  href: ShadowEngine.EventSystem.ShadowEvent.yml
  name: ~ShadowEvent()
  nameWithType: ShadowEvent::~ShadowEvent()
  fullName: virtual ShadowEngine::EventSystem::ShadowEvent::~ShadowEvent()
  type: Constructor
  syntax:
    content: 'public: virtual ~ShadowEvent()'
- uid: ShadowEngine.SHObject.~SHObject()
  parent: ShadowEngine.SHObject
  href: ShadowEngine.SHObject.yml
  name: ~SHObject()
  nameWithType: SHObject::~SHObject()
  fullName: virtual ShadowEngine::SHObject::~SHObject()
  type: Constructor
  syntax:
    content: 'public: virtual ~SHObject()=default'
- uid: ShadowEngine.EventSystem.ShadowEvent
  parent: ShadowEngine.EventSystem
  href: ShadowEngine.EventSystem.ShadowEvent.yml
  name: ShadowEvent
  nameWithType: ShadowEvent
  fullName: ShadowEngine::EventSystem::ShadowEvent
  type: Class
  syntax:
    content: 'public: class ShadowEvent : public HObject'
- uid: ShadowEngine.EventSystem.Events.WindowCloseEvent
  parent: ShadowEngine.EventSystem.Events
  href: ShadowEngine.EventSystem.Events.WindowCloseEvent.yml
  name: WindowCloseEvent
  nameWithType: WindowCloseEvent
  fullName: ShadowEngine::EventSystem::Events::WindowCloseEvent
  type: Class
  syntax: *o1
