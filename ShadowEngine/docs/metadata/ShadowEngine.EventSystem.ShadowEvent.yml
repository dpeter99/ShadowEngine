### YamlMime:ManagedReference
items:
- uid: ShadowEngine.EventSystem.ShadowEvent
  id: ShadowEngine.EventSystem.ShadowEvent
  parent: ShadowEngine.EventSystem
  children:
  - ShadowEngine.EventSystem.ShadowEvent.~ShadowEvent()
  - ShadowEngine.EventSystem.ShadowEvent.GetSDLEvnet()
  - ShadowEngine.EventSystem.ShadowEvent.Handled
  - ShadowEngine.EventSystem.ShadowEvent.ShadowEvent(SDL_Event *)
  - ShadowEngine.EventSystem.ShadowEvent.ToString()
  href: ShadowEngine.EventSystem.ShadowEvent.yml
  langs:
  - cplusplus
  name: ShadowEvent
  nameWithType: ShadowEvent
  fullName: ShadowEngine::EventSystem::ShadowEvent
  type: Class
  source:
    remote: &o0
      path: ShadowEngine/src/ShadowEvents/ShadowEvent.h
      branch: d3d12
      repo: https://github.com/dpeter99/ShadowEngine
    path: ShadowEngine/src/ShadowEvents/ShadowEvent.h
    startLine: 8
  header:
    remote: *o0
    path: ShadowEngine/src/ShadowEvents/ShadowEvent.h
    startLine: 9
  namespace: ShadowEngine.EventSystem
  syntax:
    content: 'public: class ShadowEvent : public HObject'
  inheritance:
  - System::Object
  - ShadowEngine.SHObject
  inheritedMembers:
  - ShadowEngine.SHObject.GenerateId()
  - ShadowEngine.SHObject.GetType()
  - ShadowEngine.SHObject.GetTypeId()
  - ShadowEngine.SHObject.~SHObject()
- uid: ShadowEngine.EventSystem.ShadowEvent.~ShadowEvent()
  id: ShadowEngine.EventSystem.ShadowEvent.~ShadowEvent()
  parent: ShadowEngine.EventSystem.ShadowEvent
  href: ShadowEngine.EventSystem.ShadowEvent.yml
  langs:
  - cplusplus
  name: ~ShadowEvent()
  nameWithType: ShadowEvent::~ShadowEvent()
  fullName: virtual ShadowEngine::EventSystem::ShadowEvent::~ShadowEvent()
  overload: ShadowEngine.EventSystem.ShadowEvent.~ShadowEvent*
  type: Constructor
  source:
    remote: *o0
    path: ShadowEngine/src/ShadowEvents/ShadowEvent.h
    startLine: 27
  header:
    remote: *o0
    path: ShadowEngine/src/ShadowEvents/ShadowEvent.h
    startLine: 27
  namespace: ShadowEngine.EventSystem
  syntax:
    content: 'public: virtual ~ShadowEvent()'
- uid: ShadowEngine.EventSystem.ShadowEvent.GetSDLEvnet()
  id: ShadowEngine.EventSystem.ShadowEvent.GetSDLEvnet()
  parent: ShadowEngine.EventSystem.ShadowEvent
  href: ShadowEngine.EventSystem.ShadowEvent.yml
  langs:
  - cplusplus
  name: GetSDLEvnet()
  nameWithType: ShadowEvent::GetSDLEvnet()
  fullName: SDL_Event* ShadowEngine::EventSystem::ShadowEvent::GetSDLEvnet()
  overload: ShadowEngine.EventSystem.ShadowEvent.GetSDLEvnet*
  type: Method
  source:
    remote: *o0
    path: ShadowEngine/src/ShadowEvents/ShadowEvent.h
    startLine: 20
  header:
    remote: *o0
    path: ShadowEngine/src/ShadowEvents/ShadowEvent.h
    startLine: 20
  namespace: ShadowEngine.EventSystem
  syntax:
    content: 'public: SDL_Event * GetSDLEvnet()'
    return:
      type: ca7bf93e
- uid: ShadowEngine.EventSystem.ShadowEvent.Handled
  id: ShadowEngine.EventSystem.ShadowEvent.Handled
  parent: ShadowEngine.EventSystem.ShadowEvent
  href: ShadowEngine.EventSystem.ShadowEvent.yml
  langs:
  - cplusplus
  name: Handled
  nameWithType: ShadowEvent::Handled
  fullName: bool ShadowEngine::EventSystem::ShadowEvent::Handled
  type: Field
  source:
    remote: *o0
    path: ShadowEngine/src/ShadowEvents/ShadowEvent.h
    startLine: 16
  header:
    remote: *o0
    path: ShadowEngine/src/ShadowEvents/ShadowEvent.h
    startLine: 16
  namespace: ShadowEngine.EventSystem
  syntax:
    content: 'public: bool Handled= false'
    return:
      type: 13ff06c5
- uid: ShadowEngine.EventSystem.ShadowEvent.ShadowEvent(SDL_Event *)
  id: ShadowEngine.EventSystem.ShadowEvent.ShadowEvent(SDL_Event *)
  parent: ShadowEngine.EventSystem.ShadowEvent
  href: ShadowEngine.EventSystem.ShadowEvent.yml
  langs:
  - cplusplus
  name: ShadowEvent(SDL_Event *ev)
  nameWithType: ShadowEvent::ShadowEvent(SDL_Event *ev)
  fullName: ShadowEngine::EventSystem::ShadowEvent::ShadowEvent(SDL_Event *ev)
  overload: ShadowEngine.EventSystem.ShadowEvent.ShadowEvent*
  type: Constructor
  source:
    remote: *o0
    path: ShadowEngine/src/ShadowEvents/ShadowEvent.h
    startLine: 22
  header:
    remote: *o0
    path: ShadowEngine/src/ShadowEvents/ShadowEvent.h
    startLine: 22
  namespace: ShadowEngine.EventSystem
  syntax:
    content: 'public: ShadowEvent(SDL_Event *ev)'
    parameters:
    - id: ev
      type: ca7bf93e
- uid: ShadowEngine.EventSystem.ShadowEvent.ToString()
  id: ShadowEngine.EventSystem.ShadowEvent.ToString()
  parent: ShadowEngine.EventSystem.ShadowEvent
  href: ShadowEngine.EventSystem.ShadowEvent.yml
  langs:
  - cplusplus
  name: ToString()
  nameWithType: ShadowEvent::ToString()
  fullName: virtual std::string ShadowEngine::EventSystem::ShadowEvent::ToString()
  overload: ShadowEngine.EventSystem.ShadowEvent.ToString*
  type: Method
  source:
    remote: *o0
    path: ShadowEngine/src/ShadowEvents/ShadowEvent.h
    startLine: 18
  header:
    remote: *o0
    path: ShadowEngine/src/ShadowEvents/ShadowEvent.h
    startLine: 18
  namespace: ShadowEngine.EventSystem
  syntax:
    content: 'public: virtual std::string ToString() const'
    return:
      type: 9626e5dd
references:
- uid: 13ff06c5
  spec.cplusplus:
  - name: bool
    fullName: bool
- uid: 9626e5dd
  spec.cplusplus:
  - name: std::string
    fullName: std::string
- uid: ShadowEngine.EventSystem.ShadowEvent.ToString*
  name: ToString
  nameWithType: ShadowEvent::ToString
  fullName: virtual std::string ShadowEngine::EventSystem::ShadowEvent::ToString
- uid: ca7bf93e
  spec.cplusplus:
  - name: SDL_Event *
    fullName: SDL_Event *
- uid: ShadowEngine.EventSystem.ShadowEvent.GetSDLEvnet*
  name: GetSDLEvnet
  nameWithType: ShadowEvent::GetSDLEvnet
  fullName: SDL_Event* ShadowEngine::EventSystem::ShadowEvent::GetSDLEvnet
- uid: ShadowEngine.EventSystem.ShadowEvent.ShadowEvent*
  name: ShadowEvent
  nameWithType: ShadowEvent::ShadowEvent
  fullName: ShadowEngine::EventSystem::ShadowEvent::ShadowEvent
- uid: ShadowEngine.EventSystem.ShadowEvent.~ShadowEvent*
  name: ~ShadowEvent
  nameWithType: ShadowEvent::~ShadowEvent
  fullName: virtual ShadowEngine::EventSystem::ShadowEvent::~ShadowEvent
- uid: ShadowEngine.SHObject.GenerateId()
  parent: ShadowEngine.SHObject
  href: ShadowEngine.SHObject.yml
  name: GenerateId()
  nameWithType: SHObject::GenerateId()
  fullName: static uint64_t ShadowEngine::SHObject::GenerateId()
  type: Method
  summary: "<p>Generates a new UID for each call. </p>"
  syntax:
    content: 'protected: static uint64_t GenerateId() noexcept'
    return:
      type: 6d8267d6
      description: <p>Unique ID </p>
- uid: ShadowEngine.SHObject.GetType()
  parent: ShadowEngine.SHObject
  href: ShadowEngine.SHObject.yml
  name: GetType()
  nameWithType: SHObject::GetType()
  fullName: virtual const std::string& ShadowEngine::SHObject::GetType()
  type: Method
  summary: "<p>Returns the top level class type name of the object. </p>"
  syntax:
    content: 'public: virtual const std::string & GetType() const =0'
    return:
      type: 360fc41e
      description: <p>Class name string </p>
- uid: ShadowEngine.SHObject.GetTypeId()
  parent: ShadowEngine.SHObject
  href: ShadowEngine.SHObject.yml
  name: GetTypeId()
  nameWithType: SHObject::GetTypeId()
  fullName: virtual const uint64_t ShadowEngine::SHObject::GetTypeId()
  type: Method
  summary: "<p>Gets the top level type ID. </p>"
  syntax:
    content: 'public: virtual const uint64_t GetTypeId() const =0'
    return:
      type: 29dc5929
      description: <p>UID of the class </p>
- uid: ShadowEngine.SHObject.~SHObject()
  parent: ShadowEngine.SHObject
  href: ShadowEngine.SHObject.yml
  name: ~SHObject()
  nameWithType: SHObject::~SHObject()
  fullName: virtual ShadowEngine::SHObject::~SHObject()
  type: Constructor
  syntax:
    content: 'public: virtual ~SHObject()=default'
- uid: ShadowEngine.SHObject
  parent: ShadowEngine
  href: ShadowEngine.SHObject.yml
  name: SHObject
  nameWithType: SHObject
  fullName: ShadowEngine::SHObject
  type: Class
  summary: "<p>This is the base class for every class in the Engine that uses runtime reflection. </p>"
  syntax:
    content: 'public: class SHObject'
- uid: ShadowEngine.EventSystem.Events.KeyEvent
  parent: ShadowEngine.EventSystem.Events
  href: ShadowEngine.EventSystem.Events.KeyEvent.yml
  name: KeyEvent
  nameWithType: KeyEvent
  fullName: ShadowEngine::EventSystem::Events::KeyEvent
  type: Class
  syntax:
    content: 'public: class KeyEvent : public adowEvent'
- uid: ShadowEngine.EventSystem.Events.MouseButtonEvent
  parent: ShadowEngine.EventSystem.Events
  href: ShadowEngine.EventSystem.Events.MouseButtonEvent.yml
  name: MouseButtonEvent
  nameWithType: MouseButtonEvent
  fullName: ShadowEngine::EventSystem::Events::MouseButtonEvent
  type: Class
  syntax:
    content: 'public: class MouseButtonEvent : public adowEvent'
- uid: ShadowEngine.EventSystem.Events.MouseMovedEvent
  parent: ShadowEngine.EventSystem.Events
  href: ShadowEngine.EventSystem.Events.MouseMovedEvent.yml
  name: MouseMovedEvent
  nameWithType: MouseMovedEvent
  fullName: ShadowEngine::EventSystem::Events::MouseMovedEvent
  type: Class
  syntax:
    content: 'public: class MouseMovedEvent : public adowEvent'
- uid: ShadowEngine.EventSystem.Events.MouseScrolledEvent
  parent: ShadowEngine.EventSystem.Events
  href: ShadowEngine.EventSystem.Events.MouseScrolledEvent.yml
  name: MouseScrolledEvent
  nameWithType: MouseScrolledEvent
  fullName: ShadowEngine::EventSystem::Events::MouseScrolledEvent
  type: Class
  syntax:
    content: 'public: class MouseScrolledEvent : public adowEvent'
- uid: ShadowEngine.EventSystem.Events.WindowCloseEvent
  parent: ShadowEngine.EventSystem.Events
  href: ShadowEngine.EventSystem.Events.WindowCloseEvent.yml
  name: WindowCloseEvent
  nameWithType: WindowCloseEvent
  fullName: ShadowEngine::EventSystem::Events::WindowCloseEvent
  type: Class
  syntax:
    content: 'public: class WindowCloseEvent'
- uid: ShadowEngine.EventSystem.Events.WindowResizeEvent
  parent: ShadowEngine.EventSystem.Events
  href: ShadowEngine.EventSystem.Events.WindowResizeEvent.yml
  name: WindowResizeEvent
  nameWithType: WindowResizeEvent
  fullName: ShadowEngine::EventSystem::Events::WindowResizeEvent
  type: Class
  syntax:
    content: 'public: class WindowResizeEvent'
- uid: ShadowEngine.EventSystem.Events.MouseMovedEvent.ToString()
- uid: ShadowEngine.EventSystem.Events.WindowResizeEvent.ToString()
- uid: ShadowEngine.EventSystem.Events.KeyPressedEvent.ToString()
- uid: ShadowEngine.EventSystem.Events.MouseScrolledEvent.ToString()
- uid: ShadowEngine.EventSystem.Events.KeyReleasedEvent.ToString()
- uid: ShadowEngine.EventSystem.Events.KeyTypedEvent.ToString()
- uid: ShadowEngine.EventSystem.Events.MouseButtonPressedEvent.ToString()
- uid: ShadowEngine.EventSystem.Events.MouseButtonReleasedEvent.ToString()
