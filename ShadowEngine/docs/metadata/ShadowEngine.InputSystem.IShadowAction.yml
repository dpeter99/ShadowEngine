### YamlMime:ManagedReference
items:
- uid: ShadowEngine.InputSystem.IShadowAction
  id: ShadowEngine.InputSystem.IShadowAction
  parent: ShadowEngine.InputSystem
  href: ShadowEngine.InputSystem.IShadowAction.yml
  langs:
  - cplusplus
  name: IShadowAction
  nameWithType: IShadowAction
  fullName: ShadowEngine::InputSystem::IShadowAction
  type: Class
  source:
    remote: &o0
      path: ShadowEngine/src/ShadowInput/IShadowAction.h
      branch: d3d12
      repo: https://github.com/dpeter99/ShadowEngine
    path: ShadowEngine/src/ShadowInput/IShadowAction.h
    startLine: 9
  header:
    remote: *o0
    path: ShadowEngine/src/ShadowInput/IShadowAction.h
    startLine: 10
  namespace: ShadowEngine.InputSystem
  syntax: &o1
    content: 'public: class IShadowAction : public HObject'
  inheritance:
  - System::Object
  - ShadowEngine.SHObject
  inheritedMembers:
  - ShadowEngine.SHObject.GenerateId()
  - ShadowEngine.SHObject.GetType()
  - ShadowEngine.SHObject.GetTypeId()
  - ShadowEngine.SHObject.~SHObject()
references:
- uid: ShadowEngine.SHObject.GenerateId()
  parent: ShadowEngine.SHObject
  href: ShadowEngine.SHObject.yml
  name: GenerateId()
  nameWithType: SHObject::GenerateId()
  fullName: static uint64_t ShadowEngine::SHObject::GenerateId()
  type: Method
  summary: "<p>Generates a new UID for each call. </p>"
  syntax:
    content: 'protected: static uint64_t GenerateId() noexcept'
    return:
      type: 6d8267d6
      description: <p>Unique ID </p>
- uid: ShadowEngine.SHObject.GetType()
  parent: ShadowEngine.SHObject
  href: ShadowEngine.SHObject.yml
  name: GetType()
  nameWithType: SHObject::GetType()
  fullName: virtual const std::string& ShadowEngine::SHObject::GetType()
  type: Method
  summary: "<p>Returns the top level class type name of the object. </p>"
  syntax:
    content: 'public: virtual const std::string & GetType() const =0'
    return:
      type: 360fc41e
      description: <p>Class name string </p>
- uid: ShadowEngine.SHObject.GetTypeId()
  parent: ShadowEngine.SHObject
  href: ShadowEngine.SHObject.yml
  name: GetTypeId()
  nameWithType: SHObject::GetTypeId()
  fullName: virtual const uint64_t ShadowEngine::SHObject::GetTypeId()
  type: Method
  summary: "<p>Gets the top level type ID. </p>"
  syntax:
    content: 'public: virtual const uint64_t GetTypeId() const =0'
    return:
      type: 29dc5929
      description: <p>UID of the class </p>
- uid: ShadowEngine.SHObject.~SHObject()
  parent: ShadowEngine.SHObject
  href: ShadowEngine.SHObject.yml
  name: ~SHObject()
  nameWithType: SHObject::~SHObject()
  fullName: virtual ShadowEngine::SHObject::~SHObject()
  type: Constructor
  syntax:
    content: 'public: virtual ~SHObject()=default'
- uid: ShadowEngine.SHObject
  parent: ShadowEngine
  href: ShadowEngine.SHObject.yml
  name: SHObject
  nameWithType: SHObject
  fullName: ShadowEngine::SHObject
  type: Class
  summary: "<p>This is the base class for every class in the Engine that uses runtime reflection. </p>"
  syntax:
    content: 'public: class SHObject'
- uid: ShadowEngine.InputSystem.ShadowAction
  parent: ShadowEngine.InputSystem
  href: ShadowEngine.InputSystem.ShadowAction.yml
  name: ShadowAction
  nameWithType: ShadowAction
  fullName: ShadowEngine::InputSystem::ShadowAction
  type: Class
  syntax:
    content: 'public: class ShadowAction'
    typeParameters:
    - id: class
      type: 4fedf2a2
- uid: ShadowEngine.InputSystem.IShadowAction
  parent: ShadowEngine.InputSystem
  href: ShadowEngine.InputSystem.IShadowAction.yml
  name: IShadowAction
  nameWithType: IShadowAction
  fullName: ShadowEngine::InputSystem::IShadowAction
  type: Class
  syntax: *o1
- uid: ShadowEngine.InputSystem.ShadowAction.ProcessEvent(EventSystem::ShadowEvent &)
  parent: ShadowEngine.InputSystem.ShadowAction
  href: ShadowEngine.InputSystem.ShadowAction.yml
  name: ProcessEvent(EventSystem::ShadowEvent &e)
  nameWithType: ShadowAction::ProcessEvent(EventSystem::ShadowEvent &e)
  fullName: void ShadowEngine::InputSystem::ShadowAction<T>::ProcessEvent(EventSystem::ShadowEvent &e)
  type: Method
  summary: "<p>Updates the Action with the event passed in. </p>"
  syntax:
    content: 'public: virtual void ProcessEvent(EventSystem::ShadowEvent &e) override'
    parameters:
    - id: e
      type: ShadowEngine.EventSystem.ShadowEvent76390d34
      description: <p>Event object </p>
- uid: ShadowEngine.EventSystem.ShadowEvent
  parent: ShadowEngine.EventSystem
  href: ShadowEngine.EventSystem.ShadowEvent.yml
  name: ShadowEvent
  nameWithType: ShadowEvent
  fullName: ShadowEngine::EventSystem::ShadowEvent
  type: Class
  syntax:
    content: 'public: class ShadowEvent'
- uid: ShadowEngine.InputSystem.ShadowAction.Update()
  parent: ShadowEngine.InputSystem.ShadowAction
  href: ShadowEngine.InputSystem.ShadowAction.yml
  name: Update()
  nameWithType: ShadowAction::Update()
  fullName: void ShadowEngine::InputSystem::ShadowAction<T>::Update()
  type: Method
  syntax:
    content: 'public: virtual void Update() override'
- uid: ShadowEngine.InputSystem.ShadowAction.AddEventListener(ActionState)
  parent: ShadowEngine.InputSystem.ShadowAction
  href: ShadowEngine.InputSystem.ShadowAction.yml
  name: AddEventListener(ActionState state)
  nameWithType: ShadowAction::AddEventListener(ActionState state)
  fullName: void ShadowEngine::InputSystem::ShadowAction<T>::AddEventListener(ActionState state)
  type: Method
  syntax:
    content: 'public: virtual void AddEventListener(ActionState state) override'
    parameters:
    - id: state
      type: e1ec438b
- uid: ShadowEngine.InputSystem.ShadowAction.RemoveEventListener()
  parent: ShadowEngine.InputSystem.ShadowAction
  href: ShadowEngine.InputSystem.ShadowAction.yml
  name: RemoveEventListener()
  nameWithType: ShadowAction::RemoveEventListener()
  fullName: void ShadowEngine::InputSystem::ShadowAction<T>::RemoveEventListener()
  type: Method
  syntax:
    content: 'public: virtual void RemoveEventListener() override'
- uid: ShadowEngine.InputSystem.ShadowAction.SetActive(bool)
  parent: ShadowEngine.InputSystem.ShadowAction
  href: ShadowEngine.InputSystem.ShadowAction.yml
  name: SetActive(bool set)
  nameWithType: ShadowAction::SetActive(bool set)
  fullName: void ShadowEngine::InputSystem::ShadowAction<T>::SetActive(bool set)
  type: Method
  syntax:
    content: 'public: virtual void SetActive(bool set) override'
    parameters:
    - id: set
      type: 13ff06c5
- uid: ShadowEngine.InputSystem.ShadowAction.GetName()
  parent: ShadowEngine.InputSystem.ShadowAction
  href: ShadowEngine.InputSystem.ShadowAction.yml
  name: GetName()
  nameWithType: ShadowAction::GetName()
  fullName: std::string ShadowEngine::InputSystem::ShadowAction<T>::GetName()
  type: Method
  syntax:
    content: 'public: virtual std::string GetName() override'
    return:
      type: 9626e5dd
- uid: ShadowEngine.InputSystem.ShadowAction.GetState()
  parent: ShadowEngine.InputSystem.ShadowAction
  href: ShadowEngine.InputSystem.ShadowAction.yml
  name: GetState()
  nameWithType: ShadowAction::GetState()
  fullName: ActionState ShadowEngine::InputSystem::ShadowAction<T>::GetState()
  type: Method
  syntax:
    content: 'public: virtual ActionState GetState() override'
    return:
      type: e1ec438b
- uid: ShadowEngine.InputSystem.ShadowAction.SetState(ActionState)
  parent: ShadowEngine.InputSystem.ShadowAction
  href: ShadowEngine.InputSystem.ShadowAction.yml
  name: SetState(ActionState state)
  nameWithType: ShadowAction::SetState(ActionState state)
  fullName: void ShadowEngine::InputSystem::ShadowAction<T>::SetState(ActionState state)
  type: Method
  syntax:
    content: 'public: virtual void SetState(ActionState state) override'
    parameters:
    - id: state
      type: e1ec438b
- uid: ShadowEngine.InputSystem.ShadowAction.GetPerformed()
  parent: ShadowEngine.InputSystem.ShadowAction
  href: ShadowEngine.InputSystem.ShadowAction.yml
  name: GetPerformed()
  nameWithType: ShadowAction::GetPerformed()
  fullName: bool ShadowEngine::InputSystem::ShadowAction<T>::GetPerformed()
  type: Method
  syntax:
    content: 'public: virtual bool GetPerformed() override'
    return:
      type: 13ff06c5
- uid: ShadowEngine.InputSystem.ShadowAction.IsContinuous()
  parent: ShadowEngine.InputSystem.ShadowAction
  href: ShadowEngine.InputSystem.ShadowAction.yml
  name: IsContinuous()
  nameWithType: ShadowAction::IsContinuous()
  fullName: bool ShadowEngine::InputSystem::ShadowAction<T>::IsContinuous()
  type: Method
  syntax:
    content: 'public: virtual bool IsContinuous() override'
    return:
      type: 13ff06c5
- uid: ShadowEngine.InputSystem.ShadowAction.SetContinuous(bool)
  parent: ShadowEngine.InputSystem.ShadowAction
  href: ShadowEngine.InputSystem.ShadowAction.yml
  name: SetContinuous(bool set)
  nameWithType: ShadowAction::SetContinuous(bool set)
  fullName: void ShadowEngine::InputSystem::ShadowAction<T>::SetContinuous(bool set)
  type: Method
  syntax:
    content: 'public: virtual void SetContinuous(bool set) override'
    parameters:
    - id: set
      type: 13ff06c5
- uid: ShadowEngine.InputSystem.IInputBinding
  parent: ShadowEngine.InputSystem
  href: ShadowEngine.InputSystem.IInputBinding.yml
  name: IInputBinding
  nameWithType: IInputBinding
  fullName: ShadowEngine::InputSystem::IInputBinding
  type: Class
  summary: "<p>Interface for the Bindings. </p>"
  syntax:
    content: 'public: class IInputBinding : public HObject'
- uid: ShadowEngine.InputSystem.ShadowAction.GetBinding()
  parent: ShadowEngine.InputSystem.ShadowAction
  href: ShadowEngine.InputSystem.ShadowAction.yml
  name: GetBinding()
  nameWithType: ShadowAction::GetBinding()
  fullName: IInputBinding& ShadowEngine::InputSystem::ShadowAction<T>::GetBinding()
  type: Method
  syntax:
    content: 'public: virtual IInputBinding & GetBinding() override'
    return:
      type: ShadowEngine.InputSystem.IInputBinding76390d34
