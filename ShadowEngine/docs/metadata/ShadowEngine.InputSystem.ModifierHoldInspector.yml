### YamlMime:ManagedReference
items:
- uid: ShadowEngine.InputSystem.ModifierHoldInspector
  id: ShadowEngine.InputSystem.ModifierHoldInspector
  parent: ShadowEngine.InputSystem
  children:
  - ShadowEngine.InputSystem.ModifierHoldInspector.Draw(SHObject &)
  href: ShadowEngine.InputSystem.ModifierHoldInspector.yml
  langs:
  - cplusplus
  name: ModifierHoldInspector
  nameWithType: ModifierHoldInspector
  fullName: ShadowEngine::InputSystem::ModifierHoldInspector
  type: Class
  source:
    remote: &o0
      path: ShadowEngine/src/ShadowInput/Inspectors/ModifierHoldInspector.h
      branch: d3d12
      repo: https://github.com/dpeter99/ShadowEngine
    path: ShadowEngine/src/ShadowInput/Inspectors/ModifierHoldInspector.h
    startLine: 8
  header:
    remote: *o0
    path: ShadowEngine/src/ShadowInput/Inspectors/ModifierHoldInspector.h
    startLine: 9
  namespace: ShadowEngine.InputSystem
  syntax:
    content: 'public: class ModifierHoldInspector : public spector'
  inheritance:
  - System::Object
  - ShadowEngine.SHObject
  - ShadowEngine.Debug.Inspector
  inheritedMembers:
  - ShadowEngine.SHObject.GenerateId()
  - ShadowEngine.SHObject.GetType()
  - ShadowEngine.SHObject.GetTypeId()
  - ShadowEngine.SHObject.~SHObject()
- uid: ShadowEngine.InputSystem.ModifierHoldInspector.Draw(SHObject &)
  id: ShadowEngine.InputSystem.ModifierHoldInspector.Draw(SHObject &)
  parent: ShadowEngine.InputSystem.ModifierHoldInspector
  href: ShadowEngine.InputSystem.ModifierHoldInspector.yml
  langs:
  - cplusplus
  name: Draw(SHObject &obj)
  nameWithType: ModifierHoldInspector::Draw(SHObject &obj)
  fullName: void ShadowEngine::InputSystem::ModifierHoldInspector::Draw(SHObject &obj)
  overload: ShadowEngine.InputSystem.ModifierHoldInspector.Draw*
  type: Method
  source:
    remote: *o0
    path: ShadowEngine/src/ShadowInput/Inspectors/ModifierHoldInspector.h
    startLine: 11
  header:
    remote: *o0
    path: ShadowEngine/src/ShadowInput/Inspectors/ModifierHoldInspector.h
    startLine: 11
  namespace: ShadowEngine.InputSystem
  syntax:
    content: 'public: void Draw(SHObject &obj) override'
    parameters:
    - id: obj
      type: ShadowEngine.SHObject76390d34
references:
- uid: ShadowEngine.SHObject76390d34
  spec.cplusplus:
  - uid: ShadowEngine.SHObject
  - name: " &"
    fullName: " &"
- uid: ShadowEngine.InputSystem.ModifierHoldInspector.Draw*
  name: Draw
  nameWithType: ModifierHoldInspector::Draw
  fullName: void ShadowEngine::InputSystem::ModifierHoldInspector::Draw
- uid: ShadowEngine.SHObject.GenerateId()
  parent: ShadowEngine.SHObject
  href: ShadowEngine.SHObject.yml
  name: GenerateId()
  nameWithType: SHObject::GenerateId()
  fullName: static uint64_t ShadowEngine::SHObject::GenerateId()
  type: Method
  summary: "<p>Generates a new UID for each call. </p>"
  syntax:
    content: 'protected: static uint64_t GenerateId() noexcept'
    return:
      type: 6d8267d6
      description: <p>Unique ID </p>
- uid: ShadowEngine.SHObject.GetType()
  parent: ShadowEngine.SHObject
  href: ShadowEngine.SHObject.yml
  name: GetType()
  nameWithType: SHObject::GetType()
  fullName: virtual const std::string& ShadowEngine::SHObject::GetType()
  type: Method
  summary: "<p>Returns the top level class type name of the object. </p>"
  syntax:
    content: 'public: virtual const std::string & GetType() const =0'
    return:
      type: 360fc41e
      description: <p>Class name string </p>
- uid: ShadowEngine.SHObject.GetTypeId()
  parent: ShadowEngine.SHObject
  href: ShadowEngine.SHObject.yml
  name: GetTypeId()
  nameWithType: SHObject::GetTypeId()
  fullName: virtual const uint64_t ShadowEngine::SHObject::GetTypeId()
  type: Method
  summary: "<p>Gets the top level type ID. </p>"
  syntax:
    content: 'public: virtual const uint64_t GetTypeId() const =0'
    return:
      type: 29dc5929
      description: <p>UID of the class </p>
- uid: ShadowEngine.SHObject.~SHObject()
  parent: ShadowEngine.SHObject
  href: ShadowEngine.SHObject.yml
  name: ~SHObject()
  nameWithType: SHObject::~SHObject()
  fullName: virtual ShadowEngine::SHObject::~SHObject()
  type: Constructor
  syntax:
    content: 'public: virtual ~SHObject()=default'
- uid: ShadowEngine.Debug.Inspector
  parent: ShadowEngine.Debug
  href: ShadowEngine.Debug.Inspector.yml
  name: Inspector
  nameWithType: Inspector
  fullName: ShadowEngine::Debug::Inspector
  type: Class
  syntax:
    content: 'public: class Inspector : public HObject'
- uid: ShadowEngine.SHObject
  parent: ShadowEngine
  href: ShadowEngine.SHObject.yml
  name: SHObject
  nameWithType: SHObject
  fullName: ShadowEngine::SHObject
  type: Class
  summary: "<p>This is the base class for every class in the Engine that uses runtime reflection. </p>"
  syntax:
    content: 'public: class SHObject'
