### YamlMime:ManagedReference
items:
- uid: ShadowEngine.InputSystem.ShadowAction
  id: ShadowEngine.InputSystem.ShadowAction
  parent: ShadowEngine.InputSystem
  children:
  - ShadowEngine.InputSystem.ShadowAction.~ShadowAction()
  - ShadowEngine.InputSystem.ShadowAction.AddEventListener(ActionState)
  - ShadowEngine.InputSystem.ShadowAction.Canceled()
  - ShadowEngine.InputSystem.ShadowAction.GetBinding()
  - ShadowEngine.InputSystem.ShadowAction.GetData()
  - ShadowEngine.InputSystem.ShadowAction.GetName()
  - ShadowEngine.InputSystem.ShadowAction.GetPerformed()
  - ShadowEngine.InputSystem.ShadowAction.GetState()
  - ShadowEngine.InputSystem.ShadowAction.IsContinuous()
  - ShadowEngine.InputSystem.ShadowAction.performed
  - ShadowEngine.InputSystem.ShadowAction.Performed()
  - ShadowEngine.InputSystem.ShadowAction.ProcessEvent(EventSystem::ShadowEvent &)
  - ShadowEngine.InputSystem.ShadowAction.Progress()
  - ShadowEngine.InputSystem.ShadowAction.RemoveEventListener()
  - ShadowEngine.InputSystem.ShadowAction.SetActive(bool)
  - ShadowEngine.InputSystem.ShadowAction.SetContinuous(bool)
  - ShadowEngine.InputSystem.ShadowAction.SetState(ActionState)
  - ShadowEngine.InputSystem.ShadowAction.ShadowAction(std::string,InputBinding<T> *,bool)
  - ShadowEngine.InputSystem.ShadowAction.Started()
  - ShadowEngine.InputSystem.ShadowAction.Update()
  href: ShadowEngine.InputSystem.ShadowAction.yml
  langs:
  - cplusplus
  name: ShadowAction
  nameWithType: ShadowAction
  fullName: ShadowEngine::InputSystem::ShadowAction
  type: Class
  source:
    remote: &o0
      path: ShadowEngine/src/ShadowInput/InputBinding.h
      branch: d3d12
      repo: https://github.com/dpeter99/ShadowEngine
    path: ShadowEngine/src/ShadowInput/InputBinding.h
    startLine: 15
  header:
    remote: *o0
    path: ShadowEngine/src/ShadowInput/InputBinding.h
    startLine: 15
  namespace: ShadowEngine.InputSystem
  syntax: &o2
    content: 'public: class ShadowAction : public hadowAction'
    typeParameters:
    - id: class
      type: 4fedf2a2
  inheritance:
  - System::Object
  - ShadowEngine.SHObject
  - ShadowEngine.InputSystem.IShadowAction
  inheritedMembers:
  - ShadowEngine.SHObject.GenerateId()
  - ShadowEngine.SHObject.GetType()
  - ShadowEngine.SHObject.GetTypeId()
  - ShadowEngine.InputSystem.ShadowAction.InputActionInspector
  - ShadowEngine.SHObject.~SHObject()
- uid: ShadowEngine.InputSystem.ShadowAction.~ShadowAction()
  id: ShadowEngine.InputSystem.ShadowAction.~ShadowAction()
  parent: ShadowEngine.InputSystem.ShadowAction
  href: ShadowEngine.InputSystem.ShadowAction.yml
  langs:
  - cplusplus
  name: ~ShadowAction()
  nameWithType: ShadowAction::~ShadowAction()
  fullName: ShadowEngine::InputSystem::ShadowAction<T>::~ShadowAction()
  overload: ShadowEngine.InputSystem.ShadowAction.~ShadowAction*
  type: Constructor
  source:
    remote: &o1
      path: ShadowEngine/src/ShadowInput/ShadowAction.h
      branch: d3d12
      repo: https://github.com/dpeter99/ShadowEngine
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 64
  header:
    remote: *o1
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 64
  namespace: ShadowEngine.InputSystem
  syntax:
    content: 'public: ~ShadowAction()'
- uid: ShadowEngine.InputSystem.ShadowAction.AddEventListener(ActionState)
  id: ShadowEngine.InputSystem.ShadowAction.AddEventListener(ActionState)
  parent: ShadowEngine.InputSystem.ShadowAction
  href: ShadowEngine.InputSystem.ShadowAction.yml
  langs:
  - cplusplus
  name: AddEventListener(ActionState state)
  nameWithType: ShadowAction::AddEventListener(ActionState state)
  fullName: void ShadowEngine::InputSystem::ShadowAction<T>::AddEventListener(ActionState state)
  overload: ShadowEngine.InputSystem.ShadowAction.AddEventListener*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 89
  header:
    remote: *o1
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 89
  namespace: ShadowEngine.InputSystem
  syntax:
    content: 'public: virtual void AddEventListener(ActionState state) override'
    parameters:
    - id: state
      type: e1ec438b
  overridden: ShadowEngine.InputSystem.IShadowAction.AddEventListener(ActionState)
- uid: ShadowEngine.InputSystem.ShadowAction.Canceled()
  id: ShadowEngine.InputSystem.ShadowAction.Canceled()
  parent: ShadowEngine.InputSystem.ShadowAction
  href: ShadowEngine.InputSystem.ShadowAction.yml
  langs:
  - cplusplus
  name: Canceled()
  nameWithType: ShadowAction::Canceled()
  fullName: void ShadowEngine::InputSystem::ShadowAction<T>::Canceled()
  overload: ShadowEngine.InputSystem.ShadowAction.Canceled*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 206
  header:
    remote: *o1
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 206
  namespace: ShadowEngine.InputSystem
  syntax:
    content: 'public: void Canceled()'
- uid: ShadowEngine.InputSystem.ShadowAction.GetBinding()
  id: ShadowEngine.InputSystem.ShadowAction.GetBinding()
  parent: ShadowEngine.InputSystem.ShadowAction
  href: ShadowEngine.InputSystem.ShadowAction.yml
  langs:
  - cplusplus
  name: GetBinding()
  nameWithType: ShadowAction::GetBinding()
  fullName: IInputBinding& ShadowEngine::InputSystem::ShadowAction<T>::GetBinding()
  overload: ShadowEngine.InputSystem.ShadowAction.GetBinding*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 155
  header:
    remote: *o1
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 155
  namespace: ShadowEngine.InputSystem
  syntax:
    content: 'public: virtual IInputBinding & GetBinding() override'
    return:
      type: ShadowEngine.InputSystem.IInputBinding76390d34
  overridden: ShadowEngine.InputSystem.IShadowAction.GetBinding()
- uid: ShadowEngine.InputSystem.ShadowAction.GetData()
  id: ShadowEngine.InputSystem.ShadowAction.GetData()
  parent: ShadowEngine.InputSystem.ShadowAction
  href: ShadowEngine.InputSystem.ShadowAction.yml
  langs:
  - cplusplus
  name: GetData()
  nameWithType: ShadowAction::GetData()
  fullName: const T ShadowEngine::InputSystem::ShadowAction<T>::GetData()
  overload: ShadowEngine.InputSystem.ShadowAction.GetData*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 176
  header:
    remote: *o1
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 176
  namespace: ShadowEngine.InputSystem
  syntax:
    content: 'public: const T GetData()'
    return:
      type: 1639c7a3
- uid: ShadowEngine.InputSystem.ShadowAction.GetName()
  id: ShadowEngine.InputSystem.ShadowAction.GetName()
  parent: ShadowEngine.InputSystem.ShadowAction
  href: ShadowEngine.InputSystem.ShadowAction.yml
  langs:
  - cplusplus
  name: GetName()
  nameWithType: ShadowAction::GetName()
  fullName: std::string ShadowEngine::InputSystem::ShadowAction<T>::GetName()
  overload: ShadowEngine.InputSystem.ShadowAction.GetName*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 103
  header:
    remote: *o1
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 103
  namespace: ShadowEngine.InputSystem
  syntax:
    content: 'public: virtual std::string GetName() override'
    return:
      type: 9626e5dd
  overridden: ShadowEngine.InputSystem.IShadowAction.GetName()
- uid: ShadowEngine.InputSystem.ShadowAction.GetPerformed()
  id: ShadowEngine.InputSystem.ShadowAction.GetPerformed()
  parent: ShadowEngine.InputSystem.ShadowAction
  href: ShadowEngine.InputSystem.ShadowAction.yml
  langs:
  - cplusplus
  name: GetPerformed()
  nameWithType: ShadowAction::GetPerformed()
  fullName: bool ShadowEngine::InputSystem::ShadowAction<T>::GetPerformed()
  overload: ShadowEngine.InputSystem.ShadowAction.GetPerformed*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 171
  header:
    remote: *o1
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 171
  namespace: ShadowEngine.InputSystem
  syntax:
    content: 'public: virtual bool GetPerformed() override'
    return:
      type: 13ff06c5
  overridden: ShadowEngine.InputSystem.IShadowAction.GetPerformed()
- uid: ShadowEngine.InputSystem.ShadowAction.GetState()
  id: ShadowEngine.InputSystem.ShadowAction.GetState()
  parent: ShadowEngine.InputSystem.ShadowAction
  href: ShadowEngine.InputSystem.ShadowAction.yml
  langs:
  - cplusplus
  name: GetState()
  nameWithType: ShadowAction::GetState()
  fullName: ActionState ShadowEngine::InputSystem::ShadowAction<T>::GetState()
  overload: ShadowEngine.InputSystem.ShadowAction.GetState*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 108
  header:
    remote: *o1
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 108
  namespace: ShadowEngine.InputSystem
  syntax:
    content: 'public: virtual ActionState GetState() override'
    return:
      type: e1ec438b
  overridden: ShadowEngine.InputSystem.IShadowAction.GetState()
- uid: ShadowEngine.InputSystem.ShadowAction.IsContinuous()
  id: ShadowEngine.InputSystem.ShadowAction.IsContinuous()
  parent: ShadowEngine.InputSystem.ShadowAction
  href: ShadowEngine.InputSystem.ShadowAction.yml
  langs:
  - cplusplus
  name: IsContinuous()
  nameWithType: ShadowAction::IsContinuous()
  fullName: bool ShadowEngine::InputSystem::ShadowAction<T>::IsContinuous()
  overload: ShadowEngine.InputSystem.ShadowAction.IsContinuous*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 160
  header:
    remote: *o1
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 160
  namespace: ShadowEngine.InputSystem
  syntax:
    content: 'public: virtual bool IsContinuous() override'
    return:
      type: 13ff06c5
  overridden: ShadowEngine.InputSystem.IShadowAction.IsContinuous()
- uid: ShadowEngine.InputSystem.ShadowAction.performed
  id: ShadowEngine.InputSystem.ShadowAction.performed
  parent: ShadowEngine.InputSystem.ShadowAction
  href: ShadowEngine.InputSystem.ShadowAction.yml
  langs:
  - cplusplus
  name: performed
  nameWithType: ShadowAction::performed
  fullName: Callback ShadowEngine::InputSystem::ShadowAction<T>::performed
  type: Field
  source:
    remote: *o1
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 46
  header:
    remote: *o1
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 46
  namespace: ShadowEngine.InputSystem
  syntax:
    content: 'public: Callback performed'
    return:
      type: Callback
- uid: ShadowEngine.InputSystem.ShadowAction.Performed()
  id: ShadowEngine.InputSystem.ShadowAction.Performed()
  parent: ShadowEngine.InputSystem.ShadowAction
  href: ShadowEngine.InputSystem.ShadowAction.yml
  langs:
  - cplusplus
  name: Performed()
  nameWithType: ShadowAction::Performed()
  fullName: void ShadowEngine::InputSystem::ShadowAction<T>::Performed()
  overload: ShadowEngine.InputSystem.ShadowAction.Performed*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 191
  header:
    remote: *o1
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 191
  namespace: ShadowEngine.InputSystem
  syntax:
    content: 'public: void Performed()'
- uid: ShadowEngine.InputSystem.ShadowAction.ProcessEvent(EventSystem::ShadowEvent &)
  id: ShadowEvent &)
  parent: ShadowEngine.InputSystem.ShadowAction
  href: ShadowEngine.InputSystem.ShadowAction.yml
  langs:
  - cplusplus
  name: ProcessEvent(EventSystem::ShadowEvent &e)
  nameWithType: ShadowAction::ProcessEvent(EventSystem::ShadowEvent &e)
  fullName: void ShadowEngine::InputSystem::ShadowAction<T>::ProcessEvent(EventSystem::ShadowEvent &e)
  overload: ShadowEngine.InputSystem.ShadowAction.ProcessEvent*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 74
  header:
    remote: *o1
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 74
  namespace: ShadowEngine.InputSystem
  summary: "<p>Updates the Action with the event passed in. </p>"
  syntax:
    content: 'public: virtual void ProcessEvent(EventSystem::ShadowEvent &e) override'
    parameters:
    - id: e
      type: ShadowEngine.EventSystem.ShadowEvent76390d34
      description: <p>Event object </p>
  overridden: ShadowEngine.InputSystem.IShadowAction.ProcessEvent(EventSystem::ShadowEvent &)
- uid: ShadowEngine.InputSystem.ShadowAction.Progress()
  id: ShadowEngine.InputSystem.ShadowAction.Progress()
  parent: ShadowEngine.InputSystem.ShadowAction
  href: ShadowEngine.InputSystem.ShadowAction.yml
  langs:
  - cplusplus
  name: Progress()
  nameWithType: ShadowAction::Progress()
  fullName: void ShadowEngine::InputSystem::ShadowAction<T>::Progress()
  overload: ShadowEngine.InputSystem.ShadowAction.Progress*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 201
  header:
    remote: *o1
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 201
  namespace: ShadowEngine.InputSystem
  syntax:
    content: 'public: void Progress()'
- uid: ShadowEngine.InputSystem.ShadowAction.RemoveEventListener()
  id: ShadowEngine.InputSystem.ShadowAction.RemoveEventListener()
  parent: ShadowEngine.InputSystem.ShadowAction
  href: ShadowEngine.InputSystem.ShadowAction.yml
  langs:
  - cplusplus
  name: RemoveEventListener()
  nameWithType: ShadowAction::RemoveEventListener()
  fullName: void ShadowEngine::InputSystem::ShadowAction<T>::RemoveEventListener()
  overload: ShadowEngine.InputSystem.ShadowAction.RemoveEventListener*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 93
  header:
    remote: *o1
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 93
  namespace: ShadowEngine.InputSystem
  syntax:
    content: 'public: virtual void RemoveEventListener() override'
  overridden: ShadowEngine.InputSystem.IShadowAction.RemoveEventListener()
- uid: ShadowEngine.InputSystem.ShadowAction.SetActive(bool)
  id: ShadowEngine.InputSystem.ShadowAction.SetActive(bool)
  parent: ShadowEngine.InputSystem.ShadowAction
  href: ShadowEngine.InputSystem.ShadowAction.yml
  langs:
  - cplusplus
  name: SetActive(bool set)
  nameWithType: ShadowAction::SetActive(bool set)
  fullName: void ShadowEngine::InputSystem::ShadowAction<T>::SetActive(bool set)
  overload: ShadowEngine.InputSystem.ShadowAction.SetActive*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 98
  header:
    remote: *o1
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 98
  namespace: ShadowEngine.InputSystem
  syntax:
    content: 'public: virtual void SetActive(bool set) override'
    parameters:
    - id: set
      type: 13ff06c5
  overridden: ShadowEngine.InputSystem.IShadowAction.SetActive(bool)
- uid: ShadowEngine.InputSystem.ShadowAction.SetContinuous(bool)
  id: ShadowEngine.InputSystem.ShadowAction.SetContinuous(bool)
  parent: ShadowEngine.InputSystem.ShadowAction
  href: ShadowEngine.InputSystem.ShadowAction.yml
  langs:
  - cplusplus
  name: SetContinuous(bool set)
  nameWithType: ShadowAction::SetContinuous(bool set)
  fullName: void ShadowEngine::InputSystem::ShadowAction<T>::SetContinuous(bool set)
  overload: ShadowEngine.InputSystem.ShadowAction.SetContinuous*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 166
  header:
    remote: *o1
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 166
  namespace: ShadowEngine.InputSystem
  syntax:
    content: 'public: virtual void SetContinuous(bool set) override'
    parameters:
    - id: set
      type: 13ff06c5
  overridden: ShadowEngine.InputSystem.IShadowAction.SetContinuous(bool)
- uid: ShadowEngine.InputSystem.ShadowAction.SetState(ActionState)
  id: ShadowEngine.InputSystem.ShadowAction.SetState(ActionState)
  parent: ShadowEngine.InputSystem.ShadowAction
  href: ShadowEngine.InputSystem.ShadowAction.yml
  langs:
  - cplusplus
  name: SetState(ActionState state)
  nameWithType: ShadowAction::SetState(ActionState state)
  fullName: void ShadowEngine::InputSystem::ShadowAction<T>::SetState(ActionState state)
  overload: ShadowEngine.InputSystem.ShadowAction.SetState*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 114
  header:
    remote: *o1
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 114
  namespace: ShadowEngine.InputSystem
  syntax:
    content: 'public: virtual void SetState(ActionState state) override'
    parameters:
    - id: state
      type: e1ec438b
  overridden: ShadowEngine.InputSystem.IShadowAction.SetState(ActionState)
- uid: ShadowEngine.InputSystem.ShadowAction.ShadowAction(std::string,InputBinding<T> *,bool)
  id: string,InputBinding<T> *,bool)
  parent: ShadowEngine.InputSystem.ShadowAction
  href: ShadowEngine.InputSystem.ShadowAction.yml
  langs:
  - cplusplus
  name: ShadowAction(std::string a, InputBinding<T> *b, bool continuous=false)
  nameWithType: ShadowAction::ShadowAction(std::string a, InputBinding<T> *b, bool continuous=false)
  fullName: ShadowEngine::InputSystem::ShadowAction<T>::ShadowAction(std::string a, InputBinding<T> *b, bool continuous=false)
  overload: ShadowEngine.InputSystem.ShadowAction.ShadowAction*
  type: Constructor
  source:
    remote: *o1
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 48
  header:
    remote: *o1
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 48
  namespace: ShadowEngine.InputSystem
  syntax:
    content: 'public: ShadowAction(std::string a, InputBinding<T> *b, bool continuous=false)'
    parameters:
    - id: a
      type: 9626e5dd
    - id: b
      type: ShadowEngine.InputSystem.InputBinding9b043d9a
    - id: continuous
      type: 13ff06c5
- uid: ShadowEngine.InputSystem.ShadowAction.Started()
  id: ShadowEngine.InputSystem.ShadowAction.Started()
  parent: ShadowEngine.InputSystem.ShadowAction
  href: ShadowEngine.InputSystem.ShadowAction.yml
  langs:
  - cplusplus
  name: Started()
  nameWithType: ShadowAction::Started()
  fullName: void ShadowEngine::InputSystem::ShadowAction<T>::Started()
  overload: ShadowEngine.InputSystem.ShadowAction.Started*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 196
  header:
    remote: *o1
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 196
  namespace: ShadowEngine.InputSystem
  syntax:
    content: 'public: void Started()'
- uid: ShadowEngine.InputSystem.ShadowAction.Update()
  id: ShadowEngine.InputSystem.ShadowAction.Update()
  parent: ShadowEngine.InputSystem.ShadowAction
  href: ShadowEngine.InputSystem.ShadowAction.yml
  langs:
  - cplusplus
  name: Update()
  nameWithType: ShadowAction::Update()
  fullName: void ShadowEngine::InputSystem::ShadowAction<T>::Update()
  overload: ShadowEngine.InputSystem.ShadowAction.Update*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 181
  header:
    remote: *o1
    path: ShadowEngine/src/ShadowInput/ShadowAction.h
    startLine: 181
  namespace: ShadowEngine.InputSystem
  syntax:
    content: 'public: virtual void Update() override'
  overridden: ShadowEngine.InputSystem.IShadowAction.Update()
references:
- uid: 4fedf2a2
  spec.cplusplus:
  - name: class
    fullName: class
- uid: 9626e5dd
  spec.cplusplus:
  - name: std::string
    fullName: std::string
- uid: ShadowEngine.InputSystem.InputBinding9b043d9a
  spec.cplusplus:
  - uid: ShadowEngine.InputSystem.InputBinding
  - name: <T> *
    fullName: <T> *
- uid: 13ff06c5
  spec.cplusplus:
  - name: bool
    fullName: bool
- uid: ShadowEngine.InputSystem.ShadowAction.ShadowAction*
  name: ShadowAction
  nameWithType: ShadowAction::ShadowAction
  fullName: ShadowEngine::InputSystem::ShadowAction<T>::ShadowAction
- uid: ShadowEngine.InputSystem.ShadowAction.~ShadowAction*
  name: ~ShadowAction
  nameWithType: ShadowAction::~ShadowAction
  fullName: ShadowEngine::InputSystem::ShadowAction<T>::~ShadowAction
- uid: ShadowEngine.EventSystem.ShadowEvent76390d34
  spec.cplusplus:
  - uid: ShadowEngine.EventSystem.ShadowEvent
  - name: " &"
    fullName: " &"
- uid: ShadowEngine.InputSystem.ShadowAction.ProcessEvent*
  name: ProcessEvent
  nameWithType: ShadowAction::ProcessEvent
  fullName: void ShadowEngine::InputSystem::ShadowAction<T>::ProcessEvent
- uid: e1ec438b
  spec.cplusplus:
  - name: ActionState
    fullName: ActionState
- uid: ShadowEngine.InputSystem.ShadowAction.AddEventListener*
  name: AddEventListener
  nameWithType: ShadowAction::AddEventListener
  fullName: void ShadowEngine::InputSystem::ShadowAction<T>::AddEventListener
- uid: ShadowEngine.InputSystem.ShadowAction.RemoveEventListener*
  name: RemoveEventListener
  nameWithType: ShadowAction::RemoveEventListener
  fullName: void ShadowEngine::InputSystem::ShadowAction<T>::RemoveEventListener
- uid: ShadowEngine.InputSystem.ShadowAction.SetActive*
  name: SetActive
  nameWithType: ShadowAction::SetActive
  fullName: void ShadowEngine::InputSystem::ShadowAction<T>::SetActive
- uid: ShadowEngine.InputSystem.ShadowAction.GetName*
  name: GetName
  nameWithType: ShadowAction::GetName
  fullName: std::string ShadowEngine::InputSystem::ShadowAction<T>::GetName
- uid: ShadowEngine.InputSystem.ShadowAction.GetState*
  name: GetState
  nameWithType: ShadowAction::GetState
  fullName: ActionState ShadowEngine::InputSystem::ShadowAction<T>::GetState
- uid: ShadowEngine.InputSystem.ShadowAction.SetState*
  name: SetState
  nameWithType: ShadowAction::SetState
  fullName: void ShadowEngine::InputSystem::ShadowAction<T>::SetState
- uid: ShadowEngine.InputSystem.IInputBinding76390d34
  spec.cplusplus:
  - uid: ShadowEngine.InputSystem.IInputBinding
  - name: " &"
    fullName: " &"
- uid: ShadowEngine.InputSystem.ShadowAction.GetBinding*
  name: GetBinding
  nameWithType: ShadowAction::GetBinding
  fullName: IInputBinding& ShadowEngine::InputSystem::ShadowAction<T>::GetBinding
- uid: ShadowEngine.InputSystem.ShadowAction.IsContinuous*
  name: IsContinuous
  nameWithType: ShadowAction::IsContinuous
  fullName: bool ShadowEngine::InputSystem::ShadowAction<T>::IsContinuous
- uid: ShadowEngine.InputSystem.ShadowAction.SetContinuous*
  name: SetContinuous
  nameWithType: ShadowAction::SetContinuous
  fullName: void ShadowEngine::InputSystem::ShadowAction<T>::SetContinuous
- uid: ShadowEngine.InputSystem.ShadowAction.GetPerformed*
  name: GetPerformed
  nameWithType: ShadowAction::GetPerformed
  fullName: bool ShadowEngine::InputSystem::ShadowAction<T>::GetPerformed
- uid: 1639c7a3
  spec.cplusplus:
  - name: const T
    fullName: const T
- uid: ShadowEngine.InputSystem.ShadowAction.GetData*
  name: GetData
  nameWithType: ShadowAction::GetData
  fullName: const T ShadowEngine::InputSystem::ShadowAction<T>::GetData
- uid: ShadowEngine.InputSystem.ShadowAction.Update*
  name: Update
  nameWithType: ShadowAction::Update
  fullName: void ShadowEngine::InputSystem::ShadowAction<T>::Update
- uid: ShadowEngine.InputSystem.ShadowAction.Performed*
  name: Performed
  nameWithType: ShadowAction::Performed
  fullName: void ShadowEngine::InputSystem::ShadowAction<T>::Performed
- uid: ShadowEngine.InputSystem.ShadowAction.Started*
  name: Started
  nameWithType: ShadowAction::Started
  fullName: void ShadowEngine::InputSystem::ShadowAction<T>::Started
- uid: ShadowEngine.InputSystem.ShadowAction.Progress*
  name: Progress
  nameWithType: ShadowAction::Progress
  fullName: void ShadowEngine::InputSystem::ShadowAction<T>::Progress
- uid: ShadowEngine.InputSystem.ShadowAction.Canceled*
  name: Canceled
  nameWithType: ShadowAction::Canceled
  fullName: void ShadowEngine::InputSystem::ShadowAction<T>::Canceled
- uid: ShadowEngine.SHObject.GenerateId()
  parent: ShadowEngine.SHObject
  href: ShadowEngine.SHObject.yml
  name: GenerateId()
  nameWithType: SHObject::GenerateId()
  fullName: static uint64_t ShadowEngine::SHObject::GenerateId()
  type: Method
  summary: "<p>Generates a new UID for each call. </p>"
  syntax:
    content: 'protected: static uint64_t GenerateId() noexcept'
    return:
      type: 6d8267d6
      description: <p>Unique ID </p>
- uid: ShadowEngine.SHObject.GetType()
  parent: ShadowEngine.SHObject
  href: ShadowEngine.SHObject.yml
  name: GetType()
  nameWithType: SHObject::GetType()
  fullName: virtual const std::string& ShadowEngine::SHObject::GetType()
  type: Method
  summary: "<p>Returns the top level class type name of the object. </p>"
  syntax:
    content: 'public: virtual const std::string & GetType() const =0'
    return:
      type: 360fc41e
      description: <p>Class name string </p>
- uid: ShadowEngine.SHObject.GetTypeId()
  parent: ShadowEngine.SHObject
  href: ShadowEngine.SHObject.yml
  name: GetTypeId()
  nameWithType: SHObject::GetTypeId()
  fullName: virtual const uint64_t ShadowEngine::SHObject::GetTypeId()
  type: Method
  summary: "<p>Gets the top level type ID. </p>"
  syntax:
    content: 'public: virtual const uint64_t GetTypeId() const =0'
    return:
      type: 29dc5929
      description: <p>UID of the class </p>
- uid: ShadowEngine.InputSystem.ShadowAction.InputActionInspector
- uid: ShadowEngine.SHObject.~SHObject()
  parent: ShadowEngine.SHObject
  href: ShadowEngine.SHObject.yml
  name: ~SHObject()
  nameWithType: SHObject::~SHObject()
  fullName: virtual ShadowEngine::SHObject::~SHObject()
  type: Constructor
  syntax:
    content: 'public: virtual ~SHObject()=default'
- uid: ShadowEngine.InputSystem.IShadowAction
  parent: ShadowEngine.InputSystem
  href: ShadowEngine.InputSystem.IShadowAction.yml
  name: IShadowAction
  nameWithType: IShadowAction
  fullName: ShadowEngine::InputSystem::IShadowAction
  type: Class
  syntax:
    content: 'public: class IShadowAction : public HObject'
- uid: ShadowEngine.InputSystem.ShadowAction
  parent: ShadowEngine.InputSystem
  href: ShadowEngine.InputSystem.ShadowAction.yml
  name: ShadowAction
  nameWithType: ShadowAction
  fullName: ShadowEngine::InputSystem::ShadowAction
  type: Class
  syntax: *o2
- uid: ShadowEngine.InputSystem.InputBinding
  parent: ShadowEngine.InputSystem
  href: ShadowEngine.InputSystem.InputBinding.yml
  name: InputBinding
  nameWithType: InputBinding
  fullName: ShadowEngine::InputSystem::InputBinding
  type: Class
  syntax:
    content: 'public: class InputBinding : public nputBinding'
    typeParameters:
    - id: class
      type: 4fedf2a2
- uid: Callback
  href: Callback.yml
  name: Callback
  nameWithType: Callback
  fullName: Callback
  type: Class
  syntax:
    content: 'public: class Callback'
- uid: ShadowEngine.InputSystem.IShadowAction.ProcessEvent(EventSystem::ShadowEvent &)
- uid: ShadowEngine.EventSystem.ShadowEvent
  parent: ShadowEngine.EventSystem
  href: ShadowEngine.EventSystem.ShadowEvent.yml
  name: ShadowEvent
  nameWithType: ShadowEvent
  fullName: ShadowEngine::EventSystem::ShadowEvent
  type: Class
  syntax:
    content: 'public: class ShadowEvent'
- uid: ShadowEngine.InputSystem.IShadowAction.AddEventListener(ActionState)
- uid: ShadowEngine.InputSystem.IShadowAction.RemoveEventListener()
- uid: ShadowEngine.InputSystem.IShadowAction.SetActive(bool)
- uid: ShadowEngine.InputSystem.IShadowAction.GetName()
- uid: ShadowEngine.InputSystem.IShadowAction.GetState()
- uid: ShadowEngine.InputSystem.IShadowAction.SetState(ActionState)
- uid: ShadowEngine.InputSystem.IInputBinding
  parent: ShadowEngine.InputSystem
  href: ShadowEngine.InputSystem.IInputBinding.yml
  name: IInputBinding
  nameWithType: IInputBinding
  fullName: ShadowEngine::InputSystem::IInputBinding
  type: Class
  summary: "<p>Interface for the Bindings. </p>"
  syntax:
    content: 'public: class IInputBinding : public HObject'
- uid: ShadowEngine.InputSystem.IShadowAction.GetBinding()
- uid: ShadowEngine.InputSystem.IShadowAction.IsContinuous()
- uid: ShadowEngine.InputSystem.IShadowAction.SetContinuous(bool)
- uid: ShadowEngine.InputSystem.IShadowAction.GetPerformed()
- uid: ShadowEngine.InputSystem.IShadowAction.Update()
