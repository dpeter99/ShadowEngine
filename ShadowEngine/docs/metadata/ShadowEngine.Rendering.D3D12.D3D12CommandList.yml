### YamlMime:ManagedReference
items:
- uid: ShadowEngine.Rendering.D3D12.D3D12CommandList
  id: ShadowEngine.Rendering.D3D12.D3D12CommandList
  parent: ShadowEngine.Rendering.D3D12
  children:
  - ShadowEngine.Rendering.D3D12.D3D12CommandList.BindConstantBuffer(const ConstantBuffer &,int)
  - ShadowEngine.Rendering.D3D12.D3D12CommandList.BindConstantBuffer(const Ref<ConstantBuffer> &,int)
  - ShadowEngine.Rendering.D3D12.D3D12CommandList.ClearDepthStencilView(float,uint8_t)
  - ShadowEngine.Rendering.D3D12.D3D12CommandList.ClearRenderTargetView(const float *)
  - ShadowEngine.Rendering.D3D12.D3D12CommandList.Close()
  - ShadowEngine.Rendering.D3D12.D3D12CommandList.D3D12CommandList()
  - ShadowEngine.Rendering.D3D12.D3D12CommandList.DrawMesh(const std::shared_ptr<Assets::Mesh> &)
  - ShadowEngine.Rendering.D3D12.D3D12CommandList.GetCommandList()
  - ShadowEngine.Rendering.D3D12.D3D12CommandList.Reset()
  - ShadowEngine.Rendering.D3D12.D3D12CommandList.ResourceBarrier(D3D12_RESOURCE_BARRIER *)
  - ShadowEngine.Rendering.D3D12.D3D12CommandList.SetRenderTargets(Ref<D3D12SwapChain>,Ref<D3D12DepthBuffer>)
  - ShadowEngine.Rendering.D3D12.D3D12CommandList.SetScissorRects(D3D12_RECT)
  - ShadowEngine.Rendering.D3D12.D3D12CommandList.SetViewports(D3D12_VIEWPORT)
  - ShadowEngine.Rendering.D3D12.D3D12CommandList.StartRecording()
  - ShadowEngine.Rendering.D3D12.D3D12CommandList.UseShader(const Ref<D3D12Shader> &)
  href: ShadowEngine.Rendering.D3D12.D3D12CommandList.yml
  langs:
  - cplusplus
  name: D3D12CommandList
  nameWithType: D3D12CommandList
  fullName: ShadowEngine::Rendering::D3D12::D3D12CommandList
  type: Class
  source:
    remote: &o0
      path: ShadowEngine/src/Platform/D3D12/D3D12CommandList.h
      branch: d3d12
      repo: https://github.com/dpeter99/ShadowEngine
    path: ShadowEngine/src/Platform/D3D12/D3D12CommandList.h
    startLine: 18
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12CommandList.h
    startLine: 19
  namespace: ShadowEngine.Rendering.D3D12
  summary: "<p>A list of commands Used to record graphics/compute commands and than submit them at once. </p>"
  syntax:
    content: 'public: class D3D12CommandList'
  inheritance:
  - System::Object
- uid: ShadowEngine.Rendering.D3D12.D3D12CommandList.BindConstantBuffer(const ConstantBuffer &,int)
  id: ShadowEngine.Rendering.D3D12.D3D12CommandList.BindConstantBuffer(const ConstantBuffer &,int)
  parent: ShadowEngine.Rendering.D3D12.D3D12CommandList
  href: ShadowEngine.Rendering.D3D12.D3D12CommandList.yml
  langs:
  - cplusplus
  name: BindConstantBuffer(const ConstantBuffer &buffer, int registerIndex)
  nameWithType: D3D12CommandList::BindConstantBuffer(const ConstantBuffer &buffer, int registerIndex)
  fullName: void ShadowEngine::Rendering::D3D12::D3D12CommandList::BindConstantBuffer(const ConstantBuffer &buffer, int registerIndex)
  overload: ShadowEngine.Rendering.D3D12.D3D12CommandList.BindConstantBuffer*
  type: Method
  source:
    remote: &o1
      path: ShadowEngine/src/Platform/D3D12/D3D12CommandList.cpp
      branch: d3d12
      repo: https://github.com/dpeter99/ShadowEngine
    path: ShadowEngine/src/Platform/D3D12/D3D12CommandList.cpp
    startLine: 100
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12CommandList.h
    startLine: 79
  namespace: ShadowEngine.Rendering.D3D12
  syntax:
    content: 'public: void BindConstantBuffer(const ConstantBuffer &buffer, int registerIndex)'
    parameters:
    - id: buffer
      type: 1413e510ShadowEngine.Rendering.ConstantBuffer76390d34
    - id: registerIndex
      type: f75371fa
- uid: ShadowEngine.Rendering.D3D12.D3D12CommandList.BindConstantBuffer(const Ref<ConstantBuffer> &,int)
  id: ShadowEngine.Rendering.D3D12.D3D12CommandList.BindConstantBuffer(const Ref<ConstantBuffer> &,int)
  parent: ShadowEngine.Rendering.D3D12.D3D12CommandList
  href: ShadowEngine.Rendering.D3D12.D3D12CommandList.yml
  langs:
  - cplusplus
  name: BindConstantBuffer(const Ref<ConstantBuffer> &buffer, int materialSlotIndex)
  nameWithType: D3D12CommandList::BindConstantBuffer(const Ref<ConstantBuffer> &buffer, int materialSlotIndex)
  fullName: void ShadowEngine::Rendering::D3D12::D3D12CommandList::BindConstantBuffer(const Ref<ConstantBuffer> &buffer, int materialSlotIndex)
  overload: ShadowEngine.Rendering.D3D12.D3D12CommandList.BindConstantBuffer*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/Platform/D3D12/D3D12CommandList.cpp
    startLine: 94
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12CommandList.h
    startLine: 78
  namespace: ShadowEngine.Rendering.D3D12
  syntax:
    content: 'public: void BindConstantBuffer(const Ref<ConstantBuffer> &buffer, int materialSlotIndex)'
    parameters:
    - id: buffer
      type: 8253bb38ShadowEngine.Rendering.ConstantBuffer1a4c7661
    - id: materialSlotIndex
      type: f75371fa
- uid: ShadowEngine.Rendering.D3D12.D3D12CommandList.ClearDepthStencilView(float,uint8_t)
  id: ShadowEngine.Rendering.D3D12.D3D12CommandList.ClearDepthStencilView(float,uint8_t)
  parent: ShadowEngine.Rendering.D3D12.D3D12CommandList
  href: ShadowEngine.Rendering.D3D12.D3D12CommandList.yml
  langs:
  - cplusplus
  name: ClearDepthStencilView(float depth, uint8_t stencil)
  nameWithType: D3D12CommandList::ClearDepthStencilView(float depth, uint8_t stencil)
  fullName: void ShadowEngine::Rendering::D3D12::D3D12CommandList::ClearDepthStencilView(float depth, uint8_t stencil)
  overload: ShadowEngine.Rendering.D3D12.D3D12CommandList.ClearDepthStencilView*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/Platform/D3D12/D3D12CommandList.cpp
    startLine: 72
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12CommandList.h
    startLine: 74
  namespace: ShadowEngine.Rendering.D3D12
  syntax:
    content: 'public: void ClearDepthStencilView(float depth, uint8_t stencil)'
    parameters:
    - id: depth
      type: 64de6a54
    - id: stencil
      type: f1d649ab
- uid: ShadowEngine.Rendering.D3D12.D3D12CommandList.ClearRenderTargetView(const float *)
  id: ShadowEngine.Rendering.D3D12.D3D12CommandList.ClearRenderTargetView(const float *)
  parent: ShadowEngine.Rendering.D3D12.D3D12CommandList
  href: ShadowEngine.Rendering.D3D12.D3D12CommandList.yml
  langs:
  - cplusplus
  name: ClearRenderTargetView(const float *color)
  nameWithType: D3D12CommandList::ClearRenderTargetView(const float *color)
  fullName: void ShadowEngine::Rendering::D3D12::D3D12CommandList::ClearRenderTargetView(const float *color)
  overload: ShadowEngine.Rendering.D3D12.D3D12CommandList.ClearRenderTargetView*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/Platform/D3D12/D3D12CommandList.cpp
    startLine: 67
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12CommandList.h
    startLine: 72
  namespace: ShadowEngine.Rendering.D3D12
  syntax:
    content: 'public: void ClearRenderTargetView(const float *color)'
    parameters:
    - id: color
      type: 3b4f7565
- uid: ShadowEngine.Rendering.D3D12.D3D12CommandList.Close()
  id: ShadowEngine.Rendering.D3D12.D3D12CommandList.Close()
  parent: ShadowEngine.Rendering.D3D12.D3D12CommandList
  href: ShadowEngine.Rendering.D3D12.D3D12CommandList.yml
  langs:
  - cplusplus
  name: Close()
  nameWithType: D3D12CommandList::Close()
  fullName: void ShadowEngine::Rendering::D3D12::D3D12CommandList::Close()
  overload: ShadowEngine.Rendering.D3D12.D3D12CommandList.Close*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/Platform/D3D12/D3D12CommandList.cpp
    startLine: 77
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12CommandList.h
    startLine: 75
  namespace: ShadowEngine.Rendering.D3D12
  syntax:
    content: 'public: void Close()'
- uid: ShadowEngine.Rendering.D3D12.D3D12CommandList.D3D12CommandList()
  id: ShadowEngine.Rendering.D3D12.D3D12CommandList.D3D12CommandList()
  parent: ShadowEngine.Rendering.D3D12.D3D12CommandList
  href: ShadowEngine.Rendering.D3D12.D3D12CommandList.yml
  langs:
  - cplusplus
  name: D3D12CommandList()
  nameWithType: D3D12CommandList::D3D12CommandList()
  fullName: ShadowEngine::Rendering::D3D12::D3D12CommandList::D3D12CommandList()
  overload: ShadowEngine.Rendering.D3D12.D3D12CommandList.D3D12CommandList*
  type: Constructor
  source:
    remote: *o1
    path: ShadowEngine/src/Platform/D3D12/D3D12CommandList.cpp
    startLine: 8
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12CommandList.h
    startLine: 28
  namespace: ShadowEngine.Rendering.D3D12
  syntax:
    content: 'public: D3D12CommandList()'
- uid: ShadowEngine.Rendering.D3D12.D3D12CommandList.DrawMesh(const std::shared_ptr<Assets::Mesh> &)
  id: Mesh> &)
  parent: ShadowEngine.Rendering.D3D12.D3D12CommandList
  href: ShadowEngine.Rendering.D3D12.D3D12CommandList.yml
  langs:
  - cplusplus
  name: DrawMesh(const std::shared_ptr<Assets::Mesh> &mesh)
  nameWithType: D3D12CommandList::DrawMesh(const std::shared_ptr<Assets::Mesh> &mesh)
  fullName: void ShadowEngine::Rendering::D3D12::D3D12CommandList::DrawMesh(const std::shared_ptr<Assets::Mesh> &mesh)
  overload: ShadowEngine.Rendering.D3D12.D3D12CommandList.DrawMesh*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/Platform/D3D12/D3D12CommandList.cpp
    startLine: 83
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12CommandList.h
    startLine: 76
  namespace: ShadowEngine.Rendering.D3D12
  syntax:
    content: 'public: void DrawMesh(const std::shared_ptr<Assets::Mesh> &mesh)'
    parameters:
    - id: mesh
      type: 322691f1ShadowEngine.Assets.Mesh1a4c7661
- uid: ShadowEngine.Rendering.D3D12.D3D12CommandList.GetCommandList()
  id: ShadowEngine.Rendering.D3D12.D3D12CommandList.GetCommandList()
  parent: ShadowEngine.Rendering.D3D12.D3D12CommandList
  href: ShadowEngine.Rendering.D3D12.D3D12CommandList.yml
  langs:
  - cplusplus
  name: GetCommandList()
  nameWithType: D3D12CommandList::GetCommandList()
  fullName: com_ptr<ID3D12GraphicsCommandList> ShadowEngine::Rendering::D3D12::D3D12CommandList::GetCommandList()
  overload: ShadowEngine.Rendering.D3D12.D3D12CommandList.GetCommandList*
  type: Method
  source:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12CommandList.h
    startLine: 34
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12CommandList.h
    startLine: 34
  namespace: ShadowEngine.Rendering.D3D12
  syntax:
    content: 'public: com_ptr<ID3D12GraphicsCommandList> GetCommandList()'
    return:
      type: 75a18726
      description: <p>The dx12 command list </p>
- uid: ShadowEngine.Rendering.D3D12.D3D12CommandList.Reset()
  id: ShadowEngine.Rendering.D3D12.D3D12CommandList.Reset()
  parent: ShadowEngine.Rendering.D3D12.D3D12CommandList
  href: ShadowEngine.Rendering.D3D12.D3D12CommandList.yml
  langs:
  - cplusplus
  name: Reset()
  nameWithType: D3D12CommandList::Reset()
  fullName: void ShadowEngine::Rendering::D3D12::D3D12CommandList::Reset()
  overload: ShadowEngine.Rendering.D3D12.D3D12CommandList.Reset*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/Platform/D3D12/D3D12CommandList.cpp
    startLine: 27
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12CommandList.h
    startLine: 48
  namespace: ShadowEngine.Rendering.D3D12
  summary: "<p>Resets the Command List Should only be used when we are sure it is not in use. </p>"
  syntax:
    content: 'public: void Reset()'
- uid: ShadowEngine.Rendering.D3D12.D3D12CommandList.ResourceBarrier(D3D12_RESOURCE_BARRIER *)
  id: ShadowEngine.Rendering.D3D12.D3D12CommandList.ResourceBarrier(D3D12_RESOURCE_BARRIER *)
  parent: ShadowEngine.Rendering.D3D12.D3D12CommandList
  href: ShadowEngine.Rendering.D3D12.D3D12CommandList.yml
  langs:
  - cplusplus
  name: ResourceBarrier(D3D12_RESOURCE_BARRIER *barrier)
  nameWithType: D3D12CommandList::ResourceBarrier(D3D12_RESOURCE_BARRIER *barrier)
  fullName: void ShadowEngine::Rendering::D3D12::D3D12CommandList::ResourceBarrier(D3D12_RESOURCE_BARRIER *barrier)
  overload: ShadowEngine.Rendering.D3D12.D3D12CommandList.ResourceBarrier*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/Platform/D3D12/D3D12CommandList.cpp
    startLine: 55
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12CommandList.h
    startLine: 61
  namespace: ShadowEngine.Rendering.D3D12
  summary: "<p>Adds a new resource barrier to the command list. </p>"
  syntax:
    content: 'public: void ResourceBarrier(D3D12_RESOURCE_BARRIER *barrier)'
    parameters:
    - id: barrier
      type: 44d9cf45
      description: <p>The barrier to use Used to wait for a resource transition to happen (eg. rendertarget is available) </p>
- uid: ShadowEngine.Rendering.D3D12.D3D12CommandList.SetRenderTargets(Ref<D3D12SwapChain>,Ref<D3D12DepthBuffer>)
  id: ShadowEngine.Rendering.D3D12.D3D12CommandList.SetRenderTargets(Ref<D3D12SwapChain>,Ref<D3D12DepthBuffer>)
  parent: ShadowEngine.Rendering.D3D12.D3D12CommandList
  href: ShadowEngine.Rendering.D3D12.D3D12CommandList.yml
  langs:
  - cplusplus
  name: SetRenderTargets(Ref<D3D12SwapChain> swapchain, Ref<D3D12DepthBuffer> depthBuffer)
  nameWithType: D3D12CommandList::SetRenderTargets(Ref<D3D12SwapChain> swapchain, Ref<D3D12DepthBuffer> depthBuffer)
  fullName: void ShadowEngine::Rendering::D3D12::D3D12CommandList::SetRenderTargets(Ref<D3D12SwapChain> swapchain, Ref<D3D12DepthBuffer> depthBuffer)
  overload: ShadowEngine.Rendering.D3D12.D3D12CommandList.SetRenderTargets*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/Platform/D3D12/D3D12CommandList.cpp
    startLine: 60
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12CommandList.h
    startLine: 68
  namespace: ShadowEngine.Rendering.D3D12
  summary: "<p>Set the render targets used in this command list. </p>"
  syntax:
    content: 'public: void SetRenderTargets(Ref<D3D12SwapChain> swapchain, Ref<D3D12DepthBuffer> depthBuffer)'
    parameters:
    - id: swapchain
      type: 2e1cc081ShadowEngine.Rendering.D3D12.D3D12SwapChaina08ddfce
      description: <p>The swap chain to get the render target form </p>
    - id: depthBuffer
      type: 2e1cc081ShadowEngine.Rendering.D3D12.D3D12DepthBuffera08ddfce
      description: <p>The depth buffer to use </p>
- uid: ShadowEngine.Rendering.D3D12.D3D12CommandList.SetScissorRects(D3D12_RECT)
  id: ShadowEngine.Rendering.D3D12.D3D12CommandList.SetScissorRects(D3D12_RECT)
  parent: ShadowEngine.Rendering.D3D12.D3D12CommandList
  href: ShadowEngine.Rendering.D3D12.D3D12CommandList.yml
  langs:
  - cplusplus
  name: SetScissorRects(D3D12_RECT scissorRect)
  nameWithType: D3D12CommandList::SetScissorRects(D3D12_RECT scissorRect)
  fullName: void ShadowEngine::Rendering::D3D12::D3D12CommandList::SetScissorRects(D3D12_RECT scissorRect)
  overload: ShadowEngine.Rendering.D3D12.D3D12CommandList.SetScissorRects*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/Platform/D3D12/D3D12CommandList.cpp
    startLine: 50
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12CommandList.h
    startLine: 54
  namespace: ShadowEngine.Rendering.D3D12
  syntax:
    content: 'public: void SetScissorRects(D3D12_RECT scissorRect)'
    parameters:
    - id: scissorRect
      type: 60548d48
- uid: ShadowEngine.Rendering.D3D12.D3D12CommandList.SetViewports(D3D12_VIEWPORT)
  id: ShadowEngine.Rendering.D3D12.D3D12CommandList.SetViewports(D3D12_VIEWPORT)
  parent: ShadowEngine.Rendering.D3D12.D3D12CommandList
  href: ShadowEngine.Rendering.D3D12.D3D12CommandList.yml
  langs:
  - cplusplus
  name: SetViewports(D3D12_VIEWPORT viewPort)
  nameWithType: D3D12CommandList::SetViewports(D3D12_VIEWPORT viewPort)
  fullName: void ShadowEngine::Rendering::D3D12::D3D12CommandList::SetViewports(D3D12_VIEWPORT viewPort)
  overload: ShadowEngine.Rendering.D3D12.D3D12CommandList.SetViewports*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/Platform/D3D12/D3D12CommandList.cpp
    startLine: 45
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12CommandList.h
    startLine: 52
  namespace: ShadowEngine.Rendering.D3D12
  syntax:
    content: 'public: void SetViewports(D3D12_VIEWPORT viewPort)'
    parameters:
    - id: viewPort
      type: 393d65ff
- uid: ShadowEngine.Rendering.D3D12.D3D12CommandList.StartRecording()
  id: ShadowEngine.Rendering.D3D12.D3D12CommandList.StartRecording()
  parent: ShadowEngine.Rendering.D3D12.D3D12CommandList
  href: ShadowEngine.Rendering.D3D12.D3D12CommandList.yml
  langs:
  - cplusplus
  name: StartRecording()
  nameWithType: D3D12CommandList::StartRecording()
  fullName: void ShadowEngine::Rendering::D3D12::D3D12CommandList::StartRecording()
  overload: ShadowEngine.Rendering.D3D12.D3D12CommandList.StartRecording*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/Platform/D3D12/D3D12CommandList.cpp
    startLine: 36
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12CommandList.h
    startLine: 50
  namespace: ShadowEngine.Rendering.D3D12
  syntax:
    content: 'public: void StartRecording()'
- uid: ShadowEngine.Rendering.D3D12.D3D12CommandList.UseShader(const Ref<D3D12Shader> &)
  id: ShadowEngine.Rendering.D3D12.D3D12CommandList.UseShader(const Ref<D3D12Shader> &)
  parent: ShadowEngine.Rendering.D3D12.D3D12CommandList
  href: ShadowEngine.Rendering.D3D12.D3D12CommandList.yml
  langs:
  - cplusplus
  name: UseShader(const Ref<D3D12Shader> &shader)
  nameWithType: D3D12CommandList::UseShader(const Ref<D3D12Shader> &shader)
  fullName: void ShadowEngine::Rendering::D3D12::D3D12CommandList::UseShader(const Ref<D3D12Shader> &shader)
  overload: ShadowEngine.Rendering.D3D12.D3D12CommandList.UseShader*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/Platform/D3D12/D3D12CommandList.cpp
    startLine: 21
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12CommandList.h
    startLine: 42
  namespace: ShadowEngine.Rendering.D3D12
  summary: "<p>Binds a new shader to the command list to use. </p>"
  syntax:
    content: 'public: void UseShader(const Ref<D3D12Shader> &shader)'
    parameters:
    - id: shader
      type: 8253bb38ShadowEngine.Rendering.D3D12.D3D12Shader1a4c7661
      description: <p>The shader to be used </p>
references:
- uid: ShadowEngine.Rendering.D3D12.D3D12CommandList.D3D12CommandList*
  name: D3D12CommandList
  nameWithType: D3D12CommandList::D3D12CommandList
  fullName: ShadowEngine::Rendering::D3D12::D3D12CommandList::D3D12CommandList
- uid: 75a18726
  spec.cplusplus:
  - name: com_ptr<ID3D12GraphicsCommandList>
    fullName: com_ptr<ID3D12GraphicsCommandList>
- uid: ShadowEngine.Rendering.D3D12.D3D12CommandList.GetCommandList*
  name: GetCommandList
  nameWithType: D3D12CommandList::GetCommandList
  fullName: com_ptr<ID3D12GraphicsCommandList> ShadowEngine::Rendering::D3D12::D3D12CommandList::GetCommandList
- uid: 8253bb38ShadowEngine.Rendering.D3D12.D3D12Shader1a4c7661
  spec.cplusplus:
  - name: const Ref<
    fullName: const Ref<
  - uid: ShadowEngine.Rendering.D3D12.D3D12Shader
  - name: '> &'
    fullName: '> &'
- uid: ShadowEngine.Rendering.D3D12.D3D12CommandList.UseShader*
  name: UseShader
  nameWithType: D3D12CommandList::UseShader
  fullName: void ShadowEngine::Rendering::D3D12::D3D12CommandList::UseShader
- uid: ShadowEngine.Rendering.D3D12.D3D12CommandList.Reset*
  name: Reset
  nameWithType: D3D12CommandList::Reset
  fullName: void ShadowEngine::Rendering::D3D12::D3D12CommandList::Reset
- uid: ShadowEngine.Rendering.D3D12.D3D12CommandList.StartRecording*
  name: StartRecording
  nameWithType: D3D12CommandList::StartRecording
  fullName: void ShadowEngine::Rendering::D3D12::D3D12CommandList::StartRecording
- uid: 393d65ff
  spec.cplusplus:
  - name: D3D12_VIEWPORT
    fullName: D3D12_VIEWPORT
- uid: ShadowEngine.Rendering.D3D12.D3D12CommandList.SetViewports*
  name: SetViewports
  nameWithType: D3D12CommandList::SetViewports
  fullName: void ShadowEngine::Rendering::D3D12::D3D12CommandList::SetViewports
- uid: 60548d48
  spec.cplusplus:
  - name: D3D12_RECT
    fullName: D3D12_RECT
- uid: ShadowEngine.Rendering.D3D12.D3D12CommandList.SetScissorRects*
  name: SetScissorRects
  nameWithType: D3D12CommandList::SetScissorRects
  fullName: void ShadowEngine::Rendering::D3D12::D3D12CommandList::SetScissorRects
- uid: 44d9cf45
  spec.cplusplus:
  - name: D3D12_RESOURCE_BARRIER *
    fullName: D3D12_RESOURCE_BARRIER *
- uid: ShadowEngine.Rendering.D3D12.D3D12CommandList.ResourceBarrier*
  name: ResourceBarrier
  nameWithType: D3D12CommandList::ResourceBarrier
  fullName: void ShadowEngine::Rendering::D3D12::D3D12CommandList::ResourceBarrier
- uid: 2e1cc081ShadowEngine.Rendering.D3D12.D3D12SwapChaina08ddfce
  spec.cplusplus:
  - name: Ref<
    fullName: Ref<
  - uid: ShadowEngine.Rendering.D3D12.D3D12SwapChain
  - name: '>'
    fullName: '>'
- uid: 2e1cc081ShadowEngine.Rendering.D3D12.D3D12DepthBuffera08ddfce
  spec.cplusplus:
  - name: Ref<
    fullName: Ref<
  - uid: ShadowEngine.Rendering.D3D12.D3D12DepthBuffer
  - name: '>'
    fullName: '>'
- uid: ShadowEngine.Rendering.D3D12.D3D12CommandList.SetRenderTargets*
  name: SetRenderTargets
  nameWithType: D3D12CommandList::SetRenderTargets
  fullName: void ShadowEngine::Rendering::D3D12::D3D12CommandList::SetRenderTargets
- uid: 3b4f7565
  spec.cplusplus:
  - name: const float *
    fullName: const float *
- uid: ShadowEngine.Rendering.D3D12.D3D12CommandList.ClearRenderTargetView*
  name: ClearRenderTargetView
  nameWithType: D3D12CommandList::ClearRenderTargetView
  fullName: void ShadowEngine::Rendering::D3D12::D3D12CommandList::ClearRenderTargetView
- uid: 64de6a54
  spec.cplusplus:
  - name: float
    fullName: float
- uid: f1d649ab
  spec.cplusplus:
  - name: uint8_t
    fullName: uint8_t
- uid: ShadowEngine.Rendering.D3D12.D3D12CommandList.ClearDepthStencilView*
  name: ClearDepthStencilView
  nameWithType: D3D12CommandList::ClearDepthStencilView
  fullName: void ShadowEngine::Rendering::D3D12::D3D12CommandList::ClearDepthStencilView
- uid: ShadowEngine.Rendering.D3D12.D3D12CommandList.Close*
  name: Close
  nameWithType: D3D12CommandList::Close
  fullName: void ShadowEngine::Rendering::D3D12::D3D12CommandList::Close
- uid: 322691f1ShadowEngine.Assets.Mesh1a4c7661
  spec.cplusplus:
  - name: const std::shared_ptr<
    fullName: const std::shared_ptr<
  - uid: ShadowEngine.Assets.Mesh
  - name: '> &'
    fullName: '> &'
- uid: ShadowEngine.Rendering.D3D12.D3D12CommandList.DrawMesh*
  name: DrawMesh
  nameWithType: D3D12CommandList::DrawMesh
  fullName: void ShadowEngine::Rendering::D3D12::D3D12CommandList::DrawMesh
- uid: 8253bb38ShadowEngine.Rendering.ConstantBuffer1a4c7661
  spec.cplusplus:
  - name: const Ref<
    fullName: const Ref<
  - uid: ShadowEngine.Rendering.ConstantBuffer
  - name: '> &'
    fullName: '> &'
- uid: f75371fa
  spec.cplusplus:
  - name: int
    fullName: int
- uid: ShadowEngine.Rendering.D3D12.D3D12CommandList.BindConstantBuffer*
  name: BindConstantBuffer
  nameWithType: D3D12CommandList::BindConstantBuffer
  fullName: void ShadowEngine::Rendering::D3D12::D3D12CommandList::BindConstantBuffer
- uid: 1413e510ShadowEngine.Rendering.ConstantBuffer76390d34
  spec.cplusplus:
  - name: 'const '
    fullName: 'const '
  - uid: ShadowEngine.Rendering.ConstantBuffer
  - name: " &"
    fullName: " &"
- uid: _d3_d12_command_list_8h
- uid: ShadowEngine.Rendering.D3D12.D3D12Shader
  parent: ShadowEngine.Rendering.D3D12
  href: ShadowEngine.Rendering.D3D12.D3D12Shader.yml
  name: D3D12Shader
  nameWithType: D3D12Shader
  fullName: ShadowEngine::Rendering::D3D12::D3D12Shader
  type: Class
  summary: "<p>Represents the shader byte code that can be used to draw. </p><p>D3D12Shader is the type ShadowEngine uses to represent byte code that has been compiled form HLSL to be used in the Dx12 renderer. Users should not handle D3D12Shader's by itself, but the ShadowEngine::Rendering::Shader class and it's Create function to make sure the shader class is made for the right render API. Sample Usage:</p>\r\n<p>var shader = ShadowEngine::Rendering::Shader::CreateFromCompiled(\"Shaders/Default-VS.cso\", \"Shaders/Default-FS.cso\"); </p>"
  syntax:
    content: 'public: class D3D12Shader'
- uid: ShadowEngine.Rendering.D3D12.D3D12SwapChain
  parent: ShadowEngine.Rendering.D3D12
  href: ShadowEngine.Rendering.D3D12.D3D12SwapChain.yml
  name: D3D12SwapChain
  nameWithType: D3D12SwapChain
  fullName: ShadowEngine::Rendering::D3D12::D3D12SwapChain
  type: Class
  summary: "<p>Dx12 Swap Chain Used for swapping the render and present render targets. </p>"
  syntax:
    content: 'public: class D3D12SwapChain'
- uid: ShadowEngine.Rendering.D3D12.D3D12DepthBuffer
  parent: ShadowEngine.Rendering.D3D12
  href: ShadowEngine.Rendering.D3D12.D3D12DepthBuffer.yml
  name: D3D12DepthBuffer
  nameWithType: D3D12DepthBuffer
  fullName: ShadowEngine::Rendering::D3D12::D3D12DepthBuffer
  type: Class
  syntax:
    content: 'public: class D3D12DepthBuffer'
- uid: ShadowEngine.Assets.Mesh
  parent: ShadowEngine.Assets
  href: ShadowEngine.Assets.Mesh.yml
  name: Mesh
  nameWithType: Mesh
  fullName: ShadowEngine::Assets::Mesh
  type: Class
  syntax:
    content: 'public: class Mesh'
- uid: ShadowEngine.Rendering.ConstantBuffer
  parent: ShadowEngine.Rendering
  href: ShadowEngine.Rendering.ConstantBuffer.yml
  name: ConstantBuffer
  nameWithType: ConstantBuffer
  fullName: ShadowEngine::Rendering::ConstantBuffer
  type: Class
  syntax:
    content: 'public: class ConstantBuffer'
