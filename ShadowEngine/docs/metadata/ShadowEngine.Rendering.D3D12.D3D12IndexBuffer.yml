### YamlMime:ManagedReference
items:
- uid: ShadowEngine.Rendering.D3D12.D3D12IndexBuffer
  id: ShadowEngine.Rendering.D3D12.D3D12IndexBuffer
  parent: ShadowEngine.Rendering.D3D12
  children:
  - ShadowEngine.Rendering.D3D12.D3D12IndexBuffer.~D3D12IndexBuffer()
  - ShadowEngine.Rendering.D3D12.D3D12IndexBuffer.D3D12IndexBuffer(void *,uint32_t)
  - ShadowEngine.Rendering.D3D12.D3D12IndexBuffer.GetBufferView()
  - ShadowEngine.Rendering.D3D12.D3D12IndexBuffer.GetCount()
  href: ShadowEngine.Rendering.D3D12.D3D12IndexBuffer.yml
  langs:
  - cplusplus
  name: D3D12IndexBuffer
  nameWithType: D3D12IndexBuffer
  fullName: ShadowEngine::Rendering::D3D12::D3D12IndexBuffer
  type: Class
  source:
    remote: &o0
      path: ShadowEngine/src/Platform/D3D12/D3D12Buffers.h
      branch: d3d12
      repo: https://github.com/dpeter99/ShadowEngine
    path: ShadowEngine/src/Platform/D3D12/D3D12Buffers.h
    startLine: 37
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12Buffers.h
    startLine: 38
  namespace: ShadowEngine.Rendering.D3D12
  summary: "<p>Index Buffer holding an index array in a Dx12 way This hold the index buffer and the buffer view for it as well. </p>"
  syntax:
    content: 'public: class D3D12IndexBuffer : public dexBuffer'
  inheritance:
  - System::Object
  - ShadowEngine.Rendering.IndexBuffer
  inheritedMembers:
  - ShadowEngine.Rendering.IndexBuffer.Create(uint32_t *,uint32_t)
  - ShadowEngine.Rendering.IndexBuffer.~IndexBuffer()
- uid: ShadowEngine.Rendering.D3D12.D3D12IndexBuffer.~D3D12IndexBuffer()
  id: ShadowEngine.Rendering.D3D12.D3D12IndexBuffer.~D3D12IndexBuffer()
  parent: ShadowEngine.Rendering.D3D12.D3D12IndexBuffer
  href: ShadowEngine.Rendering.D3D12.D3D12IndexBuffer.yml
  langs:
  - cplusplus
  name: ~D3D12IndexBuffer()
  nameWithType: D3D12IndexBuffer::~D3D12IndexBuffer()
  fullName: ShadowEngine::Rendering::D3D12::D3D12IndexBuffer::~D3D12IndexBuffer()
  overload: ShadowEngine.Rendering.D3D12.D3D12IndexBuffer.~D3D12IndexBuffer*
  type: Constructor
  source:
    remote: &o1
      path: ShadowEngine/src/Platform/D3D12/D3D12Buffers.cpp
      branch: d3d12
      repo: https://github.com/dpeter99/ShadowEngine
    path: ShadowEngine/src/Platform/D3D12/D3D12Buffers.cpp
    startLine: 95
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12Buffers.h
    startLine: 41
  namespace: ShadowEngine.Rendering.D3D12
  syntax:
    content: 'public: virtual ~D3D12IndexBuffer()'
- uid: ShadowEngine.Rendering.D3D12.D3D12IndexBuffer.D3D12IndexBuffer(void *,uint32_t)
  id: ShadowEngine.Rendering.D3D12.D3D12IndexBuffer.D3D12IndexBuffer(void *,uint32_t)
  parent: ShadowEngine.Rendering.D3D12.D3D12IndexBuffer
  href: ShadowEngine.Rendering.D3D12.D3D12IndexBuffer.yml
  langs:
  - cplusplus
  name: D3D12IndexBuffer(void *vertices, uint32_t size)
  nameWithType: D3D12IndexBuffer::D3D12IndexBuffer(void *vertices, uint32_t size)
  fullName: ShadowEngine::Rendering::D3D12::D3D12IndexBuffer::D3D12IndexBuffer(void *vertices, uint32_t size)
  overload: ShadowEngine.Rendering.D3D12.D3D12IndexBuffer.D3D12IndexBuffer*
  type: Constructor
  source:
    remote: *o1
    path: ShadowEngine/src/Platform/D3D12/D3D12Buffers.cpp
    startLine: 58
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12Buffers.h
    startLine: 40
  namespace: ShadowEngine.Rendering.D3D12
  summary: "<p>Constructor for Dx12 Index Buffer. </p>"
  syntax:
    content: 'public: D3D12IndexBuffer(void *vertices, uint32_t size)'
    parameters:
    - id: vertices
      type: 7ca192cd
    - id: size
      type: efd6fb5d
      description: <p>the size of the data (total length in bites) </p>
- uid: ShadowEngine.Rendering.D3D12.D3D12IndexBuffer.GetBufferView()
  id: ShadowEngine.Rendering.D3D12.D3D12IndexBuffer.GetBufferView()
  parent: ShadowEngine.Rendering.D3D12.D3D12IndexBuffer
  href: ShadowEngine.Rendering.D3D12.D3D12IndexBuffer.yml
  langs:
  - cplusplus
  name: GetBufferView()
  nameWithType: D3D12IndexBuffer::GetBufferView()
  fullName: const D3D12_INDEX_BUFFER_VIEW& ShadowEngine::Rendering::D3D12::D3D12IndexBuffer::GetBufferView()
  overload: ShadowEngine.Rendering.D3D12.D3D12IndexBuffer.GetBufferView*
  type: Method
  source:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12Buffers.h
    startLine: 54
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12Buffers.h
    startLine: 54
  namespace: ShadowEngine.Rendering.D3D12
  summary: "<p>Returns the Buffer View. </p><p>Returns the buffer view to this index buffer. It returns a D3D12_INDEX_BUFFER_VIEW struct witch is the Dx12 type for Index buffer views</p>\r\n<p></p>"
  syntax:
    content: 'public: const D3D12_INDEX_BUFFER_VIEW & GetBufferView() const'
    return:
      type: 0c2cf320
      description: <p>Buffer view returned </p>
- uid: ShadowEngine.Rendering.D3D12.D3D12IndexBuffer.GetCount()
  id: ShadowEngine.Rendering.D3D12.D3D12IndexBuffer.GetCount()
  parent: ShadowEngine.Rendering.D3D12.D3D12IndexBuffer
  href: ShadowEngine.Rendering.D3D12.D3D12IndexBuffer.yml
  langs:
  - cplusplus
  name: GetCount()
  nameWithType: D3D12IndexBuffer::GetCount()
  fullName: virtual uint32_t ShadowEngine::Rendering::D3D12::D3D12IndexBuffer::GetCount()
  overload: ShadowEngine.Rendering.D3D12.D3D12IndexBuffer.GetCount*
  type: Method
  source:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12Buffers.h
    startLine: 45
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12Buffers.h
    startLine: 45
  namespace: ShadowEngine.Rendering.D3D12
  syntax:
    content: 'public: virtual uint32_t GetCount() const'
    return:
      type: efd6fb5d
  overridden: ShadowEngine.Rendering.IndexBuffer.GetCount()
references:
- uid: 7ca192cd
  spec.cplusplus:
  - name: void *
    fullName: void *
- uid: efd6fb5d
  spec.cplusplus:
  - name: uint32_t
    fullName: uint32_t
- uid: ShadowEngine.Rendering.D3D12.D3D12IndexBuffer.D3D12IndexBuffer*
  name: D3D12IndexBuffer
  nameWithType: D3D12IndexBuffer::D3D12IndexBuffer
  fullName: ShadowEngine::Rendering::D3D12::D3D12IndexBuffer::D3D12IndexBuffer
- uid: ShadowEngine.Rendering.D3D12.D3D12IndexBuffer.~D3D12IndexBuffer*
  name: ~D3D12IndexBuffer
  nameWithType: D3D12IndexBuffer::~D3D12IndexBuffer
  fullName: ShadowEngine::Rendering::D3D12::D3D12IndexBuffer::~D3D12IndexBuffer
- uid: ShadowEngine.Rendering.D3D12.D3D12IndexBuffer.GetCount*
  name: GetCount
  nameWithType: D3D12IndexBuffer::GetCount
  fullName: virtual uint32_t ShadowEngine::Rendering::D3D12::D3D12IndexBuffer::GetCount
- uid: 0c2cf320
  spec.cplusplus:
  - name: const D3D12_INDEX_BUFFER_VIEW &
    fullName: const D3D12_INDEX_BUFFER_VIEW &
- uid: ShadowEngine.Rendering.D3D12.D3D12IndexBuffer.GetBufferView*
  name: GetBufferView
  nameWithType: D3D12IndexBuffer::GetBufferView
  fullName: const D3D12_INDEX_BUFFER_VIEW& ShadowEngine::Rendering::D3D12::D3D12IndexBuffer::GetBufferView
- uid: ShadowEngine.Rendering.IndexBuffer.Create(uint32_t *,uint32_t)
  parent: ShadowEngine.Rendering.IndexBuffer
  href: ShadowEngine.Rendering.IndexBuffer.yml
  name: Create(uint32_t *indices, uint32_t size)
  nameWithType: IndexBuffer::Create(uint32_t *indices, uint32_t size)
  fullName: IndexBuffer * ShadowEngine::Rendering::IndexBuffer::Create(uint32_t *indices, uint32_t size)
  type: Method
  syntax:
    content: 'public: static IndexBuffer * Create(uint32_t *indices, uint32_t size)'
    parameters:
    - id: indices
      type: ce022359
    - id: size
      type: efd6fb5d
    return:
      type: ShadowEngine.Rendering.IndexBuffer68bc11b4
- uid: ShadowEngine.Rendering.IndexBuffer.~IndexBuffer()
  parent: ShadowEngine.Rendering.IndexBuffer
  href: ShadowEngine.Rendering.IndexBuffer.yml
  name: ~IndexBuffer()
  nameWithType: IndexBuffer::~IndexBuffer()
  fullName: virtual ShadowEngine::Rendering::IndexBuffer::~IndexBuffer()
  type: Constructor
  syntax:
    content: 'public: virtual ~IndexBuffer()=default'
- uid: ShadowEngine.Rendering.IndexBuffer
  parent: ShadowEngine.Rendering
  href: ShadowEngine.Rendering.IndexBuffer.yml
  name: IndexBuffer
  nameWithType: IndexBuffer
  fullName: ShadowEngine::Rendering::IndexBuffer
  type: Class
  syntax:
    content: 'public: class IndexBuffer'
- uid: _d3_d12_buffers_8h
- uid: ShadowEngine.Rendering.IndexBuffer.GetCount()
  parent: ShadowEngine.Rendering.IndexBuffer
  href: ShadowEngine.Rendering.IndexBuffer.yml
  name: GetCount()
  nameWithType: IndexBuffer::GetCount()
  fullName: virtual uint32_t ShadowEngine::Rendering::IndexBuffer::GetCount()
  type: Method
  syntax:
    content: 'public: virtual uint32_t GetCount() const =0'
    return:
      type: efd6fb5d
