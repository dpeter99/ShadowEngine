### YamlMime:ManagedReference
items:
- uid: ShadowEngine.Rendering.D3D12.D3D12RendererAPI
  id: ShadowEngine.Rendering.D3D12.D3D12RendererAPI
  parent: ShadowEngine.Rendering.D3D12
  children:
  - ShadowEngine.Rendering.D3D12.D3D12RendererAPI.aspectRatio
  - ShadowEngine.Rendering.D3D12.D3D12RendererAPI.Clear()
  - ShadowEngine.Rendering.D3D12.D3D12RendererAPI.command_list
  - ShadowEngine.Rendering.D3D12.D3D12RendererAPI.command_queue
  - ShadowEngine.Rendering.D3D12.D3D12RendererAPI.ctx
  - ShadowEngine.Rendering.D3D12.D3D12RendererAPI.depth_buffer
  - ShadowEngine.Rendering.D3D12.D3D12RendererAPI.device
  - ShadowEngine.Rendering.D3D12.D3D12RendererAPI.Draw(const Ref<Assets::Mesh>,const Ref<Assets::Material>,const glm::mat4 &)
  - ShadowEngine.Rendering.D3D12.D3D12RendererAPI.Draw(const std::shared_ptr<Assets::Mesh> &,const std::shared_ptr<Assets::Material> &,const ConstantBuffer &)
  - ShadowEngine.Rendering.D3D12.D3D12RendererAPI.EndFrame()
  - ShadowEngine.Rendering.D3D12.D3D12RendererAPI.fence
  - ShadowEngine.Rendering.D3D12.D3D12RendererAPI.fenceEvent
  - ShadowEngine.Rendering.D3D12.D3D12RendererAPI.fenceValue
  - ShadowEngine.Rendering.D3D12.D3D12RendererAPI.Init(ShadowEngine::Ref<GraphicsContext>)
  - ShadowEngine.Rendering.D3D12.D3D12RendererAPI.scissorRect
  - ShadowEngine.Rendering.D3D12.D3D12RendererAPI.SetClearColor(const glm::vec4 &)
  - ShadowEngine.Rendering.D3D12.D3D12RendererAPI.StartFrame(Ref<ConstantBuffer>)
  - ShadowEngine.Rendering.D3D12.D3D12RendererAPI.swap_chain
  - ShadowEngine.Rendering.D3D12.D3D12RendererAPI.viewPort
  - ShadowEngine.Rendering.D3D12.D3D12RendererAPI.WaitForPreviousFrame()
  - ShadowEngine.Rendering.D3D12.D3D12RendererAPI.worldData
  href: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.yml
  langs:
  - cplusplus
  name: D3D12RendererAPI
  nameWithType: D3D12RendererAPI
  fullName: ShadowEngine::Rendering::D3D12::D3D12RendererAPI
  type: Class
  source:
    remote: &o0
      path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.h
      branch: d3d12
      repo: https://github.com/dpeter99/ShadowEngine
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.h
    startLine: 16
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.h
    startLine: 17
  namespace: ShadowEngine.Rendering.D3D12
  syntax:
    content: 'public: class D3D12RendererAPI : public ndererAPI'
  inheritance:
  - System::Object
  - ShadowEngine.Rendering.RendererAPI
  inheritedMembers:
  - ShadowEngine.Rendering.RendererAPI.API
  - ShadowEngine.Rendering.RendererAPI.GetAPI()
  - ShadowEngine.Rendering.RendererAPI.RendererAPI::MakeRendererAPI()
- uid: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.aspectRatio
  id: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.aspectRatio
  parent: ShadowEngine.Rendering.D3D12.D3D12RendererAPI
  href: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.yml
  langs:
  - cplusplus
  name: aspectRatio
  nameWithType: D3D12RendererAPI::aspectRatio
  fullName: float ShadowEngine::Rendering::D3D12::D3D12RendererAPI::aspectRatio
  type: Field
  source:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.h
    startLine: 56
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.h
    startLine: 56
  namespace: ShadowEngine.Rendering.D3D12
  syntax:
    content: 'public: float aspectRatio'
    return:
      type: 64de6a54
- uid: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.Clear()
  id: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.Clear()
  parent: ShadowEngine.Rendering.D3D12.D3D12RendererAPI
  href: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.yml
  langs:
  - cplusplus
  name: Clear()
  nameWithType: D3D12RendererAPI::Clear()
  fullName: void ShadowEngine::Rendering::D3D12::D3D12RendererAPI::Clear()
  overload: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.Clear*
  type: Method
  source:
    remote: &o1
      path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.cpp
      branch: d3d12
      repo: https://github.com/dpeter99/ShadowEngine
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.cpp
    startLine: 107
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.h
    startLine: 70
  namespace: ShadowEngine.Rendering.D3D12
  syntax:
    content: 'public: virtual void Clear() override'
  overridden: ShadowEngine.Rendering.RendererAPI.Clear()
- uid: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.command_list
  id: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.command_list
  parent: ShadowEngine.Rendering.D3D12.D3D12RendererAPI
  href: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.yml
  langs:
  - cplusplus
  name: command_list
  nameWithType: D3D12RendererAPI::command_list
  fullName: Ref<D3D12::D3D12CommandList> ShadowEngine::Rendering::D3D12::D3D12RendererAPI::command_list
  type: Field
  source:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.h
    startLine: 40
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.h
    startLine: 40
  namespace: ShadowEngine.Rendering.D3D12
  summary: "<p>The command list used for recording render commands. </p>"
  syntax:
    content: 'public: Ref<D3D12::D3D12CommandList> command_list'
    return:
      type: 2e1cc081ShadowEngine.Rendering.D3D12.D3D12CommandLista08ddfce
- uid: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.command_queue
  id: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.command_queue
  parent: ShadowEngine.Rendering.D3D12.D3D12RendererAPI
  href: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.yml
  langs:
  - cplusplus
  name: command_queue
  nameWithType: D3D12RendererAPI::command_queue
  fullName: Ref<D3D12::D3D12CommandQueue> ShadowEngine::Rendering::D3D12::D3D12RendererAPI::command_queue
  type: Field
  source:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.h
    startLine: 34
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.h
    startLine: 34
  namespace: ShadowEngine.Rendering.D3D12
  summary: "<p>The Graphics command queue. </p>"
  syntax:
    content: 'public: Ref<D3D12::D3D12CommandQueue> command_queue'
    return:
      type: 2e1cc081ShadowEngine.Rendering.D3D12.D3D12CommandQueuea08ddfce
- uid: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.ctx
  id: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.ctx
  parent: ShadowEngine.Rendering.D3D12.D3D12RendererAPI
  href: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.yml
  langs:
  - cplusplus
  name: ctx
  nameWithType: D3D12RendererAPI::ctx
  fullName: Ref<D3D12::D3D12Context> ShadowEngine::Rendering::D3D12::D3D12RendererAPI::ctx
  type: Field
  source:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.h
    startLine: 26
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.h
    startLine: 26
  namespace: ShadowEngine.Rendering.D3D12
  summary: "<p>Context for renderering. </p>"
  syntax:
    content: 'public: static ShadowEngine::Ref<D3D12::D3D12Context> ctx{nullptr}'
    return:
      type: dce8684bShadowEngine.Rendering.D3D12.D3D12Contexta08ddfce
- uid: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.depth_buffer
  id: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.depth_buffer
  parent: ShadowEngine.Rendering.D3D12.D3D12RendererAPI
  href: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.yml
  langs:
  - cplusplus
  name: depth_buffer
  nameWithType: D3D12RendererAPI::depth_buffer
  fullName: Ref<D3D12::D3D12DepthBuffer> ShadowEngine::Rendering::D3D12::D3D12RendererAPI::depth_buffer
  type: Field
  source:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.h
    startLine: 51
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.h
    startLine: 51
  namespace: ShadowEngine.Rendering.D3D12
  summary: "<p>The depth buffer used. </p>"
  syntax:
    content: 'public: Ref<D3D12::D3D12DepthBuffer> depth_buffer'
    return:
      type: 2e1cc081ShadowEngine.Rendering.D3D12.D3D12DepthBuffera08ddfce
- uid: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.device
  id: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.device
  parent: ShadowEngine.Rendering.D3D12.D3D12RendererAPI
  href: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.yml
  langs:
  - cplusplus
  name: device
  nameWithType: D3D12RendererAPI::device
  fullName: com_ptr<ID3D12Device> ShadowEngine::Rendering::D3D12::D3D12RendererAPI::device
  type: Field
  source:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.h
    startLine: 22
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.h
    startLine: 22
  namespace: ShadowEngine.Rendering.D3D12
  summary: "<p>The dx12 device being used. </p>"
  syntax:
    content: 'public: static com_ptr<ID3D12Device> device{ nullptr }'
    return:
      type: 991b97f2
- uid: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.Draw(const Ref<Assets::Mesh>,const Ref<Assets::Material>,const glm::mat4 &)
  id: mat4 &)
  parent: ShadowEngine.Rendering.D3D12.D3D12RendererAPI
  href: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.yml
  langs:
  - cplusplus
  name: Draw(const Ref<Assets::Mesh> mesh, const Ref<Assets::Material> shader, const glm::mat4 &transform=glm::mat4(1.0f))
  nameWithType: D3D12RendererAPI::Draw(const Ref<Assets::Mesh> mesh, const Ref<Assets::Material> shader, const glm::mat4 &transform=glm::mat4(1.0f))
  fullName: void ShadowEngine::Rendering::D3D12::D3D12RendererAPI::Draw(const Ref<Assets::Mesh> mesh, const Ref<Assets::Material> shader, const glm::mat4 &transform=glm::mat4(1.0f))
  overload: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.Draw*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.cpp
    startLine: 112
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.h
    startLine: 72
  namespace: ShadowEngine.Rendering.D3D12
  syntax:
    content: 'public: virtual void Draw(const Ref<Assets::Mesh> mesh, const Ref<Assets::Material> shader, const glm::mat4 &transform=glm::mat4(1.0f)) override'
    parameters:
    - id: mesh
      type: 8253bb38ShadowEngine.Assets.Mesha08ddfce
    - id: shader
      type: ed5b8545
    - id: transform
      type: 617f6632
  overridden: ShadowEngine.Rendering.RendererAPI.Draw(const Ref<Assets::Mesh>,const Ref<Assets::Material>,const glm::mat4 &)
- uid: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.Draw(const std::shared_ptr<Assets::Mesh> &,const std::shared_ptr<Assets::Material> &,const ConstantBuffer &)
  id: Material> &,const ConstantBuffer &)
  parent: ShadowEngine.Rendering.D3D12.D3D12RendererAPI
  href: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.yml
  langs:
  - cplusplus
  name: Draw(const std::shared_ptr<Assets::Mesh> &mesh, const std::shared_ptr<Assets::Material> &shader, const ConstantBuffer &materialData)
  nameWithType: D3D12RendererAPI::Draw(const std::shared_ptr<Assets::Mesh> &mesh, const std::shared_ptr<Assets::Material> &shader, const ConstantBuffer &materialData)
  fullName: void ShadowEngine::Rendering::D3D12::D3D12RendererAPI::Draw(const std::shared_ptr<Assets::Mesh> &mesh, const std::shared_ptr<Assets::Material> &shader, const ConstantBuffer &materialData)
  overload: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.Draw*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.cpp
    startLine: 120
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.h
    startLine: 74
  namespace: ShadowEngine.Rendering.D3D12
  syntax:
    content: 'public: virtual void Draw(const std::shared_ptr<Assets::Mesh> &mesh, const std::shared_ptr<Assets::Material> &shader, const ConstantBuffer &materialData) override'
    parameters:
    - id: mesh
      type: 322691f1ShadowEngine.Assets.Mesh1a4c7661
    - id: shader
      type: 8b5f0ee3
    - id: materialData
      type: 1413e510ShadowEngine.Rendering.ConstantBuffer76390d34
  overridden: ShadowEngine.Rendering.RendererAPI.Draw(const std::shared_ptr<Assets::Mesh> &,const std::shared_ptr<Assets::Material> &,const ConstantBuffer &)
- uid: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.EndFrame()
  id: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.EndFrame()
  parent: ShadowEngine.Rendering.D3D12.D3D12RendererAPI
  href: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.yml
  langs:
  - cplusplus
  name: EndFrame()
  nameWithType: D3D12RendererAPI::EndFrame()
  fullName: void ShadowEngine::Rendering::D3D12::D3D12RendererAPI::EndFrame()
  overload: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.EndFrame*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.cpp
    startLine: 153
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.h
    startLine: 77
  namespace: ShadowEngine.Rendering.D3D12
  summary: "<p>Finalizes the render command recording. </p>"
  syntax:
    content: 'public: virtual void EndFrame() override'
  overridden: ShadowEngine.Rendering.RendererAPI.EndFrame()
- uid: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.fence
  id: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.fence
  parent: ShadowEngine.Rendering.D3D12.D3D12RendererAPI
  href: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.yml
  langs:
  - cplusplus
  name: fence
  nameWithType: D3D12RendererAPI::fence
  fullName: Ref<D3D12::D3D12Fence> ShadowEngine::Rendering::D3D12::D3D12RendererAPI::fence
  type: Field
  source:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.h
    startLine: 60
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.h
    startLine: 60
  namespace: ShadowEngine.Rendering.D3D12
  syntax:
    content: 'public: Ref<D3D12::D3D12Fence> fence'
    return:
      type: 2e1cc081ShadowEngine.Rendering.D3D12.D3D12Fencea08ddfce
- uid: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.fenceEvent
  id: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.fenceEvent
  parent: ShadowEngine.Rendering.D3D12.D3D12RendererAPI
  href: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.yml
  langs:
  - cplusplus
  name: fenceEvent
  nameWithType: D3D12RendererAPI::fenceEvent
  fullName: HANDLE ShadowEngine::Rendering::D3D12::D3D12RendererAPI::fenceEvent
  type: Field
  source:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.h
    startLine: 61
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.h
    startLine: 61
  namespace: ShadowEngine.Rendering.D3D12
  syntax:
    content: 'public: HANDLE fenceEvent'
    return:
      type: b14c9cd0
- uid: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.fenceValue
  id: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.fenceValue
  parent: ShadowEngine.Rendering.D3D12.D3D12RendererAPI
  href: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.yml
  langs:
  - cplusplus
  name: fenceValue
  nameWithType: D3D12RendererAPI::fenceValue
  fullName: unsigned long long ShadowEngine::Rendering::D3D12::D3D12RendererAPI::fenceValue
  type: Field
  source:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.h
    startLine: 62
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.h
    startLine: 62
  namespace: ShadowEngine.Rendering.D3D12
  syntax:
    content: 'public: unsigned long long fenceValue'
    return:
      type: 388be2e0
- uid: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.Init(ShadowEngine::Ref<GraphicsContext>)
  id: Ref<GraphicsContext>)
  parent: ShadowEngine.Rendering.D3D12.D3D12RendererAPI
  href: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.yml
  langs:
  - cplusplus
  name: Init(ShadowEngine::Ref<GraphicsContext> ctx)
  nameWithType: D3D12RendererAPI::Init(ShadowEngine::Ref<GraphicsContext> ctx)
  fullName: void ShadowEngine::Rendering::D3D12::D3D12RendererAPI::Init(ShadowEngine::Ref<GraphicsContext> ctx)
  overload: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.Init*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.cpp
    startLine: 49
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.h
    startLine: 67
  namespace: ShadowEngine.Rendering.D3D12
  syntax:
    content: 'public: virtual void Init(ShadowEngine::Ref<GraphicsContext> ctx) override'
    parameters:
    - id: ctx
      type: dce8684bShadowEngine.Rendering.GraphicsContexta08ddfce
  overridden: ShadowEngine.Rendering.RendererAPI.Init(ShadowEngine::Ref<GraphicsContext>)
- uid: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.scissorRect
  id: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.scissorRect
  parent: ShadowEngine.Rendering.D3D12.D3D12RendererAPI
  href: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.yml
  langs:
  - cplusplus
  name: scissorRect
  nameWithType: D3D12RendererAPI::scissorRect
  fullName: D3D12_RECT ShadowEngine::Rendering::D3D12::D3D12RendererAPI::scissorRect
  type: Field
  source:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.h
    startLine: 54
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.h
    startLine: 54
  namespace: ShadowEngine.Rendering.D3D12
  syntax:
    content: 'public: D3D12_RECT scissorRect'
    return:
      type: 60548d48
- uid: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.SetClearColor(const glm::vec4 &)
  id: vec4 &)
  parent: ShadowEngine.Rendering.D3D12.D3D12RendererAPI
  href: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.yml
  langs:
  - cplusplus
  name: SetClearColor(const glm::vec4 &color)
  nameWithType: D3D12RendererAPI::SetClearColor(const glm::vec4 &color)
  fullName: void ShadowEngine::Rendering::D3D12::D3D12RendererAPI::SetClearColor(const glm::vec4 &color)
  overload: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.SetClearColor*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.cpp
    startLine: 102
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.h
    startLine: 69
  namespace: ShadowEngine.Rendering.D3D12
  syntax:
    content: 'public: virtual void SetClearColor(const glm::vec4 &color) override'
    parameters:
    - id: color
      type: 5f4da5ef
  overridden: ShadowEngine.Rendering.RendererAPI.SetClearColor(const glm::vec4 &)
- uid: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.StartFrame(Ref<ConstantBuffer>)
  id: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.StartFrame(Ref<ConstantBuffer>)
  parent: ShadowEngine.Rendering.D3D12.D3D12RendererAPI
  href: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.yml
  langs:
  - cplusplus
  name: StartFrame(Ref<ConstantBuffer> worldCB)
  nameWithType: D3D12RendererAPI::StartFrame(Ref<ConstantBuffer> worldCB)
  fullName: void ShadowEngine::Rendering::D3D12::D3D12RendererAPI::StartFrame(Ref<ConstantBuffer> worldCB)
  overload: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.StartFrame*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.cpp
    startLine: 130
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.h
    startLine: 76
  namespace: ShadowEngine.Rendering.D3D12
  summary: "<p>Starts recording the draw commands. </p>"
  syntax:
    content: 'public: virtual void StartFrame(Ref<ConstantBuffer> worldCB) override'
    parameters:
    - id: worldCB
      type: 2e1cc081ShadowEngine.Rendering.ConstantBuffera08ddfce
  overridden: ShadowEngine.Rendering.RendererAPI.StartFrame(Ref<ConstantBuffer>)
- uid: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.swap_chain
  id: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.swap_chain
  parent: ShadowEngine.Rendering.D3D12.D3D12RendererAPI
  href: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.yml
  langs:
  - cplusplus
  name: swap_chain
  nameWithType: D3D12RendererAPI::swap_chain
  fullName: Ref<D3D12::D3D12SwapChain> ShadowEngine::Rendering::D3D12::D3D12RendererAPI::swap_chain
  type: Field
  source:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.h
    startLine: 46
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.h
    startLine: 46
  namespace: ShadowEngine.Rendering.D3D12
  summary: "<p>Swapchain of the render targets. </p>"
  syntax:
    content: 'public: Ref<D3D12::D3D12SwapChain> swap_chain'
    return:
      type: 2e1cc081ShadowEngine.Rendering.D3D12.D3D12SwapChaina08ddfce
- uid: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.viewPort
  id: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.viewPort
  parent: ShadowEngine.Rendering.D3D12.D3D12RendererAPI
  href: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.yml
  langs:
  - cplusplus
  name: viewPort
  nameWithType: D3D12RendererAPI::viewPort
  fullName: D3D12_VIEWPORT ShadowEngine::Rendering::D3D12::D3D12RendererAPI::viewPort
  type: Field
  source:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.h
    startLine: 53
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.h
    startLine: 53
  namespace: ShadowEngine.Rendering.D3D12
  syntax:
    content: 'public: D3D12_VIEWPORT viewPort'
    return:
      type: 393d65ff
- uid: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.WaitForPreviousFrame()
  id: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.WaitForPreviousFrame()
  parent: ShadowEngine.Rendering.D3D12.D3D12RendererAPI
  href: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.yml
  langs:
  - cplusplus
  name: WaitForPreviousFrame()
  nameWithType: D3D12RendererAPI::WaitForPreviousFrame()
  fullName: void ShadowEngine::Rendering::D3D12::D3D12RendererAPI::WaitForPreviousFrame()
  overload: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.WaitForPreviousFrame*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.cpp
    startLine: 172
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.h
    startLine: 79
  namespace: ShadowEngine.Rendering.D3D12
  syntax:
    content: 'public: void WaitForPreviousFrame()'
- uid: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.worldData
  id: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.worldData
  parent: ShadowEngine.Rendering.D3D12.D3D12RendererAPI
  href: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.yml
  langs:
  - cplusplus
  name: worldData
  nameWithType: D3D12RendererAPI::worldData
  fullName: Ref<ConstantBuffer> ShadowEngine::Rendering::D3D12::D3D12RendererAPI::worldData
  type: Field
  source:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.h
    startLine: 65
  header:
    remote: *o0
    path: ShadowEngine/src/Platform/D3D12/D3D12RendererAPI.h
    startLine: 65
  namespace: ShadowEngine.Rendering.D3D12
  syntax:
    content: 'public: Ref<ConstantBuffer> worldData'
    return:
      type: 2e1cc081ShadowEngine.Rendering.ConstantBuffera08ddfce
references:
- uid: 991b97f2
  spec.cplusplus:
  - name: com_ptr<ID3D12Device>
    fullName: com_ptr<ID3D12Device>
- uid: dce8684bShadowEngine.Rendering.D3D12.D3D12Contexta08ddfce
  spec.cplusplus:
  - name: ShadowEngine::Ref<
    fullName: ShadowEngine::Ref<
  - uid: ShadowEngine.Rendering.D3D12.D3D12Context
  - name: '>'
    fullName: '>'
- uid: 2e1cc081ShadowEngine.Rendering.D3D12.D3D12CommandQueuea08ddfce
  spec.cplusplus:
  - name: Ref<
    fullName: Ref<
  - uid: ShadowEngine.Rendering.D3D12.D3D12CommandQueue
  - name: '>'
    fullName: '>'
- uid: 2e1cc081ShadowEngine.Rendering.D3D12.D3D12CommandLista08ddfce
  spec.cplusplus:
  - name: Ref<
    fullName: Ref<
  - uid: ShadowEngine.Rendering.D3D12.D3D12CommandList
  - name: '>'
    fullName: '>'
- uid: 2e1cc081ShadowEngine.Rendering.D3D12.D3D12SwapChaina08ddfce
  spec.cplusplus:
  - name: Ref<
    fullName: Ref<
  - uid: ShadowEngine.Rendering.D3D12.D3D12SwapChain
  - name: '>'
    fullName: '>'
- uid: 2e1cc081ShadowEngine.Rendering.D3D12.D3D12DepthBuffera08ddfce
  spec.cplusplus:
  - name: Ref<
    fullName: Ref<
  - uid: ShadowEngine.Rendering.D3D12.D3D12DepthBuffer
  - name: '>'
    fullName: '>'
- uid: 393d65ff
  spec.cplusplus:
  - name: D3D12_VIEWPORT
    fullName: D3D12_VIEWPORT
- uid: 60548d48
  spec.cplusplus:
  - name: D3D12_RECT
    fullName: D3D12_RECT
- uid: 64de6a54
  spec.cplusplus:
  - name: float
    fullName: float
- uid: 2e1cc081ShadowEngine.Rendering.D3D12.D3D12Fencea08ddfce
  spec.cplusplus:
  - name: Ref<
    fullName: Ref<
  - uid: ShadowEngine.Rendering.D3D12.D3D12Fence
  - name: '>'
    fullName: '>'
- uid: b14c9cd0
  spec.cplusplus:
  - name: HANDLE
    fullName: HANDLE
- uid: 388be2e0
  spec.cplusplus:
  - name: unsigned long long
    fullName: unsigned long long
- uid: 2e1cc081ShadowEngine.Rendering.ConstantBuffera08ddfce
  spec.cplusplus:
  - name: Ref<
    fullName: Ref<
  - uid: ShadowEngine.Rendering.ConstantBuffer
  - name: '>'
    fullName: '>'
- uid: dce8684bShadowEngine.Rendering.GraphicsContexta08ddfce
  spec.cplusplus:
  - name: ShadowEngine::Ref<
    fullName: ShadowEngine::Ref<
  - uid: ShadowEngine.Rendering.GraphicsContext
  - name: '>'
    fullName: '>'
- uid: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.Init*
  name: Init
  nameWithType: D3D12RendererAPI::Init
  fullName: void ShadowEngine::Rendering::D3D12::D3D12RendererAPI::Init
- uid: 5f4da5ef
  spec.cplusplus:
  - name: const glm::vec4 &
    fullName: const glm::vec4 &
- uid: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.SetClearColor*
  name: SetClearColor
  nameWithType: D3D12RendererAPI::SetClearColor
  fullName: void ShadowEngine::Rendering::D3D12::D3D12RendererAPI::SetClearColor
- uid: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.Clear*
  name: Clear
  nameWithType: D3D12RendererAPI::Clear
  fullName: void ShadowEngine::Rendering::D3D12::D3D12RendererAPI::Clear
- uid: 8253bb38ShadowEngine.Assets.Mesha08ddfce
  spec.cplusplus:
  - name: const Ref<
    fullName: const Ref<
  - uid: ShadowEngine.Assets.Mesh
  - name: '>'
    fullName: '>'
- uid: ed5b8545
  spec.cplusplus:
  - name: const Ref<Assets::Material>
    fullName: const Ref<Assets::Material>
- uid: 617f6632
  spec.cplusplus:
  - name: const glm::mat4 &
    fullName: const glm::mat4 &
- uid: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.Draw*
  name: Draw
  nameWithType: D3D12RendererAPI::Draw
  fullName: void ShadowEngine::Rendering::D3D12::D3D12RendererAPI::Draw
- uid: 322691f1ShadowEngine.Assets.Mesh1a4c7661
  spec.cplusplus:
  - name: const std::shared_ptr<
    fullName: const std::shared_ptr<
  - uid: ShadowEngine.Assets.Mesh
  - name: '> &'
    fullName: '> &'
- uid: 8b5f0ee3
  spec.cplusplus:
  - name: const std::shared_ptr<Assets::Material> &
    fullName: const std::shared_ptr<Assets::Material> &
- uid: 1413e510ShadowEngine.Rendering.ConstantBuffer76390d34
  spec.cplusplus:
  - name: 'const '
    fullName: 'const '
  - uid: ShadowEngine.Rendering.ConstantBuffer
  - name: " &"
    fullName: " &"
- uid: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.StartFrame*
  name: StartFrame
  nameWithType: D3D12RendererAPI::StartFrame
  fullName: void ShadowEngine::Rendering::D3D12::D3D12RendererAPI::StartFrame
- uid: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.EndFrame*
  name: EndFrame
  nameWithType: D3D12RendererAPI::EndFrame
  fullName: void ShadowEngine::Rendering::D3D12::D3D12RendererAPI::EndFrame
- uid: ShadowEngine.Rendering.D3D12.D3D12RendererAPI.WaitForPreviousFrame*
  name: WaitForPreviousFrame
  nameWithType: D3D12RendererAPI::WaitForPreviousFrame
  fullName: void ShadowEngine::Rendering::D3D12::D3D12RendererAPI::WaitForPreviousFrame
- uid: ShadowEngine.Rendering.RendererAPI.API
- uid: ShadowEngine.Rendering.RendererAPI.GetAPI()
  parent: ShadowEngine.Rendering.RendererAPI
  href: ShadowEngine.Rendering.RendererAPI.yml
  name: GetAPI()
  nameWithType: RendererAPI::GetAPI()
  fullName: static API ShadowEngine::Rendering::RendererAPI::GetAPI()
  type: Method
  syntax:
    content: 'public: static API GetAPI()'
    return:
      type: 384297db
- uid: ShadowEngine.Rendering.RendererAPI.RendererAPI::MakeRendererAPI()
  parent: ShadowEngine.Rendering.RendererAPI
  href: ShadowEngine.Rendering.RendererAPI.yml
  name: RendererAPI::MakeRendererAPI()
  nameWithType: RendererAPI::RendererAPI::MakeRendererAPI()
  fullName: static RendererAPI* ShadowEngine::Rendering::RendererAPI::RendererAPI::MakeRendererAPI()
  type: Method
  syntax:
    content: 'public: static RendererAPI * RendererAPI::MakeRendererAPI()'
    return:
      type: ShadowEngine.Rendering.RendererAPI68bc11b4
- uid: ShadowEngine.Rendering.RendererAPI
  parent: ShadowEngine.Rendering
  href: ShadowEngine.Rendering.RendererAPI.yml
  name: RendererAPI
  nameWithType: RendererAPI
  fullName: ShadowEngine::Rendering::RendererAPI
  type: Class
  syntax:
    content: 'public: class RendererAPI'
- uid: ShadowEngine.Rendering.D3D12.D3D12Context
  parent: ShadowEngine.Rendering.D3D12
  href: ShadowEngine.Rendering.D3D12.D3D12Context.yml
  name: D3D12Context
  nameWithType: D3D12Context
  fullName: ShadowEngine::Rendering::D3D12::D3D12Context
  type: Class
  syntax:
    content: 'public: class D3D12Context : public aphicsContext'
- uid: ShadowEngine.Rendering.D3D12.D3D12CommandQueue
  parent: ShadowEngine.Rendering.D3D12
  href: ShadowEngine.Rendering.D3D12.D3D12CommandQueue.yml
  name: D3D12CommandQueue
  nameWithType: D3D12CommandQueue
  fullName: ShadowEngine::Rendering::D3D12::D3D12CommandQueue
  type: Class
  syntax:
    content: 'public: class D3D12CommandQueue'
- uid: ShadowEngine.Rendering.D3D12.D3D12CommandList
  parent: ShadowEngine.Rendering.D3D12
  href: ShadowEngine.Rendering.D3D12.D3D12CommandList.yml
  name: D3D12CommandList
  nameWithType: D3D12CommandList
  fullName: ShadowEngine::Rendering::D3D12::D3D12CommandList
  type: Class
  summary: "<p>A list of commands Used to record graphics/compute commands and than submit them at once. </p>"
  syntax:
    content: 'public: class D3D12CommandList'
- uid: ShadowEngine.Rendering.D3D12.D3D12SwapChain
  parent: ShadowEngine.Rendering.D3D12
  href: ShadowEngine.Rendering.D3D12.D3D12SwapChain.yml
  name: D3D12SwapChain
  nameWithType: D3D12SwapChain
  fullName: ShadowEngine::Rendering::D3D12::D3D12SwapChain
  type: Class
  summary: "<p>Dx12 Swap Chain Used for swapping the render and present render targets. </p>"
  syntax:
    content: 'public: class D3D12SwapChain'
- uid: ShadowEngine.Rendering.D3D12.D3D12DepthBuffer
  parent: ShadowEngine.Rendering.D3D12
  href: ShadowEngine.Rendering.D3D12.D3D12DepthBuffer.yml
  name: D3D12DepthBuffer
  nameWithType: D3D12DepthBuffer
  fullName: ShadowEngine::Rendering::D3D12::D3D12DepthBuffer
  type: Class
  syntax:
    content: 'public: class D3D12DepthBuffer'
- uid: ShadowEngine.Rendering.D3D12.D3D12Fence
  parent: ShadowEngine.Rendering.D3D12
  href: ShadowEngine.Rendering.D3D12.D3D12Fence.yml
  name: D3D12Fence
  nameWithType: D3D12Fence
  fullName: ShadowEngine::Rendering::D3D12::D3D12Fence
  type: Class
  syntax:
    content: 'public: class D3D12Fence'
- uid: ShadowEngine.Rendering.ConstantBuffer
  parent: ShadowEngine.Rendering
  href: ShadowEngine.Rendering.ConstantBuffer.yml
  name: ConstantBuffer
  nameWithType: ConstantBuffer
  fullName: ShadowEngine::Rendering::ConstantBuffer
  type: Class
  syntax:
    content: 'public: class ConstantBuffer'
- uid: ShadowEngine.Rendering.RendererAPI.Init(ShadowEngine::Ref<GraphicsContext>)
  parent: ShadowEngine.Rendering.RendererAPI
  href: ShadowEngine.Rendering.RendererAPI.yml
  name: Init(ShadowEngine::Ref<GraphicsContext> ctx)
  nameWithType: RendererAPI::Init(ShadowEngine::Ref<GraphicsContext> ctx)
  fullName: virtual void ShadowEngine::Rendering::RendererAPI::Init(ShadowEngine::Ref<GraphicsContext> ctx)
  type: Method
  syntax:
    content: 'public: virtual void Init(ShadowEngine::Ref<GraphicsContext> ctx)=0'
    parameters:
    - id: ctx
      type: dce8684bShadowEngine.Rendering.GraphicsContexta08ddfce
- uid: ShadowEngine.Rendering.GraphicsContext
  parent: ShadowEngine.Rendering
  href: ShadowEngine.Rendering.GraphicsContext.yml
  name: GraphicsContext
  nameWithType: GraphicsContext
  fullName: ShadowEngine::Rendering::GraphicsContext
  type: Class
  syntax:
    content: 'public: class GraphicsContext'
- uid: ShadowEngine.Rendering.RendererAPI.SetClearColor(const glm::vec4 &)
  parent: ShadowEngine.Rendering.RendererAPI
  href: ShadowEngine.Rendering.RendererAPI.yml
  name: SetClearColor(const glm::vec4 &color)
  nameWithType: RendererAPI::SetClearColor(const glm::vec4 &color)
  fullName: virtual void ShadowEngine::Rendering::RendererAPI::SetClearColor(const glm::vec4 &color)
  type: Method
  syntax:
    content: 'public: virtual void SetClearColor(const glm::vec4 &color)=0'
    parameters:
    - id: color
      type: 5f4da5ef
- uid: ShadowEngine.Rendering.RendererAPI.Clear()
  parent: ShadowEngine.Rendering.RendererAPI
  href: ShadowEngine.Rendering.RendererAPI.yml
  name: Clear()
  nameWithType: RendererAPI::Clear()
  fullName: virtual void ShadowEngine::Rendering::RendererAPI::Clear()
  type: Method
  syntax:
    content: 'public: virtual void Clear()=0'
- uid: ShadowEngine.Rendering.RendererAPI.Draw(const Ref<Assets::Mesh>,const Ref<Assets::Material>,const glm::mat4 &)
  parent: ShadowEngine.Rendering.RendererAPI
  href: ShadowEngine.Rendering.RendererAPI.yml
  name: Draw(const Ref<Assets::Mesh> mesh, const Ref<Assets::Material> shader, const glm::mat4 &transform=glm::mat4(1.0f))
  nameWithType: RendererAPI::Draw(const Ref<Assets::Mesh> mesh, const Ref<Assets::Material> shader, const glm::mat4 &transform=glm::mat4(1.0f))
  fullName: virtual void ShadowEngine::Rendering::RendererAPI::Draw(const Ref<Assets::Mesh> mesh, const Ref<Assets::Material> shader, const glm::mat4 &transform=glm::mat4(1.0f))
  type: Method
  syntax:
    content: 'public: virtual void Draw(const Ref<Assets::Mesh> mesh, const Ref<Assets::Material> shader, const glm::mat4 &transform=glm::mat4(1.0f))=0'
    parameters:
    - id: mesh
      type: 8253bb38ShadowEngine.Assets.Mesha08ddfce
    - id: shader
      type: ed5b8545
    - id: transform
      type: 617f6632
- uid: ShadowEngine.Assets.Mesh
  parent: ShadowEngine.Assets
  href: ShadowEngine.Assets.Mesh.yml
  name: Mesh
  nameWithType: Mesh
  fullName: ShadowEngine::Assets::Mesh
  type: Class
  syntax:
    content: 'public: class Mesh'
- uid: ShadowEngine.Rendering.RendererAPI.Draw(const std::shared_ptr<Assets::Mesh> &,const std::shared_ptr<Assets::Material> &,const ConstantBuffer &)
  parent: ShadowEngine.Rendering.RendererAPI
  href: ShadowEngine.Rendering.RendererAPI.yml
  name: Draw(const std::shared_ptr<Assets::Mesh> &mesh, const std::shared_ptr<Assets::Material> &shader, const ConstantBuffer &materialData)
  nameWithType: RendererAPI::Draw(const std::shared_ptr<Assets::Mesh> &mesh, const std::shared_ptr<Assets::Material> &shader, const ConstantBuffer &materialData)
  fullName: virtual void ShadowEngine::Rendering::RendererAPI::Draw(const std::shared_ptr<Assets::Mesh> &mesh, const std::shared_ptr<Assets::Material> &shader, const ConstantBuffer &materialData)
  type: Method
  syntax:
    content: 'public: virtual void Draw(const std::shared_ptr<Assets::Mesh> &mesh, const std::shared_ptr<Assets::Material> &shader, const ConstantBuffer &materialData)=0'
    parameters:
    - id: mesh
      type: 322691f1ShadowEngine.Assets.Mesh1a4c7661
    - id: shader
      type: 8b5f0ee3
    - id: materialData
      type: 1413e510ShadowEngine.Rendering.ConstantBuffer76390d34
- uid: ShadowEngine.Rendering.RendererAPI.StartFrame(Ref<ConstantBuffer>)
  parent: ShadowEngine.Rendering.RendererAPI
  href: ShadowEngine.Rendering.RendererAPI.yml
  name: StartFrame(Ref<ConstantBuffer> worldCB)
  nameWithType: RendererAPI::StartFrame(Ref<ConstantBuffer> worldCB)
  fullName: virtual void ShadowEngine::Rendering::RendererAPI::StartFrame(Ref<ConstantBuffer> worldCB)
  type: Method
  summary: "<p>Starts recording the draw commands. </p>"
  syntax:
    content: 'public: virtual void StartFrame(Ref<ConstantBuffer> worldCB)=0'
    parameters:
    - id: worldCB
      type: 2e1cc081ShadowEngine.Rendering.ConstantBuffera08ddfce
- uid: ShadowEngine.Rendering.RendererAPI.EndFrame()
  parent: ShadowEngine.Rendering.RendererAPI
  href: ShadowEngine.Rendering.RendererAPI.yml
  name: EndFrame()
  nameWithType: RendererAPI::EndFrame()
  fullName: virtual void ShadowEngine::Rendering::RendererAPI::EndFrame()
  type: Method
  summary: "<p>Finalizes the render command recording. </p>"
  syntax:
    content: 'public: virtual void EndFrame()=0'
