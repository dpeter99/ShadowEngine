### YamlMime:ManagedReference
items:
- uid: ShadowEngine.World.ShadowWorld
  id: ShadowEngine.World.ShadowWorld
  parent: ShadowEngine.World
  children:
  - ShadowEngine.World.ShadowWorld.activeMap
  - ShadowEngine.World.ShadowWorld.chunkSizeX
  - ShadowEngine.World.ShadowWorld.chunkSizeY
  - ShadowEngine.World.ShadowWorld.id
  - ShadowEngine.World.ShadowWorld.maps
  - ShadowEngine.World.ShadowWorld.name
  - ShadowEngine.World.ShadowWorld.SetActiveMap(std::string)
  - ShadowEngine.World.ShadowWorld.Update(const ShadowMath::Vector2int &)
  href: ShadowEngine.World.ShadowWorld.yml
  langs:
  - cplusplus
  name: ShadowWorld
  nameWithType: ShadowWorld
  fullName: ShadowEngine::World::ShadowWorld
  type: Class
  source:
    remote: &o0
      path: ShadowEngine/src/ShadowMap/ShadowWorld.h
      branch: d3d12
      repo: https://github.com/dpeter99/ShadowEngine
    path: ShadowEngine/src/ShadowMap/ShadowWorld.h
    startLine: 59
  header:
    remote: *o0
    path: ShadowEngine/src/ShadowMap/ShadowWorld.h
    startLine: 60
  namespace: ShadowEngine.World
  syntax:
    content: 'public: class ShadowWorld : public adowAsset'
  inheritance:
  - System::Object
  - ShadowEngine.SHObject
  - ShadowEngine.Assets.ShadowAsset
  inheritedMembers:
  - ShadowEngine.SHObject.GenerateId()
  - ShadowEngine.SHObject.GetType()
  - ShadowEngine.SHObject.GetTypeId()
  - ShadowEngine.SHObject.~SHObject()
- uid: ShadowEngine.World.ShadowWorld.activeMap
  id: ShadowEngine.World.ShadowWorld.activeMap
  parent: ShadowEngine.World.ShadowWorld
  href: ShadowEngine.World.ShadowWorld.yml
  langs:
  - cplusplus
  name: activeMap
  nameWithType: ShadowWorld::activeMap
  fullName: LevelMap* ShadowEngine::World::ShadowWorld::activeMap
  type: Field
  source:
    remote: *o0
    path: ShadowEngine/src/ShadowMap/ShadowWorld.h
    startLine: 67
  header:
    remote: *o0
    path: ShadowEngine/src/ShadowMap/ShadowWorld.h
    startLine: 67
  namespace: ShadowEngine.World
  syntax:
    content: 'public: LevelMap * activeMap'
    return:
      type: ShadowEngine.World.LevelMap68bc11b4
- uid: ShadowEngine.World.ShadowWorld.chunkSizeX
  id: ShadowEngine.World.ShadowWorld.chunkSizeX
  parent: ShadowEngine.World.ShadowWorld
  href: ShadowEngine.World.ShadowWorld.yml
  langs:
  - cplusplus
  name: chunkSizeX
  nameWithType: ShadowWorld::chunkSizeX
  fullName: int ShadowEngine::World::ShadowWorld::chunkSizeX
  type: Field
  source:
    remote: *o0
    path: ShadowEngine/src/ShadowMap/ShadowWorld.h
    startLine: 74
  header:
    remote: *o0
    path: ShadowEngine/src/ShadowMap/ShadowWorld.h
    startLine: 74
  namespace: ShadowEngine.World
  syntax:
    content: 'public: int chunkSizeX'
    return:
      type: f75371fa
- uid: ShadowEngine.World.ShadowWorld.chunkSizeY
  id: ShadowEngine.World.ShadowWorld.chunkSizeY
  parent: ShadowEngine.World.ShadowWorld
  href: ShadowEngine.World.ShadowWorld.yml
  langs:
  - cplusplus
  name: chunkSizeY
  nameWithType: ShadowWorld::chunkSizeY
  fullName: int ShadowEngine::World::ShadowWorld::chunkSizeY
  type: Field
  source:
    remote: *o0
    path: ShadowEngine/src/ShadowMap/ShadowWorld.h
    startLine: 75
  header:
    remote: *o0
    path: ShadowEngine/src/ShadowMap/ShadowWorld.h
    startLine: 75
  namespace: ShadowEngine.World
  syntax:
    content: 'public: int chunkSizeY'
    return:
      type: f75371fa
- uid: ShadowEngine.World.ShadowWorld.id
  id: ShadowEngine.World.ShadowWorld.id
  parent: ShadowEngine.World.ShadowWorld
  href: ShadowEngine.World.ShadowWorld.yml
  langs:
  - cplusplus
  name: id
  nameWithType: ShadowWorld::id
  fullName: std::string ShadowEngine::World::ShadowWorld::id
  type: Field
  source:
    remote: *o0
    path: ShadowEngine/src/ShadowMap/ShadowWorld.h
    startLine: 64
  header:
    remote: *o0
    path: ShadowEngine/src/ShadowMap/ShadowWorld.h
    startLine: 64
  namespace: ShadowEngine.World
  syntax:
    content: 'public: std::string id'
    return:
      type: 9626e5dd
- uid: ShadowEngine.World.ShadowWorld.maps
  id: ShadowEngine.World.ShadowWorld.maps
  parent: ShadowEngine.World.ShadowWorld
  href: ShadowEngine.World.ShadowWorld.yml
  langs:
  - cplusplus
  name: maps
  nameWithType: ShadowWorld::maps
  fullName: std::map<std::string, LevelMap*> ShadowEngine::World::ShadowWorld::maps
  type: Field
  source:
    remote: *o0
    path: ShadowEngine/src/ShadowMap/ShadowWorld.h
    startLine: 70
  header:
    remote: *o0
    path: ShadowEngine/src/ShadowMap/ShadowWorld.h
    startLine: 70
  namespace: ShadowEngine.World
  syntax:
    content: 'public: std::map<std::string, LevelMap *> maps'
    return:
      type: f7eccd07ShadowEngine.World.LevelMap996dd46e
- uid: ShadowEngine.World.ShadowWorld.name
  id: ShadowEngine.World.ShadowWorld.name
  parent: ShadowEngine.World.ShadowWorld
  href: ShadowEngine.World.ShadowWorld.yml
  langs:
  - cplusplus
  name: name
  nameWithType: ShadowWorld::name
  fullName: std::string ShadowEngine::World::ShadowWorld::name
  type: Field
  source:
    remote: *o0
    path: ShadowEngine/src/ShadowMap/ShadowWorld.h
    startLine: 63
  header:
    remote: *o0
    path: ShadowEngine/src/ShadowMap/ShadowWorld.h
    startLine: 63
  namespace: ShadowEngine.World
  syntax:
    content: 'public: std::string name'
    return:
      type: 9626e5dd
- uid: ShadowEngine.World.ShadowWorld.SetActiveMap(std::string)
  id: string)
  parent: ShadowEngine.World.ShadowWorld
  href: ShadowEngine.World.ShadowWorld.yml
  langs:
  - cplusplus
  name: SetActiveMap(std::string name)
  nameWithType: ShadowWorld::SetActiveMap(std::string name)
  fullName: void ShadowEngine::World::ShadowWorld::SetActiveMap(std::string name)
  overload: ShadowEngine.World.ShadowWorld.SetActiveMap*
  type: Method
  source:
    remote: &o1
      path: ShadowEngine/src/ShadowMap/ShadowWorld.cpp
      branch: d3d12
      repo: https://github.com/dpeter99/ShadowEngine
    path: ShadowEngine/src/ShadowMap/ShadowWorld.cpp
    startLine: 18
  header:
    remote: *o0
    path: ShadowEngine/src/ShadowMap/ShadowWorld.h
    startLine: 84
  namespace: ShadowEngine.World
  syntax:
    content: 'public: void SetActiveMap(std::string name)'
    parameters:
    - id: name
      type: 9626e5dd
- uid: ShadowEngine.World.ShadowWorld.Update(const ShadowMath::Vector2int &)
  id: Vector2int &)
  parent: ShadowEngine.World.ShadowWorld
  href: ShadowEngine.World.ShadowWorld.yml
  langs:
  - cplusplus
  name: Update(const ShadowMath::Vector2int &pos)
  nameWithType: ShadowWorld::Update(const ShadowMath::Vector2int &pos)
  fullName: void ShadowEngine::World::ShadowWorld::Update(const ShadowMath::Vector2int &pos)
  overload: ShadowEngine.World.ShadowWorld.Update*
  type: Method
  source:
    remote: *o1
    path: ShadowEngine/src/ShadowMap/ShadowWorld.cpp
    startLine: 9
  header:
    remote: *o0
    path: ShadowEngine/src/ShadowMap/ShadowWorld.h
    startLine: 82
  namespace: ShadowEngine.World
  syntax:
    content: 'public: void Update(const ShadowMath::Vector2int &pos)'
    parameters:
    - id: pos
      type: 1413e510ShadowMath.Vector2int76390d34
references:
- uid: 9626e5dd
  spec.cplusplus:
  - name: std::string
    fullName: std::string
- uid: ShadowEngine.World.LevelMap68bc11b4
  spec.cplusplus:
  - uid: ShadowEngine.World.LevelMap
  - name: " *"
    fullName: " *"
- uid: f7eccd07ShadowEngine.World.LevelMap996dd46e
  spec.cplusplus:
  - name: 'std::map<std::string, '
    fullName: 'std::map<std::string, '
  - uid: ShadowEngine.World.LevelMap
  - name: " *>"
    fullName: " *>"
- uid: f75371fa
  spec.cplusplus:
  - name: int
    fullName: int
- uid: 1413e510ShadowMath.Vector2int76390d34
  spec.cplusplus:
  - name: 'const '
    fullName: 'const '
  - uid: ShadowMath.Vector2int
  - name: " &"
    fullName: " &"
- uid: ShadowEngine.World.ShadowWorld.Update*
  name: Update
  nameWithType: ShadowWorld::Update
  fullName: void ShadowEngine::World::ShadowWorld::Update
- uid: ShadowEngine.World.ShadowWorld.SetActiveMap*
  name: SetActiveMap
  nameWithType: ShadowWorld::SetActiveMap
  fullName: void ShadowEngine::World::ShadowWorld::SetActiveMap
- uid: ShadowEngine.SHObject.GenerateId()
  parent: ShadowEngine.SHObject
  href: ShadowEngine.SHObject.yml
  name: GenerateId()
  nameWithType: SHObject::GenerateId()
  fullName: static uint64_t ShadowEngine::SHObject::GenerateId()
  type: Method
  summary: "<p>Generates a new UID for each call. </p>"
  syntax:
    content: 'protected: static uint64_t GenerateId() noexcept'
    return:
      type: 6d8267d6
      description: <p>Unique ID </p>
- uid: ShadowEngine.SHObject.GetType()
  parent: ShadowEngine.SHObject
  href: ShadowEngine.SHObject.yml
  name: GetType()
  nameWithType: SHObject::GetType()
  fullName: virtual const std::string& ShadowEngine::SHObject::GetType()
  type: Method
  summary: "<p>Returns the top level class type name of the object. </p>"
  syntax:
    content: 'public: virtual const std::string & GetType() const =0'
    return:
      type: 360fc41e
      description: <p>Class name string </p>
- uid: ShadowEngine.SHObject.GetTypeId()
  parent: ShadowEngine.SHObject
  href: ShadowEngine.SHObject.yml
  name: GetTypeId()
  nameWithType: SHObject::GetTypeId()
  fullName: virtual const uint64_t ShadowEngine::SHObject::GetTypeId()
  type: Method
  summary: "<p>Gets the top level type ID. </p>"
  syntax:
    content: 'public: virtual const uint64_t GetTypeId() const =0'
    return:
      type: 29dc5929
      description: <p>UID of the class </p>
- uid: ShadowEngine.SHObject.~SHObject()
  parent: ShadowEngine.SHObject
  href: ShadowEngine.SHObject.yml
  name: ~SHObject()
  nameWithType: SHObject::~SHObject()
  fullName: virtual ShadowEngine::SHObject::~SHObject()
  type: Constructor
  syntax:
    content: 'public: virtual ~SHObject()=default'
- uid: ShadowEngine.Assets.ShadowAsset
  parent: ShadowEngine.Assets
  href: ShadowEngine.Assets.ShadowAsset.yml
  name: ShadowAsset
  nameWithType: ShadowAsset
  fullName: ShadowEngine::Assets::ShadowAsset
  type: Class
  syntax:
    content: 'public: class ShadowAsset : public HObject'
- uid: ShadowEngine.World.LevelMap
  parent: ShadowEngine.World
  href: ShadowEngine.World.LevelMap.yml
  name: LevelMap
  nameWithType: LevelMap
  fullName: ShadowEngine::World::LevelMap
  type: Class
  syntax:
    content: 'public: class LevelMap'
- uid: ShadowMath.Vector2int
  parent: ShadowMath
  href: ShadowMath.Vector2int.yml
  name: Vector2int
  nameWithType: Vector2int
  fullName: ShadowMath::Vector2int
  type: Struct
  syntax:
    content: 'public: struct Vector2int'
